<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>WebGL2的HelloWorld</title>
    <link href="/posts/7a621609/"/>
    <url>/posts/7a621609/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>WebGL2是当前WebGL的新版本，支持glsl 3.0语言，100%与WebGL兼容，有许多新的特性。</p><h3 id="编写一个html文件"><a href="#编写一个html文件" class="headerlink" title="编写一个html文件"></a>编写一个html文件</h3><ul><li>index.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>WebGL2<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        <span class="hljs-selector-tag">canvas</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./main.js&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;webgl-canvas&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="编写顶点着色器"><a href="#编写顶点着色器" class="headerlink" title="编写顶点着色器"></a>编写顶点着色器</h3><ul><li>使用#version 300 es显式声明</li></ul><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-meta">#version 300 es</span><br><span class="hljs-keyword">layout</span> (<span class="hljs-keyword">location</span>=<span class="hljs-number">0</span>) <span class="hljs-keyword">in</span> <span class="hljs-type">vec4</span> position;<br><span class="hljs-keyword">layout</span> (<span class="hljs-keyword">location</span>=<span class="hljs-number">1</span>) <span class="hljs-keyword">in</span> <span class="hljs-type">vec3</span> color;<br><span class="hljs-keyword">out</span> <span class="hljs-type">vec3</span> vColor;<br><span class="hljs-type">void</span> main() &#123;<br>    vColor = color;<br>    <span class="hljs-built_in">gl_Position</span> = position;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="编写片面着色器"><a href="#编写片面着色器" class="headerlink" title="编写片面着色器"></a>编写片面着色器</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-meta">#version 300 es</span><br><span class="hljs-keyword">precision</span> <span class="hljs-keyword">highp</span> <span class="hljs-type">float</span>;<br><span class="hljs-keyword">in</span> <span class="hljs-type">vec3</span> vColor;<br><span class="hljs-keyword">out</span> <span class="hljs-type">vec4</span> fragColor;<br><span class="hljs-type">void</span> main() &#123;<br>    fragColor = <span class="hljs-type">vec4</span>(vColor, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><ul><li>其他部分与webgl的实现基本一致</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;webgl-canvas&quot;</span>);<br>canvas.width = <span class="hljs-built_in">window</span>.innerWidth;<br>canvas.height = <span class="hljs-built_in">window</span>.innerHeight;<br><br><span class="hljs-keyword">var</span> gl = canvas.getContext(<span class="hljs-string">&quot;webgl2&quot;</span>);<br><span class="hljs-keyword">if</span> (!gl) &#123;<br>    <span class="hljs-built_in">console</span>.error(<span class="hljs-string">&quot;WebGL 2 not available&quot;</span>);<br>    <span class="hljs-built_in">document</span>.body.innerHTML = <span class="hljs-string">&quot;This example requires WebGL 2 which is unavailable on this system.&quot;</span><br>&#125;<br><br>gl.clearColor(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">var</span> vsSource = vsStr;<br><span class="hljs-keyword">var</span> fsSource = fsStr;<br><br><span class="hljs-keyword">var</span> vertexShader = gl.createShader(gl.VERTEX_SHADER);<br>gl.shaderSource(vertexShader, vsSource);<br>gl.compileShader(vertexShader);<br><br><span class="hljs-keyword">if</span> (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) &#123;<br>    <span class="hljs-built_in">console</span>.error(gl.getShaderInfoLog(vertexShader));<br>&#125;<br><br><span class="hljs-keyword">var</span> fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);<br>gl.shaderSource(fragmentShader, fsSource);<br>gl.compileShader(fragmentShader);<br><br><span class="hljs-keyword">if</span> (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) &#123;<br>    <span class="hljs-built_in">console</span>.error(gl.getShaderInfoLog(fragmentShader));<br>&#125;<br><br><span class="hljs-keyword">var</span> program = gl.createProgram();<br>gl.attachShader(program, vertexShader);<br>gl.attachShader(program, fragmentShader);<br>gl.linkProgram(program);<br><br><span class="hljs-keyword">if</span> (!gl.getProgramParameter(program, gl.LINK_STATUS)) &#123;<br>    <span class="hljs-built_in">console</span>.error(gl.getProgramInfoLog(program));<br>&#125;<br><br>gl.useProgram(program);<br><br><span class="hljs-keyword">var</span> triangleArray = gl.createVertexArray();<br>gl.bindVertexArray(triangleArray);<br><br><span class="hljs-keyword">var</span> positions = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.0</span>,<br>    <span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.0</span>,<br>    <span class="hljs-number">0.0</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.0</span><br>]);<br><br><span class="hljs-keyword">var</span> positionBuffer = gl.createBuffer();<br>gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);<br>gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);<br>gl.vertexAttribPointer(<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, gl.FLOAT, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>gl.enableVertexAttribArray(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">var</span> colors = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>,<br>    <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>,<br>    <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span><br>]);<br><br><span class="hljs-keyword">var</span> colorBuffer = gl.createBuffer();<br>gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);<br>gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);<br>gl.vertexAttribPointer(<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, gl.FLOAT, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>gl.enableVertexAttribArray(<span class="hljs-number">1</span>);<br><br>gl.clear(gl.COLOR_BUFFER_BIT);<br>gl.drawArrays(gl.TRIANGLES, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><h3 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h3><p><img src="/images/WebGL2%E7%9A%84HelloWorld/pic1.png"></p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webgl2</tag>
      
      <tag>shader</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WebGL的shader编写</title>
    <link href="/posts/d048c050/"/>
    <url>/posts/d048c050/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/logo.jpg"></p><p>WebGL(Web图形库)是一个JavaScript API,可在任何兼容的Web浏览器中渲染高性能的交互式3D和2D图形。</p><h3 id="函数支持查询"><a href="#函数支持查询" class="headerlink" title="函数支持查询"></a>函数支持查询</h3><p><a href="http://web.eecs.umich.edu/~sugih/courses/eecs487/common/notes/APITables-zhs.xml">http://web.eecs.umich.edu/~sugih/courses/eecs487/common/notes/APITables-zhs.xml</a></p><h3 id="基础内容"><a href="#基础内容" class="headerlink" title="基础内容"></a>基础内容</h3><h4 id="gl-FragCoord"><a href="#gl-FragCoord" class="headerlink" title="gl_FragCoord"></a>gl_FragCoord</h4><ul><li>这个是当前着色器像素点的位置，是一个vec2值,表明了当前像素点的位置</li><li>类似与图片中某一点的像素都有对应的x和y的坐标</li></ul><h4 id="u-time"><a href="#u-time" class="headerlink" title="u_time"></a>u_time</h4><ul><li>一个时间的增量</li><li>用来推动整个shader世界的运行</li></ul><h4 id="u-resolution"><a href="#u-resolution" class="headerlink" title="u_resolution"></a>u_resolution</h4><ul><li>设备分辨率</li><li>类似与图片的宽度与高度</li></ul><h4 id="gl-FragColor"><a href="#gl-FragColor" class="headerlink" title="gl_FragColor"></a>gl_FragColor</h4><ul><li>片着色器的颜色设置，是一个vec4值</li><li>类似修改图片中对应[x,y]坐标中的像素</li></ul><h3 id="高级内容"><a href="#高级内容" class="headerlink" title="高级内容"></a>高级内容</h3><h4 id="转换区间"><a href="#转换区间" class="headerlink" title="转换区间"></a>转换区间</h4><ul><li>原始数值区间是笛卡尔坐标系 x[0 ~ 1], y[0 ~ 1],原点在左下角</li><li>当坐标减去一个 vec2(0.5)值 可以转化为x[-0.5, 0.5], y[-0.5, 0.5]，原点在中心</li><li>在减去0.5的基础上再乘以2 可以转化为x[-1, 1], y[-1, 1],原点在中心</li></ul><h3 id="无图Shader实例"><a href="#无图Shader实例" class="headerlink" title="无图Shader实例"></a>无图Shader实例</h3><h4 id="灰色背景"><a href="#灰色背景" class="headerlink" title="灰色背景"></a>灰色背景</h4><ul><li>一个简单的灰色背景</li><li>【precision mediump float;】为精度描述</li><li>【gl_FragColor】为输出片颜色</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.6</span>, <span class="hljs-number">0.6</span>, <span class="hljs-number">0.6</span>);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic01.jpg"></p><h4 id="画一个圆"><a href="#画一个圆" class="headerlink" title="画一个圆"></a>画一个圆</h4><ul><li>step(edge, x)<ul><li>如果x &lt; edge，返回0.0，否则返回1.0</li></ul></li><li>length(x)<ul><li>返回矢量x的长度</li></ul></li><li>将小于当前radius的部分涂成黑色 其他涂成白色 实现画出圆</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">circleShape</span><span class="hljs-params">(vec2 position, <span class="hljs-keyword">float</span> radius)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">step</span>(radius, <span class="hljs-built_in">length</span>(position - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>)));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 position = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    <span class="hljs-keyword">float</span> circle = <span class="hljs-built_in">circleShape</span>(position, <span class="hljs-number">0.2</span>);<br>    color = <span class="hljs-built_in">vec3</span>(circle);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color.rgb, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic02.jpg"></p><h4 id="画一个矩形"><a href="#画一个矩形" class="headerlink" title="画一个矩形"></a>画一个矩形</h4><ul><li>使用vec2(0.5) - size * 0.5 使得矩形的中心点在当前的窗口中心</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">rectShape</span><span class="hljs-params">(vec2 position, vec2 size)</span> </span>&#123;<br>    size = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>) - size * <span class="hljs-number">0.5</span>;<br>    vec2 shaper = <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">step</span>(size.x, position.x), <span class="hljs-built_in">step</span>(size.y, position.y));<br>    shaper *= <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">step</span>(size.x, <span class="hljs-number">1.0</span> - position.x), <span class="hljs-built_in">step</span>(size.y, <span class="hljs-number">1.0</span> - position.y));<br>    <span class="hljs-keyword">return</span> shaper.x * shaper.y;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 position = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    color = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">rectShape</span>(position, <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.2</span>, <span class="hljs-number">0.5</span>)));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color.rgb, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic03.jpg"></p><h4 id="画一个多边形"><a href="#画一个多边形" class="headerlink" title="画一个多边形"></a>画一个多边形</h4><ul><li>atan和cos为常规的数学库函数</li><li>画出的其实为三角形的组合体</li><li>当边数很大的时候可以画出光滑圆</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> PI = <span class="hljs-number">3.1415926535</span>;<br><br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">polyShape</span><span class="hljs-params">(vec2 position, <span class="hljs-keyword">float</span> radius, <span class="hljs-keyword">float</span> sides)</span> </span>&#123;<br>position = position * <span class="hljs-number">2.0</span> - <span class="hljs-number">1.0</span>;<br><span class="hljs-keyword">float</span> angle = <span class="hljs-built_in">atan</span>(position.x, position.y);<br><span class="hljs-keyword">float</span> slice = PI * <span class="hljs-number">2.0</span> / sides;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">step</span>(radius, <span class="hljs-built_in">cos</span>(<span class="hljs-built_in">floor</span>(<span class="hljs-number">0.5</span> + angle / slice) * slice - angle) * <span class="hljs-built_in">length</span>(position));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 position = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    color = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">polyShape</span>(position, <span class="hljs-number">0.6</span>, <span class="hljs-number">12.0</span>));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic04.jpg"></p><h4 id="移动一个圆"><a href="#移动一个圆" class="headerlink" title="移动一个圆"></a>移动一个圆</h4><ul><li>与上文圆的代码基本相同</li><li>加入一个translate的二维向量 可以控制圆的位置</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">circleShape</span><span class="hljs-params">(vec2 position, <span class="hljs-keyword">float</span> radius)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">step</span>(radius, <span class="hljs-built_in">length</span>(position - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>)));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    vec2 translate = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">.2</span>, <span class="hljs-number">.1</span>);<br>    coord += translate;<br>    color = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">circleShape</span>(coord, <span class="hljs-number">0.3</span>));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic05.jpg"></p><h4 id="运动的圆"><a href="#运动的圆" class="headerlink" title="运动的圆"></a>运动的圆</h4><ul><li>x轴做sin函数运动 区间为 -1 到 1</li><li>y轴做cos函数运动 区间为 -1 到 1</li><li>缩小区间 修改轴心 使得圆绕视窗中心做圆周运动</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">circleShape</span><span class="hljs-params">(vec2 position, <span class="hljs-keyword">float</span> radius)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">step</span>(radius, <span class="hljs-built_in">length</span>(position - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>)));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    vec2 translate = <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time) / <span class="hljs-number">2.0</span>, <span class="hljs-built_in">cos</span>(u_time) / <span class="hljs-number">2.0</span>);<br>    coord += translate * <span class="hljs-number">0.5</span>;<br>    color = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">circleShape</span>(coord, <span class="hljs-number">0.2</span>));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif01.gif"></p><h4 id="放大缩小的圆"><a href="#放大缩小的圆" class="headerlink" title="放大缩小的圆"></a>放大缩小的圆</h4><ul><li>图形世界中的各种变换都是由矩阵去完成的</li><li>mat2 2维矩阵 控制当前点的缩放</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function">mat2 <span class="hljs-title">scale</span><span class="hljs-params">(vec2 scale)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">mat2</span>(scale.x, <span class="hljs-number">.0</span>, <span class="hljs-number">.0</span>, scale.y);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">circleShape</span><span class="hljs-params">(vec2 position, <span class="hljs-keyword">float</span> radius)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">step</span>(radius, <span class="hljs-built_in">length</span>(position - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>)));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 position = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    position -= <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>);<br>    position = <span class="hljs-built_in">scale</span>(<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time))) * position;<br>    position += <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>);<br>    color = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">circleShape</span>(position, <span class="hljs-number">0.1</span>));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif02.gif"></p><h4 id="旋转矩形"><a href="#旋转矩形" class="headerlink" title="旋转矩形"></a>旋转矩形</h4><ul><li>mat2 2维矩阵 控制当前点的旋转</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">rectShape</span><span class="hljs-params">(vec2 position, vec2 size)</span> </span>&#123;<br>    size = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>) - size * <span class="hljs-number">0.5</span>;<br>    vec2 shaper = <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">step</span>(size.x, position.x), <span class="hljs-built_in">step</span>(size.y, position.y));<br>    shaper *= <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">step</span>(size.x, <span class="hljs-number">1.0</span> - position.x), <span class="hljs-built_in">step</span>(size.y, <span class="hljs-number">1.0</span> - position.y));<br>    <span class="hljs-keyword">return</span> shaper.x * shaper.y;<br>&#125;<br><br><span class="hljs-function">mat2 <span class="hljs-title">rotate</span><span class="hljs-params">(<span class="hljs-keyword">float</span> angle)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">mat2</span>(<span class="hljs-built_in">cos</span>(angle), -<span class="hljs-built_in">sin</span>(angle), <span class="hljs-built_in">sin</span>(angle), <span class="hljs-built_in">cos</span>(angle));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    coord -= <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>);<br>    coord = <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0.3</span>) * coord;<br>    coord += <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>);<br>    color = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">rectShape</span>(coord, <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.3</span>, <span class="hljs-number">0.3</span>)));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic06.jpg"></p><h4 id="迷幻波系列"><a href="#迷幻波系列" class="headerlink" title="迷幻波系列"></a>迷幻波系列</h4><ul><li>使用sin和cos函数加上时间变量产生各种奇幻的波纹 </li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    color += <span class="hljs-built_in">cos</span>(coord.x * <span class="hljs-built_in">sin</span>(u_time / <span class="hljs-number">30.0</span>) * <span class="hljs-number">60.0</span>) + <span class="hljs-built_in">cos</span>(coord.y * <span class="hljs-built_in">sin</span>(u_time / <span class="hljs-number">15.0</span>) * <span class="hljs-number">10.0</span>);<br>    color += <span class="hljs-built_in">sin</span>(coord.x * <span class="hljs-built_in">cos</span>(u_time / <span class="hljs-number">30.0</span>) * <span class="hljs-number">60.0</span>) + <span class="hljs-built_in">sin</span>(coord.y * <span class="hljs-built_in">cos</span>(u_time / <span class="hljs-number">15.0</span>) * <span class="hljs-number">10.0</span>);<br>    color += <span class="hljs-built_in">sin</span>(u_time / <span class="hljs-number">10.0</span>) * <span class="hljs-number">0.5</span>;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif03.gif"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = <span class="hljs-number">6.0</span> * gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> n = <span class="hljs-number">1</span>; n &lt; <span class="hljs-number">8</span>; n++) &#123;<br>        <span class="hljs-keyword">float</span> i = <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(n);<br>        coord += <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.7</span> / i * <span class="hljs-built_in">sin</span>(i * coord.y + u_time + <span class="hljs-number">0.3</span> * i) + <span class="hljs-number">0.8</span>, <span class="hljs-number">0.4</span> / i * <span class="hljs-built_in">sin</span>(coord.x + u_time + <span class="hljs-number">0.3</span> * i) + <span class="hljs-number">1.6</span>);<br>    &#125;<br>    <span class="hljs-comment">// coord *= vec2(0.7 / sin(coord.y + u_time +0.3) + 0.8, 0.4 / sin(coord.x + u_time +0.3) +1.6);</span><br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.5</span> * <span class="hljs-built_in">sin</span>(coord.x) + <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span> * <span class="hljs-built_in">sin</span>(coord.y) + <span class="hljs-number">0.5</span>, <span class="hljs-built_in">sin</span>(coord.x + coord.y));<br><br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif04.gif"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> AMOUNT = <span class="hljs-number">12</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = <span class="hljs-number">20.0</span> * (gl_FragCoord.xy - u_resolution / <span class="hljs-number">2.0</span>) / <span class="hljs-built_in">min</span>(u_resolution.x, u_resolution.y);<br>    <span class="hljs-keyword">float</span> len;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; AMOUNT; i++) &#123;<br>        len = <span class="hljs-built_in">length</span>(<span class="hljs-built_in">vec2</span>(coord.x, coord.y));<br>        coord.x -= <span class="hljs-built_in">cos</span>(coord.y + <span class="hljs-built_in">sin</span>(len)) + <span class="hljs-built_in">cos</span>(u_time / <span class="hljs-number">9.0</span>);<br>        coord.y += <span class="hljs-built_in">sin</span>(coord.y + <span class="hljs-built_in">cos</span>(len)) + <span class="hljs-built_in">sin</span>(u_time / <span class="hljs-number">12.0</span>);<br>    &#125;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(<span class="hljs-built_in">cos</span>(len * <span class="hljs-number">2.4</span>), <span class="hljs-built_in">cos</span>(len * <span class="hljs-number">3.2</span>), <span class="hljs-built_in">cos</span>(len * <span class="hljs-number">1.3</span>), <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif05.gif"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">float</span> color = <span class="hljs-number">.0</span>;<br>    color += <span class="hljs-built_in">sin</span>(coord.x * <span class="hljs-number">50.0</span> + <span class="hljs-built_in">cos</span>(u_time + coord.y * <span class="hljs-number">10.0</span> + <span class="hljs-built_in">sin</span>(coord.x * <span class="hljs-number">50.0</span> + u_time))) * <span class="hljs-number">2.0</span>;<br>    color += <span class="hljs-built_in">cos</span>(coord.x * <span class="hljs-number">20.0</span> + <span class="hljs-built_in">sin</span>(u_time + coord.y * <span class="hljs-number">10.0</span> + <span class="hljs-built_in">cos</span>(coord.x * <span class="hljs-number">50.0</span> + u_time))) * <span class="hljs-number">2.0</span>;<br>    color += <span class="hljs-built_in">sin</span>(coord.x * <span class="hljs-number">30.0</span> + <span class="hljs-built_in">cos</span>(u_time + coord.y * <span class="hljs-number">10.0</span> + <span class="hljs-built_in">sin</span>(coord.x * <span class="hljs-number">50.0</span> + u_time))) * <span class="hljs-number">2.0</span>;<br>    color += <span class="hljs-built_in">cos</span>(coord.x * <span class="hljs-number">40.0</span> + <span class="hljs-built_in">sin</span>(u_time + coord.y * <span class="hljs-number">10.0</span> + <span class="hljs-built_in">cos</span>(coord.x * <span class="hljs-number">50.0</span> + u_time))) * <span class="hljs-number">2.0</span>;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color + coord.y, color + coord.x, color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif06.gif"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">float</span> color = <span class="hljs-number">.0</span>;<br>    color += <span class="hljs-built_in">sin</span>(coord.x * <span class="hljs-number">6.0</span> + <span class="hljs-built_in">sin</span>(u_time + coord.y * <span class="hljs-number">90.0</span> + <span class="hljs-built_in">cos</span>(coord.x * <span class="hljs-number">30.0</span> + u_time * <span class="hljs-number">2.0</span>))) * <span class="hljs-number">0.5</span>;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color + coord.x, color + coord.x, color , <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif07.gif"></p><h4 id="彩虹漩涡"><a href="#彩虹漩涡" class="headerlink" title="彩虹漩涡"></a>彩虹漩涡</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    <span class="hljs-keyword">float</span> angle = <span class="hljs-built_in">atan</span>(-coord.y + <span class="hljs-number">0.25</span>, coord.x - <span class="hljs-number">0.5</span>) * <span class="hljs-number">0.1</span>;<br>    <span class="hljs-keyword">float</span> len = <span class="hljs-built_in">length</span>(coord - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">0.25</span>));<br>    color.r += <span class="hljs-built_in">sin</span>(len * <span class="hljs-number">40.0</span> + angle * <span class="hljs-number">30.0</span> + u_time);<br>    color.g += <span class="hljs-built_in">cos</span>(len * <span class="hljs-number">30.0</span> + angle * <span class="hljs-number">60.0</span> - u_time);<br>    color.b += <span class="hljs-built_in">sin</span>(len * <span class="hljs-number">50.0</span> + angle * <span class="hljs-number">50.0</span> + <span class="hljs-number">3.0</span>);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif08.gif"></p><h4 id="横向扫描线"><a href="#横向扫描线" class="headerlink" title="横向扫描线"></a>横向扫描线</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">1.0</span>);<br>    <span class="hljs-keyword">float</span> size = <span class="hljs-number">20.0</span>;<br>    <span class="hljs-keyword">float</span> alpha = <span class="hljs-built_in">sin</span>(<span class="hljs-built_in">floor</span>(coord.x * size) + u_time * <span class="hljs-number">4.0</span>) + <span class="hljs-number">0.5</span>;<br>    color.r = coord.x;<br>    color.g = coord.y;<br>    color.b = coord.x * coord.y;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, alpha);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif09.gif"></p><h4 id="移动光球"><a href="#移动光球" class="headerlink" title="移动光球"></a>移动光球</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = (gl_FragCoord.xy * <span class="hljs-number">2.0</span> - u_resolution) / <span class="hljs-built_in">min</span>(u_resolution.x, u_resolution.y);<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    coord.x += <span class="hljs-built_in">sin</span>(u_time) + <span class="hljs-built_in">cos</span>(u_time * <span class="hljs-number">2.1</span>);<br>    coord.y += <span class="hljs-built_in">cos</span>(u_time) + <span class="hljs-built_in">sin</span>(u_time * <span class="hljs-number">2.1</span>);<br>    color += <span class="hljs-number">0.1</span> * <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">sin</span>(u_time) + <span class="hljs-number">0.1</span>) / <span class="hljs-built_in">length</span>(coord);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif10.gif"></p><h4 id="光圈"><a href="#光圈" class="headerlink" title="光圈"></a>光圈</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = (gl_FragCoord.xy / u_resolution);<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    vec2 translate = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">-0.5</span>, <span class="hljs-number">-0.5</span>);<br>    coord += translate;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">40</span>; i++) &#123;<br>        <span class="hljs-keyword">float</span> radius = <span class="hljs-number">0.3</span>;<br>        <span class="hljs-keyword">float</span> rad = <span class="hljs-built_in">radians</span>(<span class="hljs-number">360.0</span> / <span class="hljs-number">40.0</span>) * <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(i);<br>        color += <span class="hljs-number">0.003</span> /<span class="hljs-built_in">length</span>(coord + <span class="hljs-built_in">vec2</span>(radius * <span class="hljs-built_in">cos</span>(rad), radius * <span class="hljs-built_in">sin</span>(rad)));<br>    &#125;<br><br>    <br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic07.jpg"></p><h4 id="格子光斑"><a href="#格子光斑" class="headerlink" title="格子光斑"></a>格子光斑</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy * <span class="hljs-number">1.0</span> - u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br><br>    color += <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">cos</span>(coord.x / <span class="hljs-number">10.0</span>) + <span class="hljs-built_in">sin</span>(coord.y / <span class="hljs-number">10.0</span>) - <span class="hljs-built_in">cos</span>(u_time));<br><br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif11.gif"></p><h4 id="金属格子光束"><a href="#金属格子光束" class="headerlink" title="金属格子光束"></a>金属格子光束</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">random2d</span><span class="hljs-params">(vec2 coord)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">sin</span>(<span class="hljs-built_in">dot</span>(coord.xy, <span class="hljs-built_in">vec2</span>(<span class="hljs-number">12.9898</span>, <span class="hljs-number">78.233</span>))) * <span class="hljs-number">43758.5453</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy * <span class="hljs-number">0.1</span>;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    coord -= u_time + <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(coord.y), <span class="hljs-built_in">cos</span>(coord.x));<br>    <span class="hljs-keyword">float</span> rand01 = <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">random2d</span>(<span class="hljs-built_in">floor</span>(coord)) + u_time / <span class="hljs-number">60.0</span>);<br>    <span class="hljs-keyword">float</span> rand02 = <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">random2d</span>(<span class="hljs-built_in">floor</span>(coord)) + u_time / <span class="hljs-number">40.0</span>);<br>    rand01 *= <span class="hljs-number">0.4</span> - <span class="hljs-built_in">length</span>(<span class="hljs-built_in">fract</span>(coord));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(rand01 * <span class="hljs-number">4.0</span>, rand02 * rand01 * <span class="hljs-number">4.0</span>, <span class="hljs-number">.0</span>, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif12.gif"></p><h4 id="彩色光球"><a href="#彩色光球" class="headerlink" title="彩色光球"></a>彩色光球</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    vec2 translate = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">-0.5</span>);<br>    coord += translate;<br>    color.r += <span class="hljs-built_in">abs</span>(<span class="hljs-number">0.1</span> + <span class="hljs-built_in">length</span>(coord) - <span class="hljs-number">0.6</span> * <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">sin</span>(u_time * <span class="hljs-number">0.9</span> / <span class="hljs-number">12.0</span>)));<br>    color.g += <span class="hljs-built_in">abs</span>(<span class="hljs-number">0.1</span> + <span class="hljs-built_in">length</span>(coord) - <span class="hljs-number">0.6</span> * <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">sin</span>(u_time * <span class="hljs-number">0.6</span> / <span class="hljs-number">4.0</span>)));<br>    color.b += <span class="hljs-built_in">abs</span>(<span class="hljs-number">0.1</span> + <span class="hljs-built_in">length</span>(coord) - <span class="hljs-number">0.6</span> * <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">sin</span>(u_time * <span class="hljs-number">0.3</span> / <span class="hljs-number">2.0</span>)));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0.1</span> / color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif13.gif"></p><h4 id="基础噪音"><a href="#基础噪音" class="headerlink" title="基础噪音"></a>基础噪音</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_nouse;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">nouse1d</span><span class="hljs-params">(<span class="hljs-keyword">float</span> value)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">cos</span>(value + <span class="hljs-built_in">cos</span>(value * <span class="hljs-number">90.0</span>) * <span class="hljs-number">100.0</span>) * <span class="hljs-number">0.5</span> + <span class="hljs-number">0.5</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    color.r += <span class="hljs-built_in">nouse1d</span>(u_time);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif14.gif"></p><h4 id="白噪音"><a href="#白噪音" class="headerlink" title="白噪音"></a>白噪音</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">random2d</span><span class="hljs-params">(vec2 coord)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">sin</span>(<span class="hljs-built_in">dot</span>(coord.xy, <span class="hljs-built_in">vec2</span>(<span class="hljs-number">12.9898</span>, <span class="hljs-number">78.233</span>))) * <span class="hljs-number">43758.5453</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    <span class="hljs-keyword">float</span> grain = <span class="hljs-number">.0</span>;<br>    grain = <span class="hljs-built_in">random2d</span>(<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(coord))* u_time) ;<br>    color = <span class="hljs-built_in">vec3</span>(grain);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif15.gif"></p><h4 id="变换背景"><a href="#变换背景" class="headerlink" title="变换背景"></a>变换背景</h4><ul><li>在一些游戏中可以充当一个变换的背景</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.5</span> + <span class="hljs-number">0.5</span> * <span class="hljs-built_in">cos</span>(u_time + coord.xyx + <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">4.0</span>)));<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif16.gif"></p><h4 id="变换液体"><a href="#变换液体" class="headerlink" title="变换液体"></a>变换液体</h4><ul><li>在一些游戏中可以充当一个变换的背景</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">roundLookingBlob</span><span class="hljs-params">(vec2 fragCoord, vec2 tPos, <span class="hljs-keyword">float</span> r)</span> </span>&#123;<br>    vec2 pos = fragCoord.xy / u_resolution.yy - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>);<br>    pos.x -= ((u_resolution.x- u_resolution.y) / u_resolution.y)/<span class="hljs-number">2.0</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(<span class="hljs-built_in">max</span>(<span class="hljs-number">1.0</span>-<span class="hljs-built_in">length</span>(pos-tPos), <span class="hljs-number">0.0</span>) , r);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">float</span> v = <span class="hljs-number">0.0</span> <br>        + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy * <span class="hljs-number">0.2</span>,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time)* <span class="hljs-number">2.0</span>, <span class="hljs-built_in">cos</span>(u_time)*<span class="hljs-number">0.004</span>), <span class="hljs-number">10.0</span>)<br>    + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.6</span>)*<span class="hljs-number">0.2</span>, <span class="hljs-built_in">cos</span>(u_time)*<span class="hljs-number">0.3</span>), <span class="hljs-number">7.0</span>)<br>    + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(u_time*<span class="hljs-number">0.8</span>)*<span class="hljs-number">0.3</span>, <span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">1.1</span>)*<span class="hljs-number">0.04</span>), <span class="hljs-number">5.0</span>)<br>    + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(u_time*<span class="hljs-number">0.2</span>)*<span class="hljs-number">0.2</span>, <span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.9</span>)*<span class="hljs-number">0.05</span>), <span class="hljs-number">8.0</span>)<br>    + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(u_time*<span class="hljs-number">1.2</span>)*<span class="hljs-number">0.2</span>, <span class="hljs-number">2.0</span> *<span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.9</span>)*<span class="hljs-number">0.05</span>), <span class="hljs-number">8.0</span>)<br>        + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(u_time*<span class="hljs-number">0.3</span>)*<span class="hljs-number">0.4</span>, <span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">1.1</span>)*<span class="hljs-number">0.4</span>), <span class="hljs-number">5.0</span>)<br>    + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.6</span>)*<span class="hljs-number">0.9</span>, <span class="hljs-built_in">cos</span>(u_time)*<span class="hljs-number">0.3</span>), <span class="hljs-number">7.0</span>)<br>    + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.6</span>)*<span class="hljs-number">0.3</span>, <span class="hljs-built_in">cos</span>(u_time)*<span class="hljs-number">0.8</span>), <span class="hljs-number">7.0</span>)<br>        + <span class="hljs-built_in">roundLookingBlob</span>(gl_FragCoord.xy,<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(u_time*<span class="hljs-number">0.3</span>)*<span class="hljs-number">0.9</span>, <span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.1</span>)*<span class="hljs-number">0.4</span>), <span class="hljs-number">3.0</span>)<br>        ;<br>    v = <span class="hljs-built_in">clamp</span>((v<span class="hljs-number">-0.5</span>)*<span class="hljs-number">1000.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>);<br>    <span class="hljs-keyword">float</span> r = <br>        <span class="hljs-number">-1.0</span> * <span class="hljs-number">1.0</span> *<span class="hljs-built_in">sin</span>(u_time) <br>        - <span class="hljs-number">2.0</span>* <span class="hljs-built_in">cos</span>(<span class="hljs-number">1.0</span> * u_time) * gl_FragCoord.x / u_resolution.x * gl_FragCoord.y / u_resolution.y;<br>    <span class="hljs-keyword">float</span> g = <span class="hljs-number">0.0</span> - <span class="hljs-number">0.5</span> * <span class="hljs-built_in">cos</span>(<span class="hljs-number">2.0</span> * u_time) *  gl_FragCoord.y / u_resolution.y;<br>    <span class="hljs-keyword">float</span> b = <span class="hljs-number">4.0</span> + <span class="hljs-built_in">sin</span>(u_time) - g + <span class="hljs-number">0.8</span>;<br>gl_FragColor = <span class="hljs-built_in">vec4</span>(r * v, v * g, v * b, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif17.gif"></p><h4 id="光影圆球"><a href="#光影圆球" class="headerlink" title="光影圆球"></a>光影圆球</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec4 color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0</span>);<br>    vec3 u = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">2.</span> * gl_FragCoord.xy - u_resolution.xy, u_resolution.y) / <span class="hljs-number">3e2</span>;<br>    u = <span class="hljs-built_in">normalize</span>(<span class="hljs-built_in">vec3</span>(u.xy, <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">max</span>(u.z * u.z - <span class="hljs-built_in">dot</span>(u.xy, u.xy) * <span class="hljs-number">2.</span>, <span class="hljs-number">0.</span>))));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br>        <span class="hljs-keyword">float</span> l = <span class="hljs-built_in">length</span>(u);<br>        u.xz += <span class="hljs-built_in">sin</span>(u.z + u_time * <span class="hljs-number">.2</span> + l);<br>        u.y += <span class="hljs-built_in">cos</span>(u.x + u_time *<span class="hljs-number">.6</span>);<br>        color += <span class="hljs-built_in">cos</span>(l + <span class="hljs-built_in">vec4</span>(<span class="hljs-number">.3</span>, <span class="hljs-number">.1</span>, <span class="hljs-number">0</span>,<span class="hljs-number">0</span>));<br>    &#125;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif18.gif"></p><h4 id="彩色格子"><a href="#彩色格子" class="headerlink" title="彩色格子"></a>彩色格子</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec4 color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0</span>);<br>    vec3 u = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">2.</span> * gl_FragCoord.xy - u_resolution.xy, u_resolution.y) / <span class="hljs-number">3e2</span>;<br>    u = <span class="hljs-built_in">normalize</span>(<span class="hljs-built_in">vec3</span>(u.xy, <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">max</span>(u.z * u.z - <span class="hljs-built_in">dot</span>(u.xy, u.xy) * <span class="hljs-number">2.</span>, <span class="hljs-number">0.</span>))));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) &#123;<br>        <span class="hljs-keyword">float</span> l = <span class="hljs-built_in">length</span>(u);<br>        u.xz += <span class="hljs-built_in">sin</span>(u.z + u_time * <span class="hljs-number">.2</span> + l);<br>        u.y += <span class="hljs-built_in">cos</span>(u.x + u_time *<span class="hljs-number">.6</span>);<br>        color += <span class="hljs-built_in">cos</span>(l + <span class="hljs-built_in">vec4</span>(<span class="hljs-number">.3</span>, <span class="hljs-number">.1</span>, <span class="hljs-number">0</span>,<span class="hljs-number">0</span>));<br>    &#125;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif19.gif"></p><h4 id="绿色细胞"><a href="#绿色细胞" class="headerlink" title="绿色细胞"></a>绿色细胞</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function">vec2 <span class="hljs-title">N22</span><span class="hljs-params">(vec2 point)</span> </span>&#123;<br>    vec3 a = <span class="hljs-built_in">fract</span>(point.xyx * <span class="hljs-built_in">vec3</span>(<span class="hljs-number">123.45</span>, <span class="hljs-number">234.34</span>, <span class="hljs-number">345.65</span>));<br>    a += <span class="hljs-built_in">dot</span>(a, a + <span class="hljs-number">34.45</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">vec2</span>(a.x * a.y, a.y * a.z));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">// Zooms out so it goes from -1.0 to 1.0</span><br>    vec2 uv = (<span class="hljs-number">2.0</span> * gl_FragCoord.xy - u_resolution.xy) / u_resolution.y;<br>    <span class="hljs-keyword">float</span> m = <span class="hljs-number">0.0</span>;<br>    <span class="hljs-keyword">float</span> time = u_time * <span class="hljs-number">0.5</span>;<br>    <span class="hljs-keyword">float</span> cellIndex = <span class="hljs-number">0.0</span>;<br>    <span class="hljs-comment">// Initialize minDist at a large distance</span><br>    <span class="hljs-keyword">float</span> minDist = <span class="hljs-number">100.0</span>;<br>    <br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.0</span>);<br>    <br>    <span class="hljs-comment">// Multiply uv</span><br>    uv *= <span class="hljs-number">2.0</span>;<br><br>    <span class="hljs-comment">// Make grid</span><br>    vec2 gridUv = <span class="hljs-built_in">fract</span>(uv) - <span class="hljs-number">0.5</span>;<br><br>    <span class="hljs-comment">// Determine grid cell</span><br>    vec2 id = <span class="hljs-built_in">floor</span>(uv);<br><br>    vec2 cellId = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">float</span> y = <span class="hljs-number">-1.0</span>; y &lt;= <span class="hljs-number">1.0</span>; y++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">float</span> x = <span class="hljs-number">-1.0</span>; x &lt;= <span class="hljs-number">1.0</span>; x++) &#123;<br>            vec2 offset = <span class="hljs-built_in">vec2</span>(x, y);<br>            vec2 n = <span class="hljs-built_in">N22</span>(<span class="hljs-built_in">vec2</span>(id + offset));<br>            vec2 point = offset + <span class="hljs-built_in">sin</span>(n * time) * <span class="hljs-number">0.5</span> ;<br><br>            point -= gridUv;<br>            <span class="hljs-comment">// Euclidian distance</span><br>            <span class="hljs-keyword">float</span> eDist = <span class="hljs-built_in">length</span>(point);<br><br>            <span class="hljs-comment">// Manhattan distance</span><br>            <span class="hljs-keyword">float</span> mDist = <span class="hljs-built_in">abs</span>(point.x) + <span class="hljs-built_in">abs</span>(point.y);<br><br>            <span class="hljs-comment">// Interpolate between distances</span><br>            <span class="hljs-comment">//float dist = mix(eDist, mDist, 0.5);</span><br>            <span class="hljs-keyword">float</span> dist = eDist;<br><br>            <span class="hljs-keyword">if</span> (dist &lt; minDist) &#123; <br>                minDist = dist;<br>                cellId = id + offset;<br>            &#125;<br>        &#125;<br>        <br>        <span class="hljs-comment">// Visualize gridUv</span><br>        <span class="hljs-comment">//color.rb = gridUv;</span><br>        <br>        color = <span class="hljs-built_in">vec3</span>(minDist);<br>        color.rb = cellId * <span class="hljs-number">0.01</span>;<br>        <span class="hljs-comment">//color *= vec3(0.75, 0.3, 1.0);</span><br>    &#125;<br>    <br>    <span class="hljs-comment">//vec3 color = vec3(minDist);   </span><br> <span class="hljs-comment">//vec3 color = vec3(cellIndex/50.0);   </span><br><br>    <span class="hljs-comment">// Output to screen</span><br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color,<span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif20.gif"></p><h4 id="萤火虫"><a href="#萤火虫" class="headerlink" title="萤火虫"></a>萤火虫</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">rand</span><span class="hljs-params">( vec2 c )</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">fract</span>( <span class="hljs-built_in">sin</span>( <span class="hljs-built_in">dot</span>( c.xy, <span class="hljs-built_in">vec2</span>( <span class="hljs-number">12.9898</span>, <span class="hljs-number">78.233</span> ) ) ) * <span class="hljs-number">43758.5453</span> );<br>&#125;<br><br><span class="hljs-function">vec2 <span class="hljs-title">rand2</span><span class="hljs-params">(vec2 st)</span></span>&#123;<br>    st = <span class="hljs-built_in">vec2</span>( <span class="hljs-built_in">dot</span>(st,<span class="hljs-built_in">vec2</span>(<span class="hljs-number">127.1</span>,<span class="hljs-number">311.7</span>)), <span class="hljs-built_in">dot</span>(st,<span class="hljs-built_in">vec2</span>(<span class="hljs-number">269.5</span>,<span class="hljs-number">183.3</span>)) );<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1.0</span> + <span class="hljs-number">2.0</span>*<span class="hljs-built_in">fract</span>(<span class="hljs-built_in">sin</span>(st)*<span class="hljs-number">43758.5453123</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">noise</span> <span class="hljs-params">(in vec2 st)</span> </span>&#123;<br>    vec2 i = <span class="hljs-built_in">floor</span>(st);<br>    vec2 f = <span class="hljs-built_in">fract</span>(st);<br>    vec2 u = f*f*(<span class="hljs-number">3.0</span><span class="hljs-number">-2.0</span>*f);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">mix</span>( <span class="hljs-built_in">mix</span>( <span class="hljs-built_in">dot</span>( <span class="hljs-built_in">rand2</span>(i + <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>) ), f - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>) ), <span class="hljs-built_in">dot</span>( <span class="hljs-built_in">rand2</span>(i + <span class="hljs-built_in">vec2</span>(<span class="hljs-number">1.0</span>,<span class="hljs-number">0.0</span>) ), f - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">1.0</span>,<span class="hljs-number">0.0</span>) ), u.x),<br>                <span class="hljs-built_in">mix</span>( <span class="hljs-built_in">dot</span>( <span class="hljs-built_in">rand2</span>(i + <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>,<span class="hljs-number">1.0</span>) ), f - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>,<span class="hljs-number">1.0</span>) ), <span class="hljs-built_in">dot</span>( <span class="hljs-built_in">rand2</span>(i + <span class="hljs-built_in">vec2</span>(<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>) ), f - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>) ), u.x), u.y);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">circle</span><span class="hljs-params">(vec2 pos, <span class="hljs-keyword">float</span> radius, <span class="hljs-keyword">float</span> glow)</span></span>&#123;<br>    <span class="hljs-keyword">float</span> sdf = <span class="hljs-built_in">length</span>(pos);<br>    sdf = <span class="hljs-built_in">smoothstep</span>(radius<span class="hljs-number">-0.700</span>,radius,sdf);<br>    <span class="hljs-keyword">float</span> circles = <span class="hljs-number">1.0</span> - <span class="hljs-built_in">smoothstep</span>(<span class="hljs-number">0.0</span>,<span class="hljs-number">1.0</span>,sdf*<span class="hljs-number">10.280</span>);<br>    <span class="hljs-keyword">float</span> glows = <span class="hljs-built_in">exp</span>(-sdf*<span class="hljs-number">4.496</span>) * glow * (<span class="hljs-number">1.0</span> - circles);<br>    <span class="hljs-keyword">return</span> circles+glows;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 st = (gl_FragCoord.xy - <span class="hljs-number">0.5</span> * u_resolution.xy ) / u_resolution.y;<br>    st *= <span class="hljs-number">20.0</span>;<br>    vec2 uv = st;<br>    <span class="hljs-keyword">float</span> noisest = <span class="hljs-built_in">noise</span>(<span class="hljs-built_in">vec2</span>(uv.x - u_time, uv.y - u_time));<br>    uv += noisest*<span class="hljs-number">0.13</span>;<br>    uv += <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">noise</span>(<span class="hljs-built_in">vec2</span>(u_time) * <span class="hljs-number">0.2</span>) * <span class="hljs-number">6.0</span>, -u_time * <span class="hljs-number">2.0</span>);<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.</span>);<br>    vec2 pos = <span class="hljs-built_in">fract</span>(uv)<span class="hljs-number">-0.5</span>;<br>    vec2 id = <span class="hljs-built_in">floor</span>(uv);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> y = <span class="hljs-number">-1</span>; y &lt;= <span class="hljs-number">1</span>; y++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> x = <span class="hljs-number">-1</span>; x &lt;= <span class="hljs-number">1</span>; x++)&#123;<br>            vec2 neighbour = <span class="hljs-built_in">vec2</span>(x,y);<br>            vec2 rand2 = <span class="hljs-built_in">rand2</span>(id+neighbour);<br>            <span class="hljs-keyword">float</span> a = <span class="hljs-built_in">noise</span>(rand2 + u_time * <span class="hljs-number">2.8</span>);<br>            vec2 offset = <span class="hljs-number">0.5</span>*(<span class="hljs-built_in">sin</span>(u_time + rand2*<span class="hljs-number">6.28</span>))*<span class="hljs-number">2.2</span>;<br>            <span class="hljs-keyword">float</span> size = <span class="hljs-built_in">rand</span>(id+neighbour)*<span class="hljs-number">0.75</span> + a*<span class="hljs-number">0.15</span>;<br>            color += <span class="hljs-built_in">circle</span>(pos-neighbour+offset,size,size*<span class="hljs-number">1.400</span>)/<span class="hljs-number">9.0</span> * <span class="hljs-built_in">vec3</span>(rand2.x*<span class="hljs-number">7.884</span>,<span class="hljs-number">7.2</span>,rand2.y*<span class="hljs-number">6.832</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">float</span> xRange = <span class="hljs-number">1.0</span> - <span class="hljs-built_in">abs</span>(<span class="hljs-number">2.0</span> * st.x)*<span class="hljs-number">0.02</span>;<br>    vec3 ambient = <span class="hljs-built_in">smoothstep</span>(<span class="hljs-number">1.0</span>,<span class="hljs-number">0.0</span>,st.y*<span class="hljs-number">0.05</span>+<span class="hljs-number">0.9</span>) * <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.401</span>,<span class="hljs-number">0.570</span>,<span class="hljs-number">0.443</span>);<br>    color = <span class="hljs-built_in">max</span>(ambient, color) * xRange;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(color,<span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif21.gif"></p><h4 id="液态光斑"><a href="#液态光斑" class="headerlink" title="液态光斑"></a>液态光斑</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-keyword">const</span> vec4 col1 = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>,<span class="hljs-number">1.0</span>);<br><span class="hljs-keyword">const</span> vec4 col2 = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 uv = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">float</span> s = <span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">0.1</span>);<br>    <span class="hljs-keyword">float</span> s2 = <span class="hljs-number">.25</span>+<span class="hljs-built_in">sin</span>(u_time*<span class="hljs-number">1.8</span>);<br>    vec2 d = uv*(<span class="hljs-number">4.0</span>+s*<span class="hljs-number">.3</span>);<br>    <br>    d.x += u_time*<span class="hljs-number">0.25</span>+<span class="hljs-built_in">sin</span>(d.y + u_time*<span class="hljs-number">0.3</span>)*<span class="hljs-number">0.5</span>;<br>    d.y += u_time*<span class="hljs-number">0.25</span>+<span class="hljs-built_in">sin</span>(d.x + u_time*<span class="hljs-number">0.3</span>)*<span class="hljs-number">0.5</span>;<br>    <span class="hljs-keyword">float</span> v1=<span class="hljs-built_in">length</span>(<span class="hljs-number">0.5</span>-<span class="hljs-built_in">fract</span>(d.yx))+<span class="hljs-number">0.95</span>;<br>    <br>    <span class="hljs-keyword">float</span> zoom = <span class="hljs-number">0.42</span>;<br>    d = (<span class="hljs-number">1.0</span>+zoom)*<span class="hljs-number">0.5</span>-(uv*zoom);<br>    <span class="hljs-keyword">float</span> v2=<span class="hljs-built_in">length</span>(<span class="hljs-number">0.5</span>-<span class="hljs-built_in">fract</span>(d.xy));<br>    v1 *= <span class="hljs-number">1.0</span>-v2*v1*<span class="hljs-number">1.64</span>;<br>    v1 = v1*v1*v1;<br>    v1 *= <span class="hljs-number">1.9</span>+s2*<span class="hljs-number">0.2</span>;<br>    gl_FragColor = <span class="hljs-built_in">mix</span>(col2,col1,v1)*(<span class="hljs-number">10.</span>+(s2*<span class="hljs-number">.2</span>));<br>    vec3 _col = <span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">mod</span>( uv.x + uv.y, <span class="hljs-number">.0</span>)*<span class="hljs-number">0.002</span>);<br>    gl_FragColor += <span class="hljs-built_in">vec4</span>(_col, <span class="hljs-number">1.</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif22.gif"></p><h4 id="三维线"><a href="#三维线" class="headerlink" title="三维线"></a>三维线</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 R=u_resolution.xy,<br>    U=(gl_FragCoord.xy<span class="hljs-number">-.5</span>*R.xy)/R.y;<br>    <span class="hljs-keyword">float</span> D,t=u_time;<br>    vec3 P,B = <span class="hljs-built_in">normalize</span>( <span class="hljs-built_in">vec3</span>( U.x, U.y,<span class="hljs-number">1</span>) );<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i&lt;<span class="hljs-number">64</span>;i++) &#123;<br>        P = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">sin</span>(U.x*<span class="hljs-number">5.</span>+t), <span class="hljs-number">-5</span>)+ B*D;<br>        P.z-=t*<span class="hljs-number">6.</span>; <br>        P=<span class="hljs-built_in">mod</span>(P,<span class="hljs-number">3.</span>)<span class="hljs-number">-1.5</span>;<br>        P.z -= <span class="hljs-built_in">clamp</span>( P.z, <span class="hljs-number">0.</span>, <span class="hljs-number">5.</span> );<br>        D+=<span class="hljs-built_in">length</span>(P) - <span class="hljs-number">.05</span>;<br>    &#125;<br>    <span class="hljs-keyword">float</span> c = ((D&lt; <span class="hljs-number">16.</span>) ? <span class="hljs-number">1.</span>:<span class="hljs-number">0.</span>);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(c, c, <span class="hljs-number">.0</span>, <span class="hljs-number">1.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif23.gif"></p><h3 id="图片Shader实例"><a href="#图片Shader实例" class="headerlink" title="图片Shader实例"></a>图片Shader实例</h3><h4 id="测试图片"><a href="#测试图片" class="headerlink" title="测试图片"></a>测试图片</h4><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic08.png"></p><h4 id="高斯模糊"><a href="#高斯模糊" class="headerlink" title="高斯模糊"></a>高斯模糊</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">normpdf</span><span class="hljs-params">(in <span class="hljs-keyword">float</span> x, in <span class="hljs-keyword">float</span> sigma)</span> </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0.39894</span>*<span class="hljs-built_in">exp</span>(<span class="hljs-number">-0.5</span>*x*x/(sigma*sigma))/sigma;<br>&#125;<br><br><span class="hljs-function">vec3 <span class="hljs-title">gaussianBlur</span><span class="hljs-params">(sampler2D tex, vec2 coord, vec2 res, <span class="hljs-keyword">int</span> amount)</span> </span>&#123;<br>    <span class="hljs-comment">//declare stuff</span><br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> mSize = <span class="hljs-number">22</span>;<br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> kSize = (mSize<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">float</span> kernel[mSize];<br>    vec3 final_colour = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.0</span>);<br><br>    <span class="hljs-comment">//create the 1-D kernel</span><br>    <span class="hljs-keyword">float</span> sigma = <span class="hljs-number">7.0</span>;<br>    <span class="hljs-keyword">float</span> Z = <span class="hljs-number">0.0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt;= kSize; ++j) &#123;<br>        kernel[kSize+j] = kernel[kSize-j] = <span class="hljs-built_in">normpdf</span>(<span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(j), sigma);<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; mSize; ++j) &#123;<br>        Z += kernel[j];<br>    &#125;<br><br>    <span class="hljs-comment">//read out the texels</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=-kSize; i &lt;= kSize; ++i) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j=-kSize; j &lt;= kSize; ++j) &#123;<br>            final_colour += kernel[kSize+j]*kernel[kSize+i]*<span class="hljs-built_in">texture2D</span>(u_tex0, (coord.xy+<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(i),<span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(j))) / res.xy).rgb;<br><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> final_colour/(Z*Z);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 uv = gl_FragCoord.xy / u_resolution;<br>vec4 c = <span class="hljs-built_in">texture2D</span>(u_tex0, uv);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(<span class="hljs-built_in">gaussianBlur</span>(u_tex0, gl_FragCoord.xy, u_resolution.xy, <span class="hljs-number">11</span>), c.a);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic20.jpg"></p><h4 id="噪点图片"><a href="#噪点图片" class="headerlink" title="噪点图片"></a>噪点图片</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br><br><span class="hljs-keyword">float</span> amount = <span class="hljs-number">0.8</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">random2d</span><span class="hljs-params">(vec2 coord)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">sin</span>(<span class="hljs-built_in">dot</span>(coord.xy, <span class="hljs-built_in">vec2</span>(<span class="hljs-number">12.9898</span>, <span class="hljs-number">78.233</span>))) * <span class="hljs-number">43758.5453</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 color = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">.0</span>);<br>    vec4 image = <span class="hljs-built_in">texture2D</span>(u_tex0, coord);<br>    <span class="hljs-keyword">float</span> noise = (<span class="hljs-built_in">random2d</span>(coord) - <span class="hljs-number">.5</span>) * amount;<br>    image.r += noise;<br>    image.g += noise;<br>    image.b += noise;<br>    gl_FragColor = image;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic09.jpg"></p><h4 id="去色"><a href="#去色" class="headerlink" title="去色"></a>去色</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec4 texColor = <span class="hljs-built_in">texture2D</span>(u_tex0, coord);<br>    vec3 lum = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0.299</span>, <span class="hljs-number">0.587</span>, <span class="hljs-number">0.114</span>);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(<span class="hljs-built_in">vec3</span>(<span class="hljs-built_in">dot</span>(texColor.rgb, lum)), texColor.a);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic11.jpg"></p><h4 id="图片混合流动"><a href="#图片混合流动" class="headerlink" title="图片混合流动"></a>图片混合流动</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br>uniform sampler2D u_tex1;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 col = <span class="hljs-number">0.5</span> + <span class="hljs-number">0.5</span> * <span class="hljs-built_in">cos</span>(u_time + coord.xyx + <span class="hljs-built_in">vec3</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>));<br>    vec4 disp = <span class="hljs-built_in">texture2D</span>(u_tex0, coord + <span class="hljs-built_in">vec2</span>(u_time * <span class="hljs-number">0.01</span>, u_time * <span class="hljs-number">0.02</span>));<br>    <span class="hljs-keyword">float</span> resx = u_resolution.x;<br>    <span class="hljs-keyword">float</span> resy = u_resolution.y;<br>    vec2 center = (<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(u_time) * resx * <span class="hljs-number">0.75</span> * <span class="hljs-number">0.5</span>, <span class="hljs-built_in">cos</span>(u_time) * resy * <span class="hljs-number">0.6</span> * <span class="hljs-number">0.5</span>) + <br>                   <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(<span class="hljs-number">2.0</span>*u_time) * resx * <span class="hljs-number">0.25</span> * <span class="hljs-number">0.5</span>, <span class="hljs-built_in">cos</span>(<span class="hljs-number">2.0</span>*u_time) * resy * <span class="hljs-number">0.4</span> * <span class="hljs-number">0.5</span>) +<br>                   <span class="hljs-built_in">vec2</span>(resx * <span class="hljs-number">0.5</span>, resy * <span class="hljs-number">0.5</span>));<br>    <span class="hljs-keyword">float</span> dist = <span class="hljs-built_in">length</span>(gl_FragCoord.xy - center);<br>    <span class="hljs-keyword">float</span> mag = <span class="hljs-built_in">exp</span>(-dist * (<span class="hljs-number">0.01</span> + <span class="hljs-number">0.005</span> * <span class="hljs-built_in">sin</span>(u_time)));<br>    disp = disp * mag;<br>    vec4 image = <span class="hljs-built_in">texture2D</span>(u_tex1, coord);<br>    vec4 col2 = <span class="hljs-built_in">texture2D</span>(u_tex1, coord + disp.rg * <span class="hljs-number">0.2</span>);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(col2.xyz, image.a);<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif25.gif"></p><h4 id="马赛克"><a href="#马赛克" class="headerlink" title="马赛克"></a>马赛克</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br>uniform vec2 u_tex0Resolution;<br><br><span class="hljs-keyword">const</span> vec2 pixelSize = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">5.0</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec3 c;<br>    vec4 src = <span class="hljs-built_in">texture2D</span>(u_tex0, coord);<br>vec3 sum;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> a=<span class="hljs-number">0</span>;a&lt;<span class="hljs-built_in"><span class="hljs-keyword">int</span></span>(pixelSize.x);a++) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> b=<span class="hljs-number">0</span>;b&lt;<span class="hljs-built_in"><span class="hljs-keyword">int</span></span>(pixelSize.y);b++) &#123;<br>            c = <span class="hljs-built_in">texture2D</span>(u_tex0, (gl_FragCoord.xy-<span class="hljs-built_in">mod</span>(gl_FragCoord.xy, pixelSize) + <span class="hljs-built_in">vec2</span>(a,b)) / u_resolution.xy).rgb;<br>            sum += c;<br>        &#125;<br>    &#125;<br>    sum /= pixelSize.x * pixelSize.y;<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(sum, src.a);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic13.jpg"></p><h4 id="【抖音】特效1"><a href="#【抖音】特效1" class="headerlink" title="【抖音】特效1"></a>【抖音】特效1</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> PI = <span class="hljs-number">3.1415926</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> duration = <span class="hljs-number">2.0</span>;<br><br><span class="hljs-function">vec4 <span class="hljs-title">getMask</span><span class="hljs-params">(<span class="hljs-keyword">float</span> time, vec2 textureCoords, <span class="hljs-keyword">float</span> padding)</span> </span>&#123;<br>    vec2 translation = <span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">sin</span>(time * (PI * <span class="hljs-number">2.0</span> / duration)),<br>                            <span class="hljs-built_in">cos</span>(time * (PI * <span class="hljs-number">2.0</span> / duration)));<br>    vec2 translationTextureCoords = textureCoords + padding * translation;<br>    vec4 mask = <span class="hljs-built_in">texture2D</span>(u_tex0, translationTextureCoords);<br><br>    <span class="hljs-keyword">return</span> mask;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">maskAlphaProgress</span><span class="hljs-params">(<span class="hljs-keyword">float</span> currentTime, <span class="hljs-keyword">float</span> hideTime, <span class="hljs-keyword">float</span> startTime)</span> </span>&#123;<br>    <span class="hljs-keyword">float</span> time = <span class="hljs-built_in">mod</span>(duration + currentTime - startTime, duration);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">min</span>(time, hideTime);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">float</span> time = <span class="hljs-built_in">mod</span>(u_time, duration);<br>    <span class="hljs-keyword">float</span> scale = <span class="hljs-number">1.1</span>;<br>    <span class="hljs-keyword">float</span> padding = <span class="hljs-number">0.3</span> * (<span class="hljs-number">1.0</span> - <span class="hljs-number">1.0</span> / scale);<br>    vec2 textureCoords = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>) + (coord - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>)) / scale;<br><br>    <span class="hljs-keyword">float</span> hideTime = <span class="hljs-number">0.9</span>;<br>    <span class="hljs-keyword">float</span> timeGap = <span class="hljs-number">0.12</span>;<br><br>    <span class="hljs-keyword">float</span> maxAlphaR = <span class="hljs-number">0.4</span>; <span class="hljs-comment">// max R</span><br>    <span class="hljs-keyword">float</span> maxAlphaG = <span class="hljs-number">0.01</span>; <span class="hljs-comment">// max G</span><br>    <span class="hljs-keyword">float</span> maxAlphaB = <span class="hljs-number">0.02</span>; <span class="hljs-comment">// max B</span><br><br>    vec4 mask = <span class="hljs-built_in">getMask</span>(time, textureCoords, padding);<br>    <span class="hljs-keyword">float</span> alphaR = <span class="hljs-number">1.0</span>; <span class="hljs-comment">// R</span><br>    <span class="hljs-keyword">float</span> alphaG = <span class="hljs-number">1.0</span>; <span class="hljs-comment">// G</span><br>    <span class="hljs-keyword">float</span> alphaB = <span class="hljs-number">1.0</span>; <span class="hljs-comment">// B</span><br><br>    vec4 resultMask;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">float</span> f = <span class="hljs-number">0.0</span>; f &lt; duration; f += timeGap) &#123;<br>        <span class="hljs-keyword">float</span> tmpTime = f;<br>        vec4 tmpMask = <span class="hljs-built_in">getMask</span>(tmpTime, textureCoords, padding);<br>        <span class="hljs-keyword">float</span> tmpAlphaR = maxAlphaR - maxAlphaR * <span class="hljs-built_in">maskAlphaProgress</span>(time, hideTime, tmpTime) / hideTime;<br>        <span class="hljs-keyword">float</span> tmpAlphaG = maxAlphaG - maxAlphaG * <span class="hljs-built_in">maskAlphaProgress</span>(time, hideTime, tmpTime) / hideTime;<br>        <span class="hljs-keyword">float</span> tmpAlphaB = maxAlphaB - maxAlphaB * <span class="hljs-built_in">maskAlphaProgress</span>(time, hideTime, tmpTime) / hideTime;<br><br>        resultMask += <span class="hljs-built_in">vec4</span>(tmpMask.r * tmpAlphaR,<br>                           tmpMask.g * tmpAlphaG,<br>                           tmpMask.b * tmpAlphaB,<br>                        <span class="hljs-number">1.0</span>);<br>        alphaR -= tmpAlphaR;<br>        alphaG -= tmpAlphaG;<br>        alphaB -= tmpAlphaB;<br>    &#125;<br>    resultMask += <span class="hljs-built_in">vec4</span>(mask.r * alphaR, mask.g * alphaG, mask.b * alphaB, <span class="hljs-number">1.0</span>);<br>    gl_FragColor = resultMask;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic14.jpg"></p><h4 id="【抖音】特效2"><a href="#【抖音】特效2" class="headerlink" title="【抖音】特效2"></a>【抖音】特效2</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br>uniform vec2 u_tex0Resolution;<br><br><span class="hljs-keyword">float</span> duration = <span class="hljs-number">1.2</span>;<br><span class="hljs-keyword">float</span> maxAlpha = <span class="hljs-number">0.6</span>;<br><span class="hljs-keyword">float</span> maxScale = <span class="hljs-number">1.5</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec4 color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">.0</span>);<br>    <span class="hljs-keyword">float</span> progress = <span class="hljs-built_in">mod</span>(u_time, duration) / duration;<br>    <span class="hljs-keyword">float</span> alpha = maxAlpha * (<span class="hljs-number">1.0</span> - progress);<br>    <span class="hljs-keyword">float</span> scale = <span class="hljs-number">1.0</span> + (maxScale - <span class="hljs-number">1.0</span>) * progress;<br>    <span class="hljs-keyword">float</span> weakX = <span class="hljs-number">0.5</span> + (coord.x - <span class="hljs-number">0.5</span>) / scale;<br>    <span class="hljs-keyword">float</span> weakY = <span class="hljs-number">0.5</span> + (coord.y - <span class="hljs-number">0.5</span>) / scale;<br>    vec2 weakTextureCoords = <span class="hljs-built_in">vec2</span>(weakX, weakY);<br>    vec4 weakImage = <span class="hljs-built_in">texture2D</span>(u_tex0, weakTextureCoords);<br>    vec4 maskImage = <span class="hljs-built_in">texture2D</span>(u_tex0, coord);<br>    gl_FragColor = maskImage * (<span class="hljs-number">1.0</span> - alpha) + weakImage * alpha;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic15.jpg"></p><h4 id="【抖音】特效3"><a href="#【抖音】特效3" class="headerlink" title="【抖音】特效3"></a>【抖音】特效3</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br><br><span class="hljs-keyword">float</span> duration = <span class="hljs-number">0.65</span>;<br><span class="hljs-keyword">float</span> maxScale = <span class="hljs-number">1.2</span>;<br><span class="hljs-keyword">float</span> offset = <span class="hljs-number">0.025</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec4 color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">.0</span>);<br>    <span class="hljs-keyword">float</span> progress = <span class="hljs-built_in">mod</span>(u_time, duration) / duration;<br>    vec2 offsetCoord = <span class="hljs-built_in">vec2</span>(offset) * progress;<br>    <span class="hljs-keyword">float</span> scale = <span class="hljs-number">1.0</span> + (maxScale - <span class="hljs-number">1.0</span>) * progress;<br>    vec2 scaleTextureCoords = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>) + (coord - <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>)) / scale;<br>    vec4 maskR = <span class="hljs-built_in">texture2D</span>(u_tex0, scaleTextureCoords + offsetCoord);<br>    vec4 maskB = <span class="hljs-built_in">texture2D</span>(u_tex0, scaleTextureCoords - offsetCoord);<br>    vec4 mask = <span class="hljs-built_in">texture2D</span>(u_tex0, scaleTextureCoords);<br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(maskR.r, mask.g, maskB.b, mask.a);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic16.jpg"></p><h4 id="【抖音】特效4"><a href="#【抖音】特效4" class="headerlink" title="【抖音】特效4"></a>【抖音】特效4</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> PI = <span class="hljs-number">3.1415926</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> maxJitter = <span class="hljs-number">0.06</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> duration = <span class="hljs-number">0.3</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> colorROffset = <span class="hljs-number">0.01</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> colorBOffset = <span class="hljs-number">-0.025</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">rand</span><span class="hljs-params">(<span class="hljs-keyword">float</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">fract</span>(<span class="hljs-built_in">sin</span>(n) * <span class="hljs-number">43758.5453123</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">float</span> time = <span class="hljs-built_in">mod</span>(u_time, duration * <span class="hljs-number">2.0</span>);<br>    <span class="hljs-keyword">float</span> amplitude = <span class="hljs-built_in">max</span>(<span class="hljs-built_in">sin</span>(time * (PI / duration)), <span class="hljs-number">0.0</span>);<br><br>    <span class="hljs-keyword">float</span> jitter = <span class="hljs-built_in">rand</span>(coord.y) * <span class="hljs-number">2.0</span> - <span class="hljs-number">1.0</span>; <span class="hljs-comment">// -1~1</span><br>    <span class="hljs-keyword">bool</span> needOffset = <span class="hljs-built_in">abs</span>(jitter) &lt; maxJitter * amplitude;<br><br>    <span class="hljs-keyword">float</span> textureX = coord.x + (needOffset ? jitter : (jitter * amplitude * <span class="hljs-number">0.006</span>));<br>    vec2 textureCoords = <span class="hljs-built_in">vec2</span>(textureX, coord.y);<br><br>    vec4 mask = <span class="hljs-built_in">texture2D</span>(u_tex0, textureCoords);<br>    vec4 maskR = <span class="hljs-built_in">texture2D</span>(u_tex0, textureCoords + <span class="hljs-built_in">vec2</span>(colorROffset * amplitude, <span class="hljs-number">0.0</span>));<br>    vec4 maskB = <span class="hljs-built_in">texture2D</span>(u_tex0, textureCoords + <span class="hljs-built_in">vec2</span>(colorBOffset * amplitude, <span class="hljs-number">0.0</span>));<br><br>    gl_FragColor = <span class="hljs-built_in">vec4</span>(maskR.r, mask.g, maskB.b, mask.a);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic17.jpg"></p><h4 id="浮雕"><a href="#浮雕" class="headerlink" title="浮雕"></a>浮雕</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform sampler2D u_tex0;<br>uniform vec2 u_resolution;<br>uniform vec2 u_tex0Resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> dir = <span class="hljs-number">60.</span>; <br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> dist = <span class="hljs-number">0.006</span>; <br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> strength = <span class="hljs-number">2.</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> invert = <span class="hljs-number">1.</span>; <span class="hljs-comment">//0, 1</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> BnW = <span class="hljs-number">1.</span>; <span class="hljs-comment">//Black and white? 0, 1</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    vec2 uv = gl_FragCoord.xy / u_resolution.xy;<br>    vec4 image = <span class="hljs-built_in">texture2D</span>(u_tex0, uv);<br>    vec4 color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0.</span>);<br>    <span class="hljs-keyword">if</span> (invert &lt; <span class="hljs-number">1.</span>) &#123;<br>    color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0.5</span> + ((<span class="hljs-built_in">texture2D</span>(u_tex0, uv).rgb - <span class="hljs-built_in">texture2D</span>(u_tex0, uv + (<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(<span class="hljs-built_in">radians</span>(dir)), <span class="hljs-built_in">sin</span>(<span class="hljs-built_in">radians</span>(dir))) * dist)).rgb) * strength), <span class="hljs-number">1.0</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        color = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0.5</span> + ((<span class="hljs-built_in">texture2D</span>(u_tex0, uv + (<span class="hljs-built_in">vec2</span>(<span class="hljs-built_in">cos</span>(<span class="hljs-built_in">radians</span>(dir)), <span class="hljs-built_in">sin</span>(<span class="hljs-built_in">radians</span>(dir))) * dist)).rgb - <span class="hljs-built_in">texture2D</span>(u_tex0, uv).rgb) * strength), <span class="hljs-number">1.0</span>);    <br>    &#125;<br>    <span class="hljs-keyword">if</span> (BnW &gt;= <span class="hljs-number">1.</span>) &#123; <br>        color = <span class="hljs-built_in">vec4</span>((color.r + color.g + color.b) / <span class="hljs-built_in">vec3</span>(<span class="hljs-number">3.</span>), color.a);<br>    &#125;<br>    gl_FragColor = color;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic19.jpg"></p><h4 id="描边"><a href="#描边" class="headerlink" title="描边"></a>描边</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br>uniform vec2 u_tex0Resolution;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> outlineSize = <span class="hljs-number">3.0</span>;<br><span class="hljs-keyword">const</span> vec3 outlineColor = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.298</span>);<br><span class="hljs-keyword">const</span> vec3 foregroundColor = <span class="hljs-built_in">vec3</span>(<span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>);<br><br><span class="hljs-comment">// 判断在这个角度上距离为outlineSize那一点是不是透明  </span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getIsStrokeWithAngel</span><span class="hljs-params">(<span class="hljs-keyword">float</span> angel)</span> </span>&#123;  <br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">int</span> stroke = <span class="hljs-number">0</span>;  <br>    <span class="hljs-keyword">float</span> rad = angel * <span class="hljs-number">0.01745329252</span>; <span class="hljs-comment">// 这个浮点数是 pi / 180，角度转弧度  </span><br>    <span class="hljs-keyword">float</span> a = <span class="hljs-built_in">texture2D</span>(u_tex0, <span class="hljs-built_in">vec2</span>(coord.x + outlineSize * <span class="hljs-built_in">cos</span>(rad) / u_resolution.x, coord.y + outlineSize * <span class="hljs-built_in">sin</span>(rad) / u_resolution.y)).a; <span class="hljs-comment">// 这句比较难懂，outlineSize * cos(rad)可以理解为在x轴上投影，除以textureSize.x是因为texture2D接收的是一个0~1的纹理坐标，而不是像素坐标  </span><br>    <span class="hljs-keyword">if</span> (a &gt;= <span class="hljs-number">0.5</span>)<span class="hljs-comment">// 我把alpha值大于0.5都视为不透明，小于0.5都视为透明  </span><br>    &#123;  <br>        stroke = <span class="hljs-number">1</span>;  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> stroke;  <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 coord = gl_FragCoord.xy / u_resolution;<br>    vec4 myC = <span class="hljs-built_in">texture2D</span>(u_tex0, <span class="hljs-built_in">vec2</span>(coord.x, coord.y)); <span class="hljs-comment">// 正在处理的这个像素点的颜色  </span><br>    myC.rgb *= foregroundColor;  <br>    <span class="hljs-keyword">if</span> (myC.a &gt;= <span class="hljs-number">0.5</span>) &#123;  <br>        gl_FragColor = myC;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> strokeCount = <span class="hljs-number">0</span>;  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">0.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">30.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">60.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">90.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">120.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">150.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">180.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">210.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">240.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">270.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">300.0</span>);  <br>    strokeCount += <span class="hljs-built_in">getIsStrokeWithAngel</span>(<span class="hljs-number">330.0</span>);  <br>    <span class="hljs-keyword">if</span> (strokeCount &gt; <span class="hljs-number">0</span>) <span class="hljs-comment">// 四周围至少有一个点是不透明的，这个点要设成描边颜色  </span><br>    &#123;  <br>        myC.rgb = outlineColor;<br>        <span class="hljs-comment">// myC.r = sin(u_time / 5.0 + cos(u_time * 3.0));</span><br>        <span class="hljs-comment">// myC.g = cos(u_time / 3.0 + sin(u_time * 5.0));</span><br>        myC.a = <span class="hljs-number">1.0</span>;  <br>    &#125;  <br>    gl_FragColor = myC;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic12.jpg"></p><h4 id="卡通效果"><a href="#卡通效果" class="headerlink" title="卡通效果"></a>卡通效果</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform sampler2D u_tex0;<br>uniform vec2 u_resolution;<br>uniform <span class="hljs-keyword">float</span> u_time;<br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GAMMA 1.0</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> RATE 6.0</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> POWER 6.0</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> EPSILON 1e-9</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> T(d) pow(texture2D(u_tex0, fract(d)),vec4(GAMMA))</span><br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">reset</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">texture2D</span>(u_tex0, <span class="hljs-built_in">vec2</span>(<span class="hljs-number">32.5</span>/<span class="hljs-number">256.0</span>, <span class="hljs-number">0.5</span>) ).x &gt; <span class="hljs-number">0.5</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> _K0 = <span class="hljs-number">-20.0</span>/<span class="hljs-number">6.0</span>; <span class="hljs-comment">// center weight</span><br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> _K1 = <span class="hljs-number">4.0</span>/<span class="hljs-number">6.0</span>;   <span class="hljs-comment">// edge-neighbors</span><br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">float</span> _K2 = <span class="hljs-number">1.0</span>/<span class="hljs-number">6.0</span>;   <span class="hljs-comment">// vertex-neighbors</span><br>    <br>    vec2 vUv = gl_FragCoord.xy / u_resolution;<br>    vec2 texel = <span class="hljs-number">1.</span> / u_resolution.xy;<br>    <br>    <span class="hljs-comment">// 3x3 neighborhood coordinates</span><br>    <span class="hljs-keyword">float</span> step_x = texel.x;<br>    <span class="hljs-keyword">float</span> step_y = texel.y;<br>    vec2 n  = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>, step_y);<br>    vec2 ne = <span class="hljs-built_in">vec2</span>(step_x, step_y);<br>    vec2 e  = <span class="hljs-built_in">vec2</span>(step_x, <span class="hljs-number">0.0</span>);<br>    vec2 se = <span class="hljs-built_in">vec2</span>(step_x, -step_y);<br>    vec2 s  = <span class="hljs-built_in">vec2</span>(<span class="hljs-number">0.0</span>, -step_y);<br>    vec2 sw = <span class="hljs-built_in">vec2</span>(-step_x, -step_y);<br>    vec2 w  = <span class="hljs-built_in">vec2</span>(-step_x, <span class="hljs-number">0.0</span>);<br>    vec2 nw = <span class="hljs-built_in">vec2</span>(-step_x, step_y);<br>    vec4 u = <span class="hljs-built_in">T</span>(vUv);<br>    <br>    vec4 u_nb[<span class="hljs-number">8</span>];<br>    u_nb[<span class="hljs-number">0</span>] = <span class="hljs-built_in">T</span>(vUv+n);<br>    u_nb[<span class="hljs-number">1</span>] = <span class="hljs-built_in">T</span>(vUv+e);<br>    u_nb[<span class="hljs-number">2</span>] = <span class="hljs-built_in">T</span>(vUv+s);<br>    u_nb[<span class="hljs-number">3</span>] = <span class="hljs-built_in">T</span>(vUv+w);<br>    u_nb[<span class="hljs-number">4</span>] = <span class="hljs-built_in">T</span>(vUv+nw);<br>    u_nb[<span class="hljs-number">5</span>] = <span class="hljs-built_in">T</span>(vUv+sw);<br>    u_nb[<span class="hljs-number">6</span>] = <span class="hljs-built_in">T</span>(vUv+ne);<br>    u_nb[<span class="hljs-number">7</span>] = <span class="hljs-built_in">T</span>(vUv+se);<br>    <span class="hljs-keyword">float</span> k[<span class="hljs-number">8</span>];<br>    k[<span class="hljs-number">0</span>] = _K1;<br>    k[<span class="hljs-number">1</span>] = _K1;<br>    k[<span class="hljs-number">2</span>] = _K1;<br>    k[<span class="hljs-number">3</span>] = _K1;<br>    k[<span class="hljs-number">4</span>] = _K2;<br>    k[<span class="hljs-number">5</span>] = _K2;<br>    k[<span class="hljs-number">6</span>] = _K2;<br>    k[<span class="hljs-number">7</span>] = _K2;<br>    vec4 m[<span class="hljs-number">8</span>];<br>    vec4 sum = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>        vec4 f = k[i] / (EPSILON + <span class="hljs-built_in">pow</span>(<span class="hljs-built_in">abs</span>(u_nb[i] - u), <span class="hljs-built_in">vec4</span>(POWER))); <br>    m[i] = f;<br>        sum += f;<br>    &#125;<br>    <br>    vec4 lapl = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>    lapl += m[i] * u_nb[i] / sum;<br>    &#125;<br>    <br>    lapl -= u;<br>    gl_FragColor = <span class="hljs-built_in">pow</span>(<span class="hljs-built_in">vec4</span>(u + RATE*lapl),<span class="hljs-built_in">vec4</span>(<span class="hljs-number">1.0</span>/GAMMA));<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/pic18.jpg"></p><h4 id="UV动画"><a href="#UV动画" class="headerlink" title="UV动画"></a>UV动画</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> GL_ES</span><br>precision mediump <span class="hljs-keyword">float</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>uniform <span class="hljs-keyword">float</span> u_time;<br>uniform vec2 u_resolution;<br>uniform sampler2D u_tex0;<br>uniform vec2 u_tex0Resolution;<br><br>vec4 tint = <span class="hljs-built_in">vec4</span>(<span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>);<br><span class="hljs-keyword">int</span> tileX = <span class="hljs-number">4</span>;<br><span class="hljs-keyword">int</span> tileY = <span class="hljs-number">4</span>;<br><span class="hljs-keyword">float</span> speed = <span class="hljs-number">30.0</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    vec2 uv = gl_FragCoord.xy / u_resolution;<br>    <span class="hljs-keyword">float</span> gridIndex = <span class="hljs-built_in">mod</span>(u_time * speed, <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(tileX * tileY));<br>    <span class="hljs-keyword">int</span> indexY = <span class="hljs-built_in"><span class="hljs-keyword">int</span></span>(gridIndex) / tileX;<br>    <span class="hljs-keyword">int</span> indexX = <span class="hljs-built_in"><span class="hljs-keyword">int</span></span>(gridIndex) - tileX * indexY;<br>    uv = <span class="hljs-built_in">vec2</span>((uv.x + <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(indexX)) / <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(tileX), (uv.y + <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(indexY)) / <span class="hljs-built_in"><span class="hljs-keyword">float</span></span>(tileY));<br>    vec4 image = <span class="hljs-built_in">texture2D</span>(u_tex0, uv);<br>    gl_FragColor = image * tint;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/WebGL%E7%9A%84shader%E7%BC%96%E5%86%99/gif26.gif"></p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shader</tag>
      
      <tag>webgl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三角函数图形表</title>
    <link href="/posts/d6ef9114/"/>
    <url>/posts/d6ef9114/</url>
    
    <content type="html"><![CDATA[<h3 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h3><h4 id="sin-x"><a href="#sin-x" class="headerlink" title="sin(x)"></a>sin(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic01.png"></p><h4 id="cos-x"><a href="#cos-x" class="headerlink" title="cos(x)"></a>cos(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic02.png"></p><h4 id="tan-x"><a href="#tan-x" class="headerlink" title="tan(x)"></a>tan(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic03.png"></p><h3 id="反三角函数"><a href="#反三角函数" class="headerlink" title="反三角函数"></a>反三角函数</h3><h4 id="asin-x"><a href="#asin-x" class="headerlink" title="asin(x)"></a>asin(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic04.png"></p><h4 id="acos-x"><a href="#acos-x" class="headerlink" title="acos(x)"></a>acos(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic05.png"></p><h4 id="atan-x"><a href="#atan-x" class="headerlink" title="atan(x)"></a>atan(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic06.png"></p><h3 id="双曲函数"><a href="#双曲函数" class="headerlink" title="双曲函数"></a>双曲函数</h3><h4 id="sinh-x"><a href="#sinh-x" class="headerlink" title="sinh(x)"></a>sinh(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic07.png"></p><h4 id="cosh-x"><a href="#cosh-x" class="headerlink" title="cosh(x)"></a>cosh(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic08.png"></p><h4 id="tanh-x"><a href="#tanh-x" class="headerlink" title="tanh(x)"></a>tanh(x)</h4><p><img src="/images/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E8%A1%A8/pic09.png"></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>game</tag>
      
      <tag>三角函数</tag>
      
      <tag>图形</tag>
      
      <tag>象限</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SVG.js的使用</title>
    <link href="/posts/d4558153/"/>
    <url>/posts/d4558153/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/logo.png" alt="SVG.js"></p><p>　　<strong>svg.js是一个轻量级的操纵和制作SVG动画的js插件库。svg.js可以生成SVG图形、图像、文字和路径等等</strong></p><h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h4><ul><li>官网<br><a href="https://svgjs.com/docs/3.0/">https://svgjs.com/docs/3.0/</a></li><li>github<br><a href="https://github.com/svgdotjs/svg.js">https://github.com/svgdotjs/svg.js</a></li></ul><h4 id="类库版本"><a href="#类库版本" class="headerlink" title="类库版本"></a>类库版本</h4><ul><li>当前最新版本为3.1,此处使用的为3.0的稳定版本</li></ul><h3 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h3><ul><li>编辑一个html文件</li><li>引入svg.js类库</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../lib/svg.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>index.js文件</li><li>画出一个矩形</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>)<br><span class="hljs-keyword">let</span> rect = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>)<br>.fill(<span class="hljs-string">&#x27;#f03&#x27;</span>)<br>.move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic01.jpg"></p><h3 id="基础图形"><a href="#基础图形" class="headerlink" title="基础图形"></a>基础图形</h3><h4 id="矩形"><a href="#矩形" class="headerlink" title="矩形"></a>矩形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>)<br><span class="hljs-keyword">let</span> rect = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>)<br>.fill(<span class="hljs-string">&#x27;#f03&#x27;</span>)<br>.move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic01.jpg"></p><h4 id="圆形"><a href="#圆形" class="headerlink" title="圆形"></a>圆形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>)<br><span class="hljs-keyword">let</span> circle = draw.circle(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).fill(<span class="hljs-string">&#x27;#f96&#x27;</span>).move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic02.jpg"></p><h4 id="圆角矩形"><a href="#圆角矩形" class="headerlink" title="圆角矩形"></a>圆角矩形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; Rect &#125; = SVG;<br><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>);<br><span class="hljs-keyword">let</span> rect = <span class="hljs-keyword">new</span> Rect().fill(<span class="hljs-string">&#x27;#f30&#x27;</span>).size(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).radius(<span class="hljs-number">20</span>).addTo(draw); <br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic03.jpg"></p><h4 id="椭圆"><a href="#椭圆" class="headerlink" title="椭圆"></a>椭圆</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; Rect, Circle, Ellipse, Line &#125; = SVG;<br><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>);<br><span class="hljs-keyword">let</span> ellipse = <span class="hljs-keyword">new</span> Ellipse().move(<span class="hljs-number">300</span>, <span class="hljs-number">300</span>).fill(<span class="hljs-string">&#x27;#f80&#x27;</span>).radius(<span class="hljs-number">75</span>, <span class="hljs-number">50</span>).addTo(draw); <br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic04.jpg"></p><h4 id="线段"><a href="#线段" class="headerlink" title="线段"></a>线段</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; Rect, Circle, Ellipse, Line &#125; = SVG;<br><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>);<br><span class="hljs-keyword">let</span> line = draw.line(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">200</span>, <span class="hljs-number">200</span>).move(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>).stroke(&#123;<br>    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#f06&#x27;</span>,<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">10</span>, <br>    <span class="hljs-attr">linecap</span>: <span class="hljs-string">&#x27;round&#x27;</span> <br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic05.jpg"></p><h4 id="多边形线"><a href="#多边形线" class="headerlink" title="多边形线"></a>多边形线</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; Polyline &#125; = SVG;<br><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>);<br><span class="hljs-keyword">let</span> polyline = draw.polyline(<span class="hljs-string">&#x27;0,0 100,50 50,100&#x27;</span>)<br>.fill(<span class="hljs-string">&#x27;none&#x27;</span>)<br>.move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>)<br>.animate(<span class="hljs-number">500</span>)<br>.stroke(&#123;<span class="hljs-attr">width</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#f60&#x27;</span>, <span class="hljs-attr">linecap</span>: <span class="hljs-string">&#x27;round&#x27;</span>, <span class="hljs-attr">linejoin</span>: <span class="hljs-string">&#x27;round&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic06.jpg"></p><h4 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; Text &#125; = SVG;<br><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">300</span>, <span class="hljs-number">130</span>)<br><span class="hljs-keyword">let</span> txt = draw.text(<span class="hljs-string">&#x27;哈哈&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic07.jpg"></p><h4 id="多边形"><a href="#多边形" class="headerlink" title="多边形"></a>多边形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>)<br><span class="hljs-keyword">let</span> poly = draw.polygon([<br>    [<span class="hljs-number">200</span>, <span class="hljs-number">300</span>],<br>    [<span class="hljs-number">250</span>, <span class="hljs-number">300</span>],<br>    [<span class="hljs-number">400</span>, <span class="hljs-number">500</span>],<br>    [<span class="hljs-number">300</span>, <span class="hljs-number">650</span>],<br>]).fill(<span class="hljs-string">&#x27;#c3185c&#x27;</span>).stroke(<span class="hljs-string">&#x27;#252525&#x27;</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic08.jpg"></p><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>);<br><span class="hljs-keyword">let</span> link = draw.link(<span class="hljs-string">&#x27;http://svgdotjs.github.io/&#x27;</span>);<br>link.target(<span class="hljs-string">&#x27;_blank&#x27;</span>)<br><span class="hljs-keyword">let</span> rect = link.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><h3 id="高级应用"><a href="#高级应用" class="headerlink" title="高级应用"></a>高级应用</h3><h4 id="渐变图形"><a href="#渐变图形" class="headerlink" title="渐变图形"></a>渐变图形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>);<br><span class="hljs-keyword">let</span> circle = draw.circle(<span class="hljs-number">300</span>);<br>circle.move(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>)<br><span class="hljs-keyword">let</span> gradient = draw.gradient(<span class="hljs-string">&#x27;linear&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>) </span>&#123;<br>add.stop(<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;#a18cd1&#x27;</span>)<br>    add.stop(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;#fbc2eb&#x27;</span>)<br>&#125;);<br>gradient.from(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>).to(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>circle.attr(&#123;<br>    <span class="hljs-attr">fill</span>: gradient<br>&#125;)<br><br>draw.circle(<span class="hljs-number">300</span>).fill(draw.gradient(<span class="hljs-string">&#x27;linear&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>) </span>&#123;<br>    add.stop(<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;#eea2a2&#x27;</span>)<br>    add.stop(<span class="hljs-number">0.19</span>, <span class="hljs-string">&#x27;#bbc1bf&#x27;</span>)<br>    add.stop(<span class="hljs-number">0.42</span>, <span class="hljs-string">&#x27;#57c6e1&#x27;</span>)<br>    add.stop(<span class="hljs-number">0.79</span>, <span class="hljs-string">&#x27;#b49fda&#x27;</span>)<br>    add.stop(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;#7ac5d8&#x27;</span>)<br>&#125;).from(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).to(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>)).move(<span class="hljs-number">400</span>, <span class="hljs-number">20</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic10.jpg"></p><h3 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h3><ul><li>执行多个动作</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>);<br><span class="hljs-keyword">let</span> rect1 = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).attr(&#123;<span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#b03&#x27;</span>&#125;);<br>rect1.animate().move(<span class="hljs-number">150</span>, <span class="hljs-number">150</span>);<br><span class="hljs-keyword">let</span> rect2 = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).attr(&#123;<span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#a03&#x27;</span>&#125;);<br>rect2.animate(&#123;<br>    <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span>,<br>    <span class="hljs-attr">delay</span>: <span class="hljs-number">1000</span>,<br>    <span class="hljs-attr">when</span>: <span class="hljs-string">&#x27;now&#x27;</span>,<br>    <span class="hljs-attr">swing</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">times</span>: <span class="hljs-number">5</span>,<br>    <span class="hljs-attr">wait</span>: <span class="hljs-number">200</span><br>&#125;).attr(&#123; <span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#393&#x27;</span> &#125;)<br><span class="hljs-keyword">let</span> rect3 = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).attr(&#123;<span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#003&#x27;</span>&#125;).animate(&#123;<br>    <span class="hljs-attr">delay</span>: <span class="hljs-number">200</span><br>&#125;).move(<span class="hljs-number">300</span>, <span class="hljs-number">200</span>);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/ani03.gif"></p><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><ul><li>鼠标的事件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; Text &#125; = SVG;<br><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>);<br><span class="hljs-keyword">let</span> rect = draw.rect(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).attr(&#123;<span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#b03&#x27;</span>&#125;);<br><span class="hljs-keyword">let</span> circle = draw.circle(<span class="hljs-number">100</span>).attr(&#123;<span class="hljs-attr">fill</span>: <span class="hljs-string">&#x27;#b03&#x27;</span>&#125;).move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>);<br>addEvent(rect);<br>addEvent(circle);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addEvent</span>(<span class="hljs-params">element</span>) </span>&#123;<br>    element.on(<span class="hljs-string">&#x27;mousedown&#x27;</span>, mousedown)<br>    element.on(<span class="hljs-string">&#x27;mouseup&#x27;</span>, mouseup)<br>    element.on(<span class="hljs-string">&#x27;mouseover&#x27;</span>, mouseover)<br>    element.on(<span class="hljs-string">&#x27;mouseout&#x27;</span>, mouseout)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mousedown</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>, <span class="hljs-string">&#x27;&lt;&gt;&#x27;</span>).fill(<span class="hljs-string">&#x27;#000&#x27;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseup</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>, <span class="hljs-string">&#x27;&lt;&gt;&#x27;</span>).fill(<span class="hljs-string">&#x27;#b03&#x27;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseover</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>, <span class="hljs-string">&#x27;&lt;&gt;&#x27;</span>).fill(<span class="hljs-string">&#x27;#f90&#x27;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseout</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>, <span class="hljs-string">&#x27;&lt;&gt;&#x27;</span>).fill(<span class="hljs-string">&#x27;#b03&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/ani04.gif"></p><h3 id="附加类库"><a href="#附加类库" class="headerlink" title="附加类库"></a>附加类库</h3><h4 id="缓动类库"><a href="#缓动类库" class="headerlink" title="缓动类库"></a>缓动类库</h4><ul><li><p>类库地址<br><a href="https://github.com/svgdotjs/svg.easing.js">https://github.com/svgdotjs/svg.easing.js</a></p></li><li><p>提供的缓动函数</p><ul><li>quadIn</li><li>quadOut</li><li>quadInOut</li><li>cubicIn</li><li>cubicOut</li><li>cubicInOut</li><li>quartIn</li><li>quartOut</li><li>quartInOut</li><li>quintIn</li><li>quintOut</li><li>quintInOut</li><li>sineIn</li><li>sineOut</li><li>sineInOut</li><li>expoIn</li><li>expoOut</li><li>expoInOut</li><li>circIn</li><li>circOut</li><li>circInOut</li><li>backIn</li><li>backOut</li><li>backInOut</li><li>swingFromTo</li><li>swingFrom</li><li>swingTo</li><li>bounce</li><li>bounceOut</li><li>elastic</li></ul></li><li><p>测试类库</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>);<br><span class="hljs-keyword">let</span> rect = draw.rect(<span class="hljs-number">200</span>, <span class="hljs-number">100</span>).radius(<span class="hljs-number">20</span>).move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>).fill(<span class="hljs-string">&#x27;#f96&#x27;</span>);<br>rect.animate(<span class="hljs-number">300</span>).ease(SVG.easing.backOut).transform(&#123;<br>    <span class="hljs-attr">rotate</span>: <span class="hljs-number">125</span>,<br>    <span class="hljs-attr">translateX</span>: <span class="hljs-number">300</span>,<br>    <span class="hljs-attr">translateY</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-attr">scale</span>: <span class="hljs-number">1.5</span> <br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/ani05.gif"></p><h4 id="滤镜类库"><a href="#滤镜类库" class="headerlink" title="滤镜类库"></a>滤镜类库</h4><ul><li><p>类库地址<br><a href="https://github.com/svgdotjs/svg.filter.js">https://github.com/svgdotjs/svg.filter.js</a></p></li><li><p>测试类库</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1200</span>, <span class="hljs-number">1200</span>);<br><span class="hljs-keyword">const</span> W = <span class="hljs-number">180</span>;<br><span class="hljs-keyword">const</span> H = <span class="hljs-number">120</span>;<br><br><span class="hljs-keyword">let</span> image = <span class="hljs-literal">null</span>;<br><span class="hljs-comment">// 高斯模糊</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">0</span> * W, <span class="hljs-number">0</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.gaussianBlur(<span class="hljs-number">2</span>);<br>&#125;)<br><br><span class="hljs-comment">// 径向模糊</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">1</span> * W, <span class="hljs-number">0</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.gaussianBlur(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>);<br>&#125;)<br><br><span class="hljs-comment">// 色彩饱和度</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">2</span> * W, <span class="hljs-number">0</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.colorMatrix(<span class="hljs-string">&#x27;saturate&#x27;</span>, <span class="hljs-number">0</span>);<br>&#125;)<br><br><span class="hljs-comment">// 对比度</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">3</span> * W, <span class="hljs-number">0</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> amount = <span class="hljs-number">4</span><br>    add.componentTransfer(&#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;linear&#x27;</span>,<br>        <span class="hljs-attr">slope</span>: amount,<br>        <span class="hljs-attr">intercept</span>: -(<span class="hljs-number">0.3</span> * amount) + <span class="hljs-number">0.3</span><br>    &#125;)<br>&#125;)<br><br><span class="hljs-comment">// 旧时光</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">0</span> * W, <span class="hljs-number">1</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.colorMatrix(<span class="hljs-string">&#x27;matrix&#x27;</span>, [ <span class="hljs-number">.343</span>, <span class="hljs-number">.669</span>, <span class="hljs-number">.119</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>        , <span class="hljs-number">.249</span>, <span class="hljs-number">.626</span>, <span class="hljs-number">.130</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>        , <span class="hljs-number">.172</span>, <span class="hljs-number">.334</span>, <span class="hljs-number">.111</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>        , <span class="hljs-number">.000</span>, <span class="hljs-number">.000</span>, <span class="hljs-number">.000</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span> ])<br>&#125;)<br><br><span class="hljs-comment">// 颜色翻转</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">1</span> * W, <span class="hljs-number">1</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.colorMatrix(<span class="hljs-string">&#x27;hueRotate&#x27;</span>, <span class="hljs-number">180</span>)<br>&#125;)<br><br><span class="hljs-comment">// 底片效果</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">2</span> * W, <span class="hljs-number">1</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.colorMatrix(<span class="hljs-string">&#x27;luminanceToAlpha&#x27;</span>)<br>&#125;)<br><br><span class="hljs-comment">// 加滤色</span><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">3</span> * W, <span class="hljs-number">1</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-params">add</span> =&gt;</span> &#123;<br>    add.colorMatrix(<span class="hljs-string">&#x27;matrix&#x27;</span>, [ <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>,   <span class="hljs-number">0</span>,   <span class="hljs-number">0</span>,   <span class="hljs-number">0</span><br>        , <span class="hljs-number">0</span>,   <span class="hljs-number">0.2</span>, <span class="hljs-number">0</span>,   <span class="hljs-number">0</span>,   <span class="hljs-number">0</span><br>        , <span class="hljs-number">0</span>,   <span class="hljs-number">0</span>,   <span class="hljs-number">0.2</span>, <span class="hljs-number">0</span>,   <span class="hljs-number">0</span><br>        , <span class="hljs-number">0</span>,   <span class="hljs-number">0</span>,   <span class="hljs-number">0</span>,   <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span> ])<br>&#125;)<br><br><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">0</span> * W, <span class="hljs-number">2</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>) </span>&#123;<br>    add.morphology(<span class="hljs-string">&quot;dilate&quot;</span>, <span class="hljs-number">2</span>);<br>&#125;)<br><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">1</span> * W, <span class="hljs-number">2</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> blur = add.offset(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>).in(add.$sourceAlpha).gaussianBlur(<span class="hljs-number">1</span>)<br>    add.blend(add.$source, blur)<br>&#125;)<br><br><br>image = draw.image(<span class="hljs-string">&#x27;./test.jpg&#x27;</span>).size(W, H).move(<span class="hljs-number">2</span> * W, <span class="hljs-number">2</span> * H);<br>image.filterWith(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> matrix = add.convolveMatrix([<br>        <span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<br>        <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span><br>    ]).attr(&#123;<br>    <span class="hljs-attr">devisor</span>: <span class="hljs-string">&#x27;2&#x27;</span>,<br>    <span class="hljs-attr">preserveAlpha</span>: <span class="hljs-string">&#x27;false&#x27;</span><br>    &#125;).in(add.$sourceAlpha)<br><br>    <span class="hljs-comment">//recolor it</span><br>    <span class="hljs-keyword">var</span> color = add.composite(add.flood(<span class="hljs-string">&#x27;#ff2222&#x27;</span>),matrix,<span class="hljs-string">&#x27;in&#x27;</span>);<br><br>    <span class="hljs-comment">//merge all of them toggether</span><br>    add.merge(color,add.$source);<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/pic09.jpg"></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h4 id="点击变换切割矩形"><a href="#点击变换切割矩形" class="headerlink" title="点击变换切割矩形"></a>点击变换切割矩形</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>)<br><br><span class="hljs-keyword">let</span> cutX = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> cutY = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">let</span> polygon = draw.polygon([<br>    [cutX, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">400</span>, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">400</span>, <span class="hljs-number">400</span>],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">400</span>],<br>    [<span class="hljs-number">0</span>, cutY],<br>    [cutX, cutY],<br>]).attr(&#123;<br>    <span class="hljs-string">&#x27;fill&#x27;</span>: <span class="hljs-string">&#x27;#b2d749&#x27;</span>,<br>    <span class="hljs-string">&#x27;stroke&#x27;</span>: <span class="hljs-string">&#x27;#092323&#x27;</span>,<br>    <span class="hljs-string">&#x27;stroke-width&#x27;</span>: <span class="hljs-number">5</span><br>&#125;).move(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>);<br><br><span class="hljs-built_in">document</span>.addEventListener(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function"><span class="hljs-params">event</span> =&gt;</span> &#123;<br>    cutX = event.clientX - <span class="hljs-number">25</span>;<br>    cutY = event.clientY - <span class="hljs-number">25</span>;<br>    polygon.clear();<br>    polygon.animate(<span class="hljs-number">600</span>).plot([<br>        [cutX, <span class="hljs-number">0</span>],<br>        [<span class="hljs-number">400</span>, <span class="hljs-number">0</span>],<br>        [<span class="hljs-number">400</span>, <span class="hljs-number">400</span>],<br>        [<span class="hljs-number">0</span>, <span class="hljs-number">400</span>],<br>        [<span class="hljs-number">0</span>, cutY],<br>        [cutX, cutY],<br>    ]).attr(&#123;<br>        <span class="hljs-string">&#x27;fill&#x27;</span>: <span class="hljs-string">&#x27;#b2d749&#x27;</span>,<br>        <span class="hljs-string">&#x27;stroke&#x27;</span>: <span class="hljs-string">&#x27;#092323&#x27;</span>,<br>        <span class="hljs-string">&#x27;stroke-width&#x27;</span>: <span class="hljs-number">5</span><br>    &#125;).move(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>);;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/ani01.gif"></p><h4 id="文本按钮和图形按钮"><a href="#文本按钮和图形按钮" class="headerlink" title="文本按钮和图形按钮"></a>文本按钮和图形按钮</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>);<br><span class="hljs-keyword">let</span> btn = draw.group();<br><span class="hljs-keyword">let</span> rect = draw.rect(<span class="hljs-number">80</span>, <span class="hljs-number">40</span>).radius(<span class="hljs-number">10</span>).fill(<span class="hljs-string">&#x27;#f96&#x27;</span>);<br>btn.add(rect);<br><span class="hljs-keyword">let</span> txt = draw.text(<span class="hljs-string">&quot;Button&quot;</span>).fill(<span class="hljs-string">&quot;#FFF&quot;</span>).center(<span class="hljs-number">40</span>, <span class="hljs-number">20</span>);<br>btn.add(txt);<br>btn.move(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>)<br>btn.css(<span class="hljs-string">&#x27;cursor&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>)<br><br>btn.click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    alert(<span class="hljs-string">&#x27;点击到了按钮！&#x27;</span>)<br>    btn.click(<span class="hljs-literal">null</span>)<br>&#125;)<br><br><span class="hljs-keyword">let</span> imageBtn = draw.group();<br><span class="hljs-keyword">let</span> image = draw.image(<span class="hljs-string">&#x27;./btn.jpg&#x27;</span>).scale(<span class="hljs-number">0.1</span>);<br>imageBtn.add(image);<br>imageBtn.move(<span class="hljs-number">300</span>, <span class="hljs-number">90</span>)<br>imageBtn.css(<span class="hljs-string">&#x27;cursor&#x27;</span>, <span class="hljs-string">&#x27;pointer&#x27;</span>)<br>imageBtn.click(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>&#125;)<br><br>addEvent(imageBtn);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addEvent</span>(<span class="hljs-params">element</span>) </span>&#123;<br>    element.on(<span class="hljs-string">&#x27;mousedown&#x27;</span>, mousedown)<br>    element.on(<span class="hljs-string">&#x27;mouseup&#x27;</span>, mouseup)<br>    element.on(<span class="hljs-string">&#x27;mouseover&#x27;</span>, mouseover)<br>    element.on(<span class="hljs-string">&#x27;mouseout&#x27;</span>, mouseout)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mousedown</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>).transform(&#123;<br>        <span class="hljs-attr">scale</span>: <span class="hljs-number">0.9</span><br>    &#125;)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseup</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>).transform(&#123;<br>        <span class="hljs-attr">scale</span>: <span class="hljs-number">1.0</span><br>    &#125;)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseover</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// this.animate(100).transform(&#123;</span><br>    <span class="hljs-comment">//     scale: 1.0</span><br>    <span class="hljs-comment">// &#125;)</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mouseout</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.animate(<span class="hljs-number">100</span>).transform(&#123;<br>        <span class="hljs-attr">scale</span>: <span class="hljs-number">1.0</span><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/ani06.gif"></p><h4 id="snap的测试demo"><a href="#snap的测试demo" class="headerlink" title="snap的测试demo"></a>snap的测试demo</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> draw = SVG().addTo(<span class="hljs-string">&#x27;body&#x27;</span>).size(<span class="hljs-number">1000</span>, <span class="hljs-number">1000</span>)<br><span class="hljs-keyword">let</span> bigCircle = draw.circle(<span class="hljs-number">300</span>).move(<span class="hljs-number">60</span>, <span class="hljs-number">60</span>);<br>bigCircle.attr(&#123;<br>    <span class="hljs-attr">fill</span>: <span class="hljs-string">&quot;#bada55&quot;</span>,<br>    <span class="hljs-attr">stroke</span>: <span class="hljs-string">&quot;#000&quot;</span>,<br>    <span class="hljs-attr">strokeWidth</span>: <span class="hljs-number">5</span><br>&#125;);<br><span class="hljs-keyword">let</span> smallCircle = draw.circle(<span class="hljs-number">210</span>).move(<span class="hljs-number">30</span>, <span class="hljs-number">90</span>);<br><span class="hljs-keyword">let</span> discs = draw.group();<br>discs.add(smallCircle);<br>discs.add(draw.circle(<span class="hljs-number">210</span>).move(<span class="hljs-number">180</span>, <span class="hljs-number">90</span>));<br>discs.attr(&#123;<br>    <span class="hljs-attr">fill</span>: <span class="hljs-string">&quot;#FFF&quot;</span><br>&#125;);<br><span class="hljs-keyword">let</span> mask = draw.mask().add(discs);<br>bigCircle.maskWith(mask);<br>smallCircle.animate(<span class="hljs-number">1000</span>).size(<span class="hljs-number">150</span>)<br>discs.find(<span class="hljs-string">&quot;circle:nth-child(2)&quot;</span>).animate(<span class="hljs-number">1000</span>).size(<span class="hljs-number">150</span>);<br><span class="hljs-keyword">let</span> p = draw.pattern(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>) </span>&#123;<br>    add.path(<span class="hljs-string">&quot;M10-5-10,15M15,0,0,15M0-5-20,15&quot;</span>).attr(&#123;<br>        <span class="hljs-attr">fill</span>: <span class="hljs-string">&quot;none&quot;</span>,<br>        <span class="hljs-attr">stroke</span>: <span class="hljs-string">&quot;#bada55&quot;</span>,<br>        <span class="hljs-attr">strokeWidth</span>: <span class="hljs-number">5</span><br>    &#125;);<br>&#125;)<br>bigCircle.attr(&#123;<br>    <span class="hljs-attr">fill</span>: p<br>&#125;);<br><br><span class="hljs-keyword">let</span> gradient = draw.gradient(<span class="hljs-string">&#x27;linear&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">add</span>) </span>&#123;<br>add.stop(<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;#a18cd1&#x27;</span>)<br>    add.stop(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;#fbc2eb&#x27;</span>)<br>&#125;).from(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>).to(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br><br>discs.attr(&#123;<br>    <span class="hljs-attr">fill</span>: gradient<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="/images/svg.js%E7%9A%84%E4%BD%BF%E7%94%A8/ani02.gif"></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SVG.js</tag>
      
      <tag>js类库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++与lua的交互</title>
    <link href="/posts/9d45694a/"/>
    <url>/posts/9d45694a/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><figcaption><span>佚名</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs blockquote">**所有那些太美的、太好的、太深刻的、太慎重的、太重大的东西，总让人下意识地想去躲避。**<br></code></pre></td></tr></table></figure><h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/lua.jpg"><br>Lua 是一种轻量小巧的脚本语言，常与c++/c配合进行游戏的开发。对于一些需要动态实现的部分，可以说十分胜任。</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><ul><li>在官网上可以下载到最新版本的lua</li><li>直接下载最新版本的源码即可<br><a href="https://www.lua.org/download.html">https://www.lua.org/download.html</a></li></ul><h4 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h4><ul><li>将源码包src下的源文件导入到vs工程下</li><li>注意需要去除【lua.c】【luac.c】两个文件，不然无法编译通过</li></ul><p><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/pic2.jpg"></p><h4 id="编写测试"><a href="#编写测试" class="headerlink" title="编写测试"></a>编写测试</h4><ul><li>test.lua</li><li>在lua中定义内容，在c++中获取</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua">str = <span class="hljs-string">&quot;I am so cool&quot;</span><br>tbl = &#123;name = <span class="hljs-string">&quot;shun&quot;</span>, id = <span class="hljs-number">20114442</span>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span><span class="hljs-params">(a,b)</span></span><br><span class="hljs-keyword">return</span> a + b<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><ul><li>main.cpp</li><li>创建可运行的lua虚拟栈</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> &lt;string.h-  </span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cassert&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;lua.hpp&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//1.创建Lua状态  </span><br>    lua_State* L = <span class="hljs-built_in">luaL_newstate</span>();<br>    <span class="hljs-keyword">if</span> (L == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;state is null\n&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-comment">//2.加载lua文件 </span><br>    <span class="hljs-keyword">int</span> bRet = <span class="hljs-built_in">luaL_loadfile</span>(L, <span class="hljs-string">&quot;test.lua&quot;</span>);<br>    <span class="hljs-keyword">if</span> (bRet) &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;load file error&quot;</span> &lt;&lt; endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-comment">//3.运行Lua文件</span><br>    bRet = <span class="hljs-built_in">lua_pcall</span>(L, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (bRet) &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;pcall error&quot;</span> &lt;&lt; endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-comment">//4.读取变量</span><br>    <span class="hljs-built_in">lua_getglobal</span>(L, <span class="hljs-string">&quot;str&quot;</span>);<br>    string str = <span class="hljs-built_in">lua_tostring</span>(L, <span class="hljs-number">-1</span>);<br>    cout &lt;&lt; <span class="hljs-string">&quot;str = &quot;</span> &lt;&lt; str.<span class="hljs-built_in">c_str</span>() &lt;&lt; endl;<br>    <span class="hljs-comment">//5.读取table</span><br>    <span class="hljs-built_in">lua_getglobal</span>(L, <span class="hljs-string">&quot;tbl&quot;</span>);<br>    <span class="hljs-built_in">lua_getfield</span>(L, <span class="hljs-number">-1</span>, <span class="hljs-string">&quot;name&quot;</span>);<br>    str = <span class="hljs-built_in">lua_tostring</span>(L, <span class="hljs-number">-1</span>);<br>    cout &lt;&lt; <span class="hljs-string">&quot;tbl:name = &quot;</span> &lt;&lt; str.<span class="hljs-built_in">c_str</span>() &lt;&lt; endl;<br>    <span class="hljs-comment">//6.读取函数  </span><br>    <span class="hljs-built_in">lua_getglobal</span>(L, <span class="hljs-string">&quot;add&quot;</span>);        <span class="hljs-comment">// 获取函数，压入栈中  </span><br>    <span class="hljs-built_in">lua_pushnumber</span>(L, <span class="hljs-number">10</span>);          <span class="hljs-comment">// 压入第一个参数  </span><br>    <span class="hljs-built_in">lua_pushnumber</span>(L, <span class="hljs-number">20</span>);          <span class="hljs-comment">// 压入第二个参数  </span><br>    <span class="hljs-keyword">int</span> iRet = <span class="hljs-built_in">lua_pcall</span>(L, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<span class="hljs-comment">// 调用函数，调用完成以后，会将返回值压入栈中，2表示参数个数，1表示返回结果个数。  </span><br>    <span class="hljs-keyword">if</span> (iRet)                       <span class="hljs-comment">// 调用出错  </span><br>    &#123;<br>        <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* pErrorMsg = <span class="hljs-built_in">lua_tostring</span>(L, <span class="hljs-number">-1</span>);<br>        cout &lt;&lt; pErrorMsg &lt;&lt; endl;<br>        <span class="hljs-built_in">lua_close</span>(L);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">lua_isnumber</span>(L, <span class="hljs-number">-1</span>))        <span class="hljs-comment">//取值输出  </span><br>    &#123;<br>        <span class="hljs-keyword">double</span> fValue = <span class="hljs-built_in">lua_tonumber</span>(L, <span class="hljs-number">-1</span>);<br>        cout &lt;&lt; <span class="hljs-string">&quot;Result is &quot;</span> &lt;&lt; fValue &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-comment">//7关闭state</span><br>    <span class="hljs-built_in">lua_close</span>(L);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h4><ul><li>lua文件内定义变量和函数被顺利取出</li><li>当前已经具备了执行lua的环境</li><li><strong>但是这样的操作台过麻烦，每次倒要去做出栈和压栈操作，还要知道数据栈的位置</strong></li></ul><p><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/base1.jpg"></p><h3 id="SOL"><a href="#SOL" class="headerlink" title="SOL"></a>SOL</h3><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><p><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/sol.jpg"><br>当前的方式使用lua还是比较的麻烦，我们需要借助于一个框架实现lua与c++的绑定。</p><h4 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h4><ul><li>下载源码即可<br><a href="https://github.com/ThePhD/sol2/releases">https://github.com/ThePhD/sol2/releases</a></li></ul><h4 id="打包单一头文件"><a href="#打包单一头文件" class="headerlink" title="打包单一头文件"></a>打包单一头文件</h4><ul><li>运行源码 single文件夹下的single.py脚本</li><li>可以得到单一的头文件</li><li><strong>导入项目即可</strong></li></ul><p><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/pic1.jpg"></p><h3 id="C-与Lua"><a href="#C-与Lua" class="headerlink" title="C++与Lua"></a>C++与Lua</h3><h4 id="编写一个主入口类"><a href="#编写一个主入口类" class="headerlink" title="编写一个主入口类"></a>编写一个主入口类</h4><ul><li>GameMain.h</li><li>作为当前主程序的入口，用于初始化lua运行时和绑定</li><li>printNum为需要在lua中调用的函数</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">namespace</span> LuaScripting<br>&#123;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LuaRuntime</span>;</span><br>&#125;<br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameMain</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">private</span>:<br>LuaScripting::LuaRuntime* m_luaRuntime;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">printNum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span></span>;<br><span class="hljs-function">LuaScripting::LuaRuntime* <span class="hljs-title">getLuaRuntime</span><span class="hljs-params">()</span></span>;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>GameMain.cpp</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;GameMain.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;LuaRuntime.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">GameMain::init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>m_luaRuntime = <span class="hljs-keyword">new</span> LuaScripting::<span class="hljs-built_in">LuaRuntime</span>();<br>m_luaRuntime-&gt;<span class="hljs-built_in">init</span>(<span class="hljs-keyword">this</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">GameMain::printNum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span></span><br><span class="hljs-function"></span>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;num:&quot;</span> &lt;&lt; num &lt;&lt; endl;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-function">LuaScripting::LuaRuntime* <span class="hljs-title">GameMain::getLuaRuntime</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> m_luaRuntime;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="编写一个lua运行时类"><a href="#编写一个lua运行时类" class="headerlink" title="编写一个lua运行时类"></a>编写一个lua运行时类</h4><ul><li>LuaRuntime.h</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sol/sol.hpp&gt;</span></span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameMain</span>;</span><br><br><span class="hljs-keyword">namespace</span> LuaScripting<br>&#123;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LuaRuntime</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">LuaRuntime</span>();<br>~<span class="hljs-built_in">LuaRuntime</span>();<br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">init</span><span class="hljs-params">(GameMain* main)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">cleanup</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function">sol::state* <span class="hljs-title">getLuaState</span><span class="hljs-params">()</span></span>;<br><span class="hljs-keyword">private</span>:<br>sol::state* m_state;<br>&#125;;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>LuaRuntime.cpp</li><li>在init的时候初始化sol<ul><li>打开需要用到的标准库</li><li>注册绑定C++函数</li><li>注册全局变量</li></ul></li><li>在初始化和启动的时候调用对应的lua文件</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;LuaRuntime.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;LuaAPI.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;GameMain.h&quot;</span></span><br><br><span class="hljs-keyword">namespace</span> LuaScripting<br>&#123;<br><br>LuaRuntime::<span class="hljs-built_in">LuaRuntime</span>()<br>&#123;<br>m_state = <span class="hljs-literal">NULL</span>;<br>&#125;<br><br>LuaRuntime::~<span class="hljs-built_in">LuaRuntime</span>()<br>&#123;<br><span class="hljs-keyword">delete</span> m_state;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">LuaRuntime::init</span><span class="hljs-params">(GameMain* main)</span></span><br><span class="hljs-function"></span>&#123;<br>m_state = <span class="hljs-keyword">new</span> sol::<span class="hljs-built_in">state</span>();<br><br><span class="hljs-comment">// 打开标准库</span><br>m_state-&gt;<span class="hljs-built_in">open_libraries</span>(<br>sol::lib::base,<br>sol::lib::package,<br>sol::lib::coroutine,<br>sol::lib::string,<br>sol::lib::table,<br>sol::lib::math,<br>sol::lib::io,<br>sol::lib::debug,<br>sol::lib::os<br>);<br><br><span class="hljs-built_in">RegisterUserTypes</span>(m_state);<br><span class="hljs-built_in">RegisterGlobals</span>(m_state, main);<br><br><span class="hljs-comment">// 执行Lua初始化脚本，注册枚举、全局工具函数等</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">auto</span> result = m_state-&gt;<span class="hljs-built_in">safe_script</span>(<span class="hljs-string">&quot;require \&quot;bootstrap\&quot;&quot;</span>,<br>sol::script_pass_on_error);<br><span class="hljs-keyword">if</span> (!result.<span class="hljs-built_in">valid</span>())<br>&#123;<br><span class="hljs-keyword">const</span> sol::error err = result;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">LuaRuntime::cleanup</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">auto</span> result = m_state-&gt;<span class="hljs-built_in">safe_script</span>(<span class="hljs-string">&quot;require \&quot;shutdown\&quot;&quot;</span>,<br>sol::script_pass_on_error);<br><span class="hljs-keyword">if</span> (!result.<span class="hljs-built_in">valid</span>())<br>&#123;<br><span class="hljs-keyword">const</span> sol::error err = result;<br>&#125;<br>&#125;<br><br><span class="hljs-function">sol::state* <span class="hljs-title">LuaRuntime::getLuaState</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> m_state;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="编写luaAPI"><a href="#编写luaAPI" class="headerlink" title="编写luaAPI"></a>编写luaAPI</h4><ul><li>LuaAPI.h</li><li>定义命名空间用来包含需要在lua中实现调用的内容</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sol/sol.hpp&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameMain</span>;</span><br><br><span class="hljs-keyword">namespace</span> LuaScripting<br>&#123;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NativeUtils</span> &#123;</span><br><span class="hljs-keyword">private</span>:<br>sol::state* m_state;<br>GameMain* m_main;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">NativeUtils</span>(sol::state* state, GameMain* main);<br><br><span class="hljs-function">GameMain* <span class="hljs-title">GetMain</span><span class="hljs-params">()</span></span>;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">RegisterUserTypes</span><span class="hljs-params">(sol::state* state)</span></span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">RegisterGlobals</span><span class="hljs-params">(sol::state* state, GameMain* main)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>LuaAPI.cpp</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;LuaAPI.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;GameMain.h&quot;</span></span><br><br><span class="hljs-keyword">namespace</span> LuaScripting<br>&#123;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">RegisterUserTypes</span><span class="hljs-params">(sol::state* state)</span> </span>&#123;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">auto</span> printNum = [](GameMain&amp; main, <span class="hljs-keyword">int</span> num) &#123;<br>main.<span class="hljs-built_in">printNum</span>(num);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;;<br>state-&gt;new_usertype&lt;GameMain&gt;(<span class="hljs-string">&quot;GameMain&quot;</span>,<br><span class="hljs-string">&quot;new&quot;</span>, sol::no_constructor,<br><span class="hljs-string">&quot;printNum&quot;</span>, printNum<br>);<br><br>state-&gt;new_usertype&lt;NativeUtils&gt;(<span class="hljs-string">&quot;NativeUtils&quot;</span>,<br><span class="hljs-string">&quot;new&quot;</span>, sol::no_constructor,<br><span class="hljs-string">&quot;GetMain&quot;</span>, &amp;NativeUtils::GetMain<br>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">RegisterGlobals</span><span class="hljs-params">(sol::state* state, GameMain* main)</span></span><br><span class="hljs-function"></span>&#123;<br>(*state)[<span class="hljs-string">&quot;g_nativeUtils&quot;</span>] = NativeUtils&#123; state, main &#125;;<br>&#125;<br><br>NativeUtils::<span class="hljs-built_in">NativeUtils</span>(sol::state* state, GameMain* main)<br>: <span class="hljs-built_in">m_state</span>(state)<br>, <span class="hljs-built_in">m_main</span>(main)<br>&#123;<br><br>&#125;<br><br><span class="hljs-function">GameMain* <span class="hljs-title">NativeUtils::GetMain</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> m_main;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="编写入口"><a href="#编写入口" class="headerlink" title="编写入口"></a>编写入口</h4><ul><li>main.cpp</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> &lt;string.h-  </span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cassert&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sol.hpp&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;GameMain.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;LuaRuntime.h&quot;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    GameMain* main = <span class="hljs-keyword">new</span> <span class="hljs-built_in">GameMain</span>();<br>    main-&gt;<span class="hljs-built_in">init</span>();<br>    main-&gt;<span class="hljs-built_in">getLuaRuntime</span>()-&gt;<span class="hljs-built_in">getLuaState</span>()-&gt;<span class="hljs-built_in">script_file</span>(<span class="hljs-string">&quot;hello.lua&quot;</span>);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="一些lua文件"><a href="#一些lua文件" class="headerlink" title="一些lua文件"></a>一些lua文件</h4><ul><li>bootstrap.lua </li><li>启动回调文件</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;-------------bootstrap----------------&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>shutdown.lua</li><li>关闭回调文件</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--------------shutdown---------------&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>hello.lua</li><li>执行lua的输出</li><li>调用了GameMain中定义的方法</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello CPP&quot;</span>)<br><span class="hljs-built_in">print</span>(g_nativeUtils)<br>g_main = g_nativeUtils:GetMain()<br><span class="hljs-built_in">print</span>(g_main)<br>g_main:printNum(<span class="hljs-number">10086</span>)<br></code></pre></td></tr></table></figure><h4 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h4><ul><li>c++与lua实现了互相调用</li><li>C++与lua实现了函数绑定</li></ul><p><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/base2.jpg"></p><h3 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h3><ul><li><strong>lua虚拟栈</strong><br><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/pic4.png"></li><li><strong>lua虚拟栈的流程图</strong><br><img src="/images/C++%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/pic3.gif"></li><li><strong>SOL对C++的新特性支持比较激进，需要使用最新的C++版本编译</strong></li><li><strong>SOL中还有许多内容，比如线程 优化等</strong><br><a href="https://sol2.readthedocs.io/en/latest/">https://sol2.readthedocs.io/en/latest/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c++</tag>
      
      <tag>lua</tag>
      
      <tag>sol</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS脚本的多种加载方式</title>
    <link href="/posts/33324c7b/"/>
    <url>/posts/33324c7b/</url>
    
    <content type="html"><![CDATA[<h3 id="Html加载js脚本"><a href="#Html加载js脚本" class="headerlink" title="Html加载js脚本"></a>Html加载js脚本</h3><h4 id="常规加载js文件"><a href="#常规加载js文件" class="headerlink" title="常规加载js文件"></a>常规加载js文件</h4><ul><li>js文件的加载会堵塞当前的html文档解析，只有当js脚本加载完成并执行后才继续接下来的文档解析</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;xx.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="async方式加载js文件"><a href="#async方式加载js文件" class="headerlink" title="async方式加载js文件"></a>async方式加载js文件</h4><ul><li>js文件的加载分为下载和执行两个部分，下载js文件不会阻塞文档解析，下载完成之后当即执行js文件(无法明确文件的执行顺序)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;xx.js&quot;</span> <span class="hljs-attr">async</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="defer方式加载js文件"><a href="#defer方式加载js文件" class="headerlink" title="defer方式加载js文件"></a>defer方式加载js文件</h4><ul><li>js文件的加载分为下载和执行两个部分，下载js文件不会阻塞文档解析，当下载完并且文档解析完成的时候执行js文件(有明确文件的执行顺序))</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;xx.js&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="不同方式的加载顺序图"><a href="#不同方式的加载顺序图" class="headerlink" title="不同方式的加载顺序图"></a>不同方式的加载顺序图</h4><p><img src="/images/js%E8%84%9A%E6%9C%AC%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F/js%E8%84%9A%E6%9C%AC%E5%8A%A0%E8%BD%BD%E7%9A%84%E6%96%B9%E5%BC%8F.png"></p><h4 id="测试demo"><a href="#测试demo" class="headerlink" title="测试demo"></a>测试demo</h4><ul><li>index.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;./defer2.js&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;./defer1.js&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;./async1.js&quot;</span> <span class="hljs-attr">async</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;./async2.js&quot;</span> <span class="hljs-attr">async</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span> = <span class="hljs-string">&quot;./normal.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;view&#x27;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:200px;height:200px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>async1.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;----------async1.js开始执行------------&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>async2.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;----------async2.js开始执行------------&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>defer1.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;----------defer1.js开始执行------------&#x27;</span>)<br><span class="hljs-keyword">let</span> $view = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;view&#x27;</span>);<br>$view.style.backgroundColor = <span class="hljs-string">&#x27;#FF0000&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li>defer2.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;----------defer2.js开始执行-----------&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>normal.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;----------文档加载完成----------&#x27;</span>)<br>&#125;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;----------常规js执行------------&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>测试结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">----------async1.js开始执行------------<br>----------常规js执行------------<br>----------defer2.js开始执行-----------<br>----------defer1.js开始执行-----------<br>----------async2.js开始执行------------<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>defer</tag>
      
      <tag>async</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang编译wasm</title>
    <link href="/posts/ca453128/"/>
    <url>/posts/ca453128/</url>
    
    <content type="html"><![CDATA[<h3 id="使用Go"><a href="#使用Go" class="headerlink" title="使用Go"></a>使用Go</h3><h4 id="创建main-go文件"><a href="#创建main-go文件" class="headerlink" title="创建main.go文件"></a>创建main.go文件</h4><ul><li>main.go</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">package</span> <span class="hljs-selector-tag">main</span><br><br><span class="hljs-selector-tag">import</span> (<span class="hljs-string">&quot;fmt&quot;</span>)<br><br><span class="hljs-selector-tag">func</span> <span class="hljs-selector-tag">main</span>() &#123;<br><span class="hljs-selector-tag">fmt</span><span class="hljs-selector-class">.Println</span>(<span class="hljs-string">&quot;Hello, Go WebAssembly!&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="编译go文件，得到lib-wasm文件"><a href="#编译go文件，得到lib-wasm文件" class="headerlink" title="编译go文件，得到lib.wasm文件"></a>编译go文件，得到lib.wasm文件</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">set</span> <span class="hljs-attribute">GOOS</span>=js<br>echo %GOOS%<br><span class="hljs-builtin-name">set</span> <span class="hljs-attribute">GOARCH</span>=wasm<br>echo %GOARCH%<br>go build -o lib.wasm main.go<br>pause<br></code></pre></td></tr></table></figure><h4 id="获取wasm-exec-js"><a href="#获取wasm-exec-js" class="headerlink" title="获取wasm_exec.js"></a>获取wasm_exec.js</h4><p><a href="https://github.com/golang/go/blob/master/misc/wasm/wasm_exec.js">https://github.com/golang/go/blob/master/misc/wasm/wasm_exec.js</a></p><h4 id="新建一个index-html文件"><a href="#新建一个index-html文件" class="headerlink" title="新建一个index.html文件"></a>新建一个index.html文件</h4><ul><li>index.html</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">Copyright 2018 The Go Authors. All rights reserved.</span><br><span class="hljs-comment">Use of this source code is governed by a BSD-style</span><br><span class="hljs-comment">license that can be found in the LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Go wasm<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">Add the following polyfill for Microsoft Edge 17/18 support:</span><br><span class="hljs-comment">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/text-encoding@0.7.0/lib/encoding.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-comment">(see https://caniuse.com/#feat=textencoder)</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;wasm_exec.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">if</span> (!WebAssembly.instantiateStreaming) &#123; <span class="hljs-comment">// polyfill</span></span><br><span class="javascript">WebAssembly.instantiateStreaming = <span class="hljs-keyword">async</span> (resp, importObject) =- &#123;</span><br><span class="javascript"><span class="hljs-keyword">const</span> source = <span class="hljs-keyword">await</span> (<span class="hljs-keyword">await</span> resp).arrayBuffer();</span><br><span class="javascript"><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> WebAssembly.instantiate(source, importObject);</span><br><span class="javascript">&#125;;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">const</span> go = <span class="hljs-keyword">new</span> Go();</span><br><span class="javascript">        <span class="hljs-built_in">console</span>.log(go.importObject);</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(WebAssembly);</span><br><span class="javascript">go.importObject.env = go.importObject.env || &#123;&#125;;</span><br><span class="javascript">go.importObject.env[<span class="hljs-string">&#x27;command-line-arguments.add&#x27;</span>] = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> x + y</span><br><span class="javascript">&#125;;</span><br><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">let</span> mod, inst;</span><br><span class="javascript">WebAssembly.instantiateStreaming(fetch(<span class="hljs-string">&quot;lib.wasm&quot;</span>), go.importObject).then((result) =- &#123;</span><br><span class="javascript">mod = result.module;</span><br><span class="javascript">inst = result.instance;</span><br><span class="javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;runButton&quot;</span>).disabled = <span class="hljs-literal">false</span>;</span><br><span class="javascript">&#125;).catch((err) =- &#123;</span><br><span class="javascript"><span class="hljs-built_in">console</span>.error(err);</span><br><span class="javascript">&#125;);</span><br><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript"><span class="hljs-built_in">console</span>.clear();</span><br><span class="javascript"><span class="hljs-keyword">await</span> go.run(inst);</span><br><span class="javascript">inst = <span class="hljs-keyword">await</span> WebAssembly.instantiate(mod, go.importObject); <span class="hljs-comment">// reset instance</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">        </span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&quot;run();&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;runButton&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Run<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="需要go服务器支持wasm的meta类型"><a href="#需要go服务器支持wasm的meta类型" class="headerlink" title="需要go服务器支持wasm的meta类型"></a>需要go服务器支持wasm的meta类型</h4><ul><li>server.go</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs stata">package main<br><br>import (<br><span class="hljs-string">&quot;flag&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> (<br>listen = flag.<span class="hljs-built_in">String</span>(<span class="hljs-string">&quot;listen&quot;</span>, <span class="hljs-string">&quot;:8080&quot;</span>, <span class="hljs-string">&quot;listen address&quot;</span>)<br><span class="hljs-keyword">dir</span>    = flag.<span class="hljs-built_in">String</span>(<span class="hljs-string">&quot;dir&quot;</span>, <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;directory to serve&quot;</span>)<br>)<br><br>func main() &#123;<br>flag.<span class="hljs-keyword">Parse</span>()<br><span class="hljs-keyword">log</span>.Printf(<span class="hljs-string">&quot;listening on %q...&quot;</span>, *listen)<br><span class="hljs-keyword">err</span> := http.ListenAndServe(*listen, http.FileServer(http.<span class="hljs-keyword">Dir</span>(*<span class="hljs-keyword">dir</span>)))<br><span class="hljs-keyword">log</span>.Fatalln(<span class="hljs-keyword">err</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">go</span> run server.<span class="hljs-keyword">go</span><br></code></pre></td></tr></table></figure><h3 id="使用Tinygo"><a href="#使用Tinygo" class="headerlink" title="使用Tinygo"></a>使用Tinygo</h3><h4 id="创建main-go文件-1"><a href="#创建main-go文件-1" class="headerlink" title="创建main.go文件"></a>创建main.go文件</h4><ul><li>main.go</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>    <span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;Hello, tinygo wsam!!!&quot;</span>)<br>    <span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;adding two numbers:&quot;</span>, add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)) <span class="hljs-comment">// expecting 5</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">add</span><span class="hljs-params">(x, y <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">int</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">multiply</span><span class="hljs-params">(x, y <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">int</span></span> &#123;<br>    <span class="hljs-keyword">return</span> x * y;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="编译go文件，得到lib-wasm文件-1"><a href="#编译go文件，得到lib-wasm文件-1" class="headerlink" title="编译go文件，得到lib.wasm文件"></a>编译go文件，得到lib.wasm文件</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">tinygo build -o lib<span class="hljs-selector-class">.wasm</span> -target wasm ./<span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.go</span><br>pause<br></code></pre></td></tr></table></figure><h4 id="获取wasm-exec-js-1"><a href="#获取wasm-exec-js-1" class="headerlink" title="获取wasm_exec.js"></a>获取wasm_exec.js</h4><p><a href="https://github.com/tinygo-org/tinygo/blob/release/targets/wasm_exec.js">https://github.com/tinygo-org/tinygo/blob/release/targets/wasm_exec.js</a></p><h4 id="新建一个index-html文件-1"><a href="#新建一个index-html文件-1" class="headerlink" title="新建一个index.html文件"></a>新建一个index.html文件</h4><ul><li>index.html</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">Copyright 2018 The Go Authors. All rights reserved.</span><br><span class="hljs-comment">Use of this source code is governed by a BSD-style</span><br><span class="hljs-comment">license that can be found in the LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Go wasm<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">Add the following polyfill for Microsoft Edge 17/18 support:</span><br><span class="hljs-comment">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/text-encoding@0.7.0/lib/encoding.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-comment">(see https://caniuse.com/#feat=textencoder)</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;wasm_exec.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">const</span> go = <span class="hljs-keyword">new</span> Go();</span><br><span class="javascript"><span class="hljs-keyword">const</span> WASM_URL = <span class="hljs-string">&#x27;lib.wasm&#x27;</span>;</span><br><span class="javascript">go.importObject.env = go.importObject.env || &#123;&#125;;</span><br><span class="javascript">go.importObject.env[<span class="hljs-string">&#x27;command-line-arguments.add&#x27;</span>] = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> x + y</span><br><span class="javascript">&#125;;</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(go.importObject);</span><br><span class="javascript"><span class="hljs-keyword">var</span> wasm;</span><br><span class="javascript"><span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;instantiateStreaming&#x27;</span> <span class="hljs-keyword">in</span> WebAssembly) &#123;</span><br><span class="javascript">WebAssembly.instantiateStreaming(fetch(WASM_URL), go.importObject).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>&#123;</span><br><span class="javascript">wasm = obj.instance;</span><br><span class="javascript">go.run(wasm);</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;multiplied two numbers:&#x27;</span>, wasm.exports.multiply(<span class="hljs-number">5</span>, <span class="hljs-number">3</span>));</span><br><span class="javascript">&#125;)</span><br><span class="javascript">&#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">fetch(WASM_URL).then(<span class="hljs-function"><span class="hljs-params">resp</span> =&gt;</span></span><br><span class="javascript">resp.arrayBuffer()</span><br><span class="javascript">).then(<span class="hljs-function"><span class="hljs-params">bytes</span> =&gt;</span></span><br><span class="javascript">WebAssembly.instantiate(bytes, go.importObject).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) </span>&#123;</span><br><span class="javascript">wasm = obj.instance;</span><br><span class="javascript">go.run(wasm);</span><br><span class="javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;multiplied two numbers:&#x27;</span>, wasm.exports.multiply(<span class="hljs-number">5</span>, <span class="hljs-number">3</span>));</span><br><span class="javascript">&#125;)</span><br><span class="javascript">)</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="需要go服务器支持wasm的meta类型-1"><a href="#需要go服务器支持wasm的meta类型-1" class="headerlink" title="需要go服务器支持wasm的meta类型"></a>需要go服务器支持wasm的meta类型</h4><ul><li>server.go</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs stata">package main<br><br>import (<br><span class="hljs-string">&quot;flag&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;net/http&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> (<br>listen = flag.<span class="hljs-built_in">String</span>(<span class="hljs-string">&quot;listen&quot;</span>, <span class="hljs-string">&quot;:8080&quot;</span>, <span class="hljs-string">&quot;listen address&quot;</span>)<br><span class="hljs-keyword">dir</span>    = flag.<span class="hljs-built_in">String</span>(<span class="hljs-string">&quot;dir&quot;</span>, <span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;directory to serve&quot;</span>)<br>)<br><br>func main() &#123;<br>flag.<span class="hljs-keyword">Parse</span>()<br><span class="hljs-keyword">log</span>.Printf(<span class="hljs-string">&quot;listening on %q...&quot;</span>, *listen)<br><span class="hljs-keyword">err</span> := http.ListenAndServe(*listen, http.FileServer(http.<span class="hljs-keyword">Dir</span>(*<span class="hljs-keyword">dir</span>)))<br><span class="hljs-keyword">log</span>.Fatalln(<span class="hljs-keyword">err</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="启动服务器-1"><a href="#启动服务器-1" class="headerlink" title="启动服务器"></a>启动服务器</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">go</span> run server.<span class="hljs-keyword">go</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>wasm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RPC的JSON函数解析</title>
    <link href="/posts/1b2048c9/"/>
    <url>/posts/1b2048c9/</url>
    
    <content type="html"><![CDATA[<h3 id="json内容"><a href="#json内容" class="headerlink" title="json内容"></a>json内容</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json">[<br>    <span class="hljs-string">&quot;do&quot;</span>,<br>    [<br>        <span class="hljs-string">&quot;def&quot;</span>, <br>        <span class="hljs-string">&quot;drawTriangle&quot;</span>, <br>        [<br>            <span class="hljs-string">&quot;fn&quot;</span>, <br>            [<span class="hljs-string">&quot;left&quot;</span>, <span class="hljs-string">&quot;top&quot;</span>, <span class="hljs-string">&quot;right&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>],<br>            [<br>                <span class="hljs-string">&quot;do&quot;</span>,<br>                [<span class="hljs-string">&quot;drawLine&quot;</span>, <span class="hljs-string">&quot;left&quot;</span>, <span class="hljs-string">&quot;top&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>],<br>                [<span class="hljs-string">&quot;drawLine&quot;</span>, <span class="hljs-string">&quot;top&quot;</span>, <span class="hljs-string">&quot;right&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>],<br>                [<span class="hljs-string">&quot;drawLine&quot;</span>, <span class="hljs-string">&quot;left&quot;</span>, <span class="hljs-string">&quot;right&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>]<br>            ]<br>        ]<br>    ],<br>    [<span class="hljs-string">&quot;consoleLine&quot;</span>],<br>    [<span class="hljs-string">&quot;drawTriangle&quot;</span>, &#123;<span class="hljs-attr">&quot;x&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">&quot;y&quot;</span>: <span class="hljs-number">0</span>&#125;, &#123;<span class="hljs-attr">&quot;x&quot;</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">&quot;y&quot;</span>: <span class="hljs-number">3</span>&#125;, &#123;<span class="hljs-attr">&quot;x&quot;</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">&quot;y&quot;</span>: <span class="hljs-number">0</span>&#125;, <span class="hljs-string">&quot;蓝色&quot;</span>],<br>    [<span class="hljs-string">&quot;consoleLine&quot;</span>],<br>    [<span class="hljs-string">&quot;drawTriangle&quot;</span>, &#123;<span class="hljs-attr">&quot;x&quot;</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">&quot;y&quot;</span>: <span class="hljs-number">6</span>&#125;, &#123;<span class="hljs-attr">&quot;x&quot;</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">&quot;y&quot;</span>: <span class="hljs-number">10</span>&#125;, &#123;<span class="hljs-attr">&quot;x&quot;</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">&quot;y&quot;</span>: <span class="hljs-number">16</span>&#125;, <span class="hljs-string">&quot;红色&quot;</span>],<br>    [<span class="hljs-string">&quot;consoleLine&quot;</span>]<br>]<br></code></pre></td></tr></table></figure><h3 id="解析文件"><a href="#解析文件" class="headerlink" title="解析文件"></a>解析文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> instructions = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./instructions.json&quot;</span>);<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drawLine</span>(<span class="hljs-params">p1, p2, color</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`画出当前一条线[<span class="hljs-subst">$&#123;p1.x&#125;</span>, <span class="hljs-subst">$&#123;p1.y&#125;</span>]到[<span class="hljs-subst">$&#123;p2.x&#125;</span>, <span class="hljs-subst">$&#123;p2.y&#125;</span>],颜色为<span class="hljs-subst">$&#123;color&#125;</span>`</span>);<br>    <span class="hljs-keyword">return</span> &#123;p1, p2&#125;;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rotate</span>(<span class="hljs-params">node, angle</span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-built_in">JSON</span>.stringify(node)&#125;</span>旋转角度:<span class="hljs-subst">$&#123;angle&#125;</span>`</span>);<br>    <span class="hljs-keyword">return</span> &#123;angle&#125;;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">consoleLine</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;-----------------------------&quot;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parseRPC</span>(<span class="hljs-params">jsonStr</span>) </span>&#123;<br>    <span class="hljs-comment">// 当前变量存储的地方</span><br>    <span class="hljs-keyword">const</span> variables = &#123;&#125;;<br>    <span class="hljs-comment">// 当前支持的函数集合</span><br>    <span class="hljs-keyword">const</span> fns = &#123;<br>        drawLine,<br>        rotate,<br>        consoleLine,<br>        <span class="hljs-attr">do</span>: <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> args[args.length - <span class="hljs-number">1</span>],<br>        <span class="hljs-attr">def</span>: <span class="hljs-function">(<span class="hljs-params">name, v</span>) =&gt;</span> variables[name] = v,<br>    &#125;<br><br>    <span class="hljs-comment">// 将数组转化为map</span><br>    <span class="hljs-keyword">const</span> mapArgsWithValues = <span class="hljs-function">(<span class="hljs-params">args, values</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> args.reduce(<span class="hljs-function">(<span class="hljs-params">res, key, idx</span>) =&gt;</span> &#123;<br>            res[key] = values[idx];<br>            <span class="hljs-keyword">return</span> res;<br>        &#125;, &#123;&#125;);<br>    &#125;<br><br>    <span class="hljs-comment">// 解析函数</span><br>    <span class="hljs-keyword">const</span> parseFnInstruction = <span class="hljs-function">(<span class="hljs-params">args, body, oldVariables</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...values</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">const</span> newVariables = &#123;<br>                ...oldVariables,<br>                ...mapArgsWithValues(args, values),<br>            &#125;;<br>            <span class="hljs-keyword">return</span> parseInstruction(body, newVariables);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 解析指令</span><br>    <span class="hljs-keyword">const</span> parseInstruction = <span class="hljs-function">(<span class="hljs-params">ins, variables</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 判断是否是已经定义的变量</span><br>        <span class="hljs-keyword">if</span> (variables[ins]) &#123;<br>            <span class="hljs-keyword">return</span> variables[ins];<br>        &#125;<br>        <span class="hljs-comment">// 判断是否是数组</span><br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">Array</span>.isArray(ins)) &#123;<br>            <span class="hljs-keyword">return</span> ins;<br>        &#125;<br>        <span class="hljs-keyword">const</span> [fName, ...args] = ins;<br>        <span class="hljs-comment">// 当前的内容为fn的时候构建新的函数</span><br>        <span class="hljs-keyword">if</span> (fName === <span class="hljs-string">&quot;fn&quot;</span>) &#123;<br>            <span class="hljs-keyword">return</span> parseFnInstruction(...args, variables);<br>        &#125;<br>        <span class="hljs-comment">// 先检索定义的函数表 没有的话就从自定义表找</span><br>        <span class="hljs-keyword">const</span> fn = fns[fName] || variables[fName];<br>        <span class="hljs-keyword">return</span> fn(...args.map(<span class="hljs-function"><span class="hljs-params">arg</span> =&gt;</span> parseInstruction(arg, variables)));<br>    &#125;<br>    <span class="hljs-comment">// 解析</span><br>    parseInstruction(jsonStr, variables);<br>&#125;<br><br>parseRPC(instructions);<br></code></pre></td></tr></table></figure><h3 id="调用结果"><a href="#调用结果" class="headerlink" title="调用结果"></a>调用结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">-----------------------------<br>画出当前一条线[0, 0]到[3, 3],颜色为蓝色<br>画出当前一条线[3, 3]到[6, 0],颜色为蓝色<br>画出当前一条线[0, 0]到[6, 0],颜色为蓝色<br>-----------------------------<br>画出当前一条线[6, 6]到[10, 10],颜色为红色<br>画出当前一条线[10, 10]到[6, 16],颜色为红色<br>画出当前一条线[6, 6]到[6, 16],颜色为红色<br>-----------------------------<br></code></pre></td></tr></table></figure><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p><strong>可以用于游戏中一些带函数调用的配置文件处理，比如关卡的配置和人物技能配置等</strong></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://stopa.io/post/265">https://stopa.io/post/265</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rpc</tag>
      
      <tag>json</tag>
      
      <tag>数据解析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RPG游戏的单位属性类</title>
    <link href="/posts/5a0d9094/"/>
    <url>/posts/5a0d9094/</url>
    
    <content type="html"><![CDATA[<h3 id="属性因子的类型"><a href="#属性因子的类型" class="headerlink" title="属性因子的类型"></a>属性因子的类型</h3><ul><li>可以增加百分比值</li><li>可以增加固定值</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 属性值的因数类型</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@enum <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-built_in">enum</span> AttrFactorType &#123;<br>AFT_Base,                     <span class="hljs-comment">// 基础值</span><br>AFT_Add_Constant,             <span class="hljs-comment">// 增加固定值</span><br>AFT_Add_Percentile,           <span class="hljs-comment">// 增加百分比</span><br>AFT_Max                       <span class="hljs-comment">// 最大值</span><br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="属性元素"><a href="#属性元素" class="headerlink" title="属性元素"></a>属性元素</h3><ul><li>区分属性因子</li><li>用于控制属性元素的类</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 属性元素</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">UnitAttrElement</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UnitAttrElement</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> m_aiValues: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = []; <span class="hljs-comment">// 属性数组</span><br>    <span class="hljs-keyword">private</span> m_iResult: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 结果</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.clear();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清除</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">SeUnitAttrElem</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">clear</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.m_aiValues[AttrFactorType.AFT_Base] = <span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">this</span>.m_aiValues[AttrFactorType.AFT_Add_Constant] = <span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">this</span>.m_aiValues[AttrFactorType.AFT_Add_Percentile] = <span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">this</span>.m_iResult = <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;AttrFactorType&#125;</span> <span class="hljs-variable">eType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">SeUnitAttrElem</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">getFactor</span>(<span class="hljs-params">eType: AttrFactorType</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.m_aiValues[eType];<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;AttrFactorType&#125;</span> <span class="hljs-variable">eType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">val</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">SeUnitAttrElem</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">setFactor</span>(<span class="hljs-params">eType: AttrFactorType, val: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.m_aiValues[eType] = val;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置结果</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">SeUnitAttrElem</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">set</span> <span class="hljs-title">result</span>(<span class="hljs-params">val: <span class="hljs-built_in">number</span></span>) &#123;<br>        <span class="hljs-built_in">this</span>.m_iResult = val;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取结果</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">SeUnitAttrElem</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">get</span> <span class="hljs-title">result</span>() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.m_iResult;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="单位属性值的类型"><a href="#单位属性值的类型" class="headerlink" title="单位属性值的类型"></a>单位属性值的类型</h3><ul><li>单位拥有的属性</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 单位属性类型</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@enum <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-built_in">enum</span> UnitAttrType &#123;<br>    UAT_ATK, <span class="hljs-comment">// 攻击力</span><br>    UAT_ATK_INTERVAL,   <span class="hljs-comment">// 攻击间隔</span><br>    UAT_DEF, <span class="hljs-comment">// 防御力</span><br>    UAT_HP, <span class="hljs-comment">// 当前生命值</span><br>    UAT_HP_LIMIT, <span class="hljs-comment">// 生命值上限</span><br>    UAT_MP, <span class="hljs-comment">// 当前的魔法值</span><br>    UAT_MP_LIMIT, <span class="hljs-comment">// 魔法值上限</span><br>    UAT_SPEED, <span class="hljs-comment">// 速度</span><br>    UAT_DODGE, <span class="hljs-comment">// 闪避</span><br>    UAT_MAX,<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="单位属性类"><a href="#单位属性类" class="headerlink" title="单位属性类"></a>单位属性类</h3><ul><li>可以挂在单位类上，用于计算属性</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 单位属性类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UnitAttr</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> m_akUnitAttr: <span class="hljs-built_in">Array</span>&lt;UnitAttrElement&gt; = [];   <span class="hljs-comment">// 属性数组</span><br>    <span class="hljs-keyword">static</span> SCALE = <span class="hljs-number">1</span>; <span class="hljs-comment">// 缩放数据用于去除小数 转化为定点数</span><br>    <span class="hljs-keyword">static</span> PERCENTAGE_100 = <span class="hljs-number">100</span> * UnitAttr.SCALE; <span class="hljs-comment">// 百分百</span><br>    <span class="hljs-keyword">static</span> MIN_ATTACK_VALUE = <span class="hljs-number">1</span> * UnitAttr.SCALE; <span class="hljs-comment">// 攻击力最小值为1</span><br>    <span class="hljs-keyword">static</span> MIN_HP_LIMIT = <span class="hljs-number">1</span> * UnitAttr.SCALE; <span class="hljs-comment">// 最小生命值</span><br>    <span class="hljs-keyword">static</span> MIN_MP_LIMIT = <span class="hljs-number">1</span> * UnitAttr.SCALE;   <span class="hljs-comment">// 最小魔法值</span><br><span class="hljs-keyword">static</span> MIN_ATK_INTERVAL_PERCENTAGE = -<span class="hljs-number">50</span> * UnitAttr.SCALE;    <span class="hljs-comment">// 最小攻击间隔</span><br><span class="hljs-keyword">static</span> MIN_ATK_INTERVAL_VALUE = <span class="hljs-number">150</span> * UnitAttr.SCALE; <span class="hljs-comment">// 最小攻击间隔值</span><br><span class="hljs-keyword">static</span> MAX_DODGE_CHANCE = <span class="hljs-number">95</span> * UnitAttr.SCALE;    <span class="hljs-comment">// 最大闪避百分比</span><br><span class="hljs-keyword">static</span> MIN_MOVE_SPEED = <span class="hljs-number">15</span> * UnitAttr.SCALE;   <span class="hljs-comment">// 最小移动速度</span><br><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// 初始化当前的属性数组</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; UnitAttrType.UAT_MAX; i++) &#123;<br>            <span class="hljs-built_in">this</span>.m_akUnitAttr[i] = <span class="hljs-keyword">new</span> UnitAttrElement();<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据配置文件的内容设置当前单位属性</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">res</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">res: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-comment">// 初始化单位的相关基础属性</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清理属性</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">eType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">clear</span>(<span class="hljs-params">eType: UnitAttrType</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.m_akUnitAttr[eType].clear();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 重置当前属性因子</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">eAttrType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;AttrFactorType&#125;</span> <span class="hljs-variable">eFactorType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">iValue</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">resetCommonAttrFactor</span>(<span class="hljs-params">eAttrType: UnitAttrType, eFactorType: AttrFactorType, iValue: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.m_akUnitAttr[eAttrType].setFactor(eFactorType, iValue);<br>        <span class="hljs-built_in">this</span>.updateCascade(eAttrType);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改属性因子</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">eAttrType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;AttrFactorType&#125;</span> <span class="hljs-variable">eFactorType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">iValue</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">incrementCommonAttrFactor</span>(<span class="hljs-params">eAttrType: UnitAttrType, eFactorType: AttrFactorType, iValue: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> old = <span class="hljs-built_in">this</span>.m_akUnitAttr[eAttrType].getFactor(eFactorType);<br>        <span class="hljs-built_in">this</span>.m_akUnitAttr[eAttrType].setFactor(eFactorType, old + iValue);<br>        <span class="hljs-comment">// 立即更新本属性以及它的相关属性，不等到Update</span><br>        <span class="hljs-built_in">this</span>.updateCascade(eAttrType);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 读取当前属性结果</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">eType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">readCommonAttrResult</span>(<span class="hljs-params">eType: UnitAttrType</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.m_akUnitAttr[eType].result;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取因子</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">eAttrType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;AttrFactorType&#125;</span> <span class="hljs-variable">eFactorType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">readCommonAttrFactor</span>(<span class="hljs-params">eAttrType: UnitAttrType, eFactorType: AttrFactorType</span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.m_akUnitAttr[eAttrType].getFactor(eFactorType);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新需要修改的主属性并修改相关的属性</span><br><span class="hljs-comment">     * 每一点防御力增加一点血量之类的</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">ePrimaryAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">updateCascade</span>(<span class="hljs-params">ePrimaryAttr: UnitAttrType</span>)</span> &#123;<br>        <span class="hljs-comment">// 先更新主属性</span><br>        <span class="hljs-built_in">this</span>.updateSingle(ePrimaryAttr);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 刷新所有属性值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">updateAllAttrs</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; UnitAttrType.UAT_MAX; i++) &#123;<br>            <span class="hljs-built_in">this</span>.updateCascade(i);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 只更新当前自己的主属性</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrType&#125;</span> <span class="hljs-variable">eType</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">updateSingle</span>(<span class="hljs-params">eType: UnitAttrType</span>)</span> &#123;<br>        <span class="hljs-comment">// 获取属性元素</span><br>        <span class="hljs-keyword">let</span> attrElem = <span class="hljs-built_in">this</span>.m_akUnitAttr[eType];<br>        <span class="hljs-keyword">switch</span>(eType) &#123;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_ATK: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateATK(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_ATK_INTERVAL: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateATK_INTERVAL(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_DEF: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateDEF(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_HP: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateHP(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_HP_LIMIT: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateHP_LIMIT(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_MP: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateMP(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_MP_LIMIT: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateMP_LIMIT(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_SPEED: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateSPEED(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">case</span> UnitAttrType.UAT_DODGE: &#123;<br>                attrElem.result = <span class="hljs-built_in">this</span>.updateDODGE(attrElem);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新攻击力</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateATK(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; UnitAttr.MIN_ATTACK_VALUE) &#123;<br>            iResult = UnitAttr.MIN_ATTACK_VALUE;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新攻击间隔</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateATK_INTERVAL(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">if</span> (iAddPer &lt; UnitAttr.MIN_ATK_INTERVAL_PERCENTAGE) &#123;<br>            iAddPer = UnitAttr.MIN_ATK_INTERVAL_PERCENTAGE;<br>        &#125;<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; UnitAttr.MIN_ATK_INTERVAL_VALUE) &#123;<br>            iResult = UnitAttr.MIN_ATK_INTERVAL_VALUE;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新防御力</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateDEF(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新当前生命值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateHP(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; <span class="hljs-number">0</span>) &#123;<br>            iResult = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新最大生命值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateHP_LIMIT(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; UnitAttr.MIN_HP_LIMIT) &#123;<br>            iResult = UnitAttr.MIN_HP_LIMIT;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新当前魔法值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateMP(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; <span class="hljs-number">0</span>) &#123;<br>            iResult = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新最大魔法值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateMP_LIMIT(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; UnitAttr.MIN_MP_LIMIT) &#123;<br>            iResult = UnitAttr.MIN_MP_LIMIT;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新速度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateSPEED(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iBase = rkAttr.getFactor(AttrFactorType.AFT_Base);<br>        <span class="hljs-keyword">let</span> iAddValue = rkAttr.getFactor(AttrFactorType.AFT_Add_Constant);<br>        <span class="hljs-keyword">let</span> iAddPer = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">let</span> iResult = (iBase + iAddValue) * (<span class="hljs-number">1</span> + iAddPer / UnitAttr.PERCENTAGE_100);<br>        <span class="hljs-keyword">if</span> (iResult &lt; UnitAttr.MIN_MOVE_SPEED) &#123;<br>            iResult = UnitAttr.MIN_MOVE_SPEED;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新闪避几率</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitAttrElement&#125;</span> <span class="hljs-variable">rkAttr</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UnitAttr</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> updateDODGE(rkAttr: UnitAttrElement) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> iResult = rkAttr.getFactor(AttrFactorType.AFT_Add_Percentile);<br>        <span class="hljs-keyword">if</span> (iResult &lt; <span class="hljs-number">0</span>) &#123;<br>            iResult = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (iResult &gt; UnitAttr.MAX_DODGE_CHANCE) &#123;<br>            iResult = UnitAttr.MAX_DODGE_CHANCE;<br>        &#125;<br>        <span class="hljs-keyword">return</span> iResult;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rpg</tag>
      
      <tag>unit</tag>
      
      <tag>attr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript中for...in和for...of的使用</title>
    <link href="/posts/5d379853/"/>
    <url>/posts/5d379853/</url>
    
    <content type="html"><![CDATA[<h3 id="定义一个需要遍历的对象"><a href="#定义一个需要遍历的对象" class="headerlink" title="定义一个需要遍历的对象"></a>定义一个需要遍历的对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj1 = &#123;<br>    [<span class="hljs-number">0</span>]: <span class="hljs-number">100</span>,<br>    [<span class="hljs-number">1</span>]: <span class="hljs-number">101</span>,<br>    [<span class="hljs-number">2</span>]: <span class="hljs-number">102</span>,<br>    [<span class="hljs-number">3</span>]: <span class="hljs-number">103</span>,<br>    <span class="hljs-attr">item1</span>: <span class="hljs-string">&#x27;item1&#x27;</span>,<br>    <span class="hljs-attr">fun1</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>[<span class="hljs-number">0</span>])<br>    &#125;,<br>    <span class="hljs-attr">arr1</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],<br>    [<span class="hljs-built_in">Symbol</span>.iterator]()&#123;<br>        <span class="hljs-keyword">let</span> n = <span class="hljs-built_in">this</span>.arr1.length<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">i</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-function"><span class="hljs-title">next</span>(<span class="hljs-params"></span>)</span> &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.i &lt; n) &#123;<br>                    <span class="hljs-keyword">return</span> &#123;<span class="hljs-attr">value</span>: <span class="hljs-built_in">this</span>.i++, done: <span class="hljs-literal">false</span>&#125;<br>                &#125;<br>                <span class="hljs-keyword">return</span> &#123;<span class="hljs-attr">value</span>: <span class="hljs-literal">undefined</span>, <span class="hljs-attr">done</span>: <span class="hljs-literal">true</span>&#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="使用for…in…遍历"><a href="#使用for…in…遍历" class="headerlink" title="使用for…in…遍历"></a>使用for…in…遍历</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;use for...in&#x27;</span>)<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> obj <span class="hljs-keyword">in</span> obj1) &#123;<br>    <span class="hljs-built_in">console</span>.log(obj);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="使用for…of…遍历"><a href="#使用for…of…遍历" class="headerlink" title="使用for…of…遍历"></a>使用for…of…遍历</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;use for...of&#x27;</span>)<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> obj <span class="hljs-keyword">of</span> obj1) &#123;<br>    <span class="hljs-built_in">console</span>.log(obj);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="添加新的内容然后遍历"><a href="#添加新的内容然后遍历" class="headerlink" title="添加新的内容然后遍历"></a>添加新的内容然后遍历</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">obj1.arr1.push(<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;use for...of add&#x27;</span>)<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> obj <span class="hljs-keyword">of</span> obj1) &#123;<br>    <span class="hljs-built_in">console</span>.log(obj);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="遍历字符串"><a href="#遍历字符串" class="headerlink" title="遍历字符串"></a>遍历字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;merry&#x27;</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> obj <span class="hljs-keyword">of</span> str) &#123;<br>    <span class="hljs-built_in">console</span>.log(obj);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">use for...in<br>0<br>1<br>2<br>3<br>item1<br>fun1<br>arr1<br>use for...of<br>0<br>1<br>2<br>use for...of add<br>0<br>1<br>2<br>3<br>4<br>5<br>m<br>e<br>r<br>r<br>y<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript中for...in和for...of的使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nodejs的mqtt简单实现</title>
    <link href="/posts/6e9bddaf/"/>
    <url>/posts/6e9bddaf/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/Nodejs%E7%9A%84mqtt%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/mosca_small.png" alt="mosca"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i mosca<br>npm i mqtt<br></code></pre></td></tr></table></figure><h2 id="简单服务器"><a href="#简单服务器" class="headerlink" title="简单服务器"></a>简单服务器</h2><blockquote><p>server.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Server, Client, Packet, Authorizer &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;mosca&#x27;</span><br><br><span class="hljs-comment">// 简单的设置方法</span><br><span class="hljs-keyword">const</span> setting = &#123;<br>    <span class="hljs-comment">// 监听的端口</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">12345</span>,<br>    <span class="hljs-comment">// 开启http的客户端</span><br>    <span class="hljs-attr">http</span>: &#123;<br>        <span class="hljs-attr">port</span>: <span class="hljs-number">12346</span>,    <span class="hljs-comment">// http的绑定端口</span><br>        <span class="hljs-attr">bundle</span>: <span class="hljs-literal">true</span>,   <span class="hljs-comment">// 提供mqtt.js文件地址</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> server = <span class="hljs-keyword">new</span> Server(setting)<br><span class="hljs-keyword">const</span> auth = <span class="hljs-keyword">new</span> Authorizer()<br><br><br>server.on(<span class="hljs-string">&#x27;clientConnected&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">client: Client</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;客户端连接的ID：&#x27;</span>, client.id)<br>&#125;)<br><br>server.on(<span class="hljs-string">&#x27;clientDisconnecting&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">client: Client</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;客户端正在断连&#x27;</span>, client.id)<br>&#125;)<br><br>server.on(<span class="hljs-string">&#x27;clientDisconnected&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">client: Client</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;客户端已经断连&#x27;</span>, client.id)<br>&#125;)<br><br>server.on(<span class="hljs-string">&#x27;published&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">packet: Packet, client: Client</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;发布消息：&#x27;</span>, packet)<br>&#125;)<br><br>server.on(<span class="hljs-string">&#x27;subscribed&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">topic, client: Client</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;订阅主题：&#x27;</span>, topic)<br>&#125;)<br><br>server.on(<span class="hljs-string">&#x27;unsubscribed&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">topic, client: Client</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;取消订阅：&#x27;</span>, topic)<br>&#125;)<br><br>server.on(<span class="hljs-string">&#x27;ready&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;服务器启动成功！&#x27;</span>)<br>    <span class="hljs-comment">// 简单的acl版本</span><br>    <span class="hljs-comment">// server.authenticate = auth.authenticate</span><br>    <span class="hljs-comment">// auth.addUser(&#x27;limo&#x27;, &#x27;limo1234&#x27;, &#x27;+&#x27;, &#x27;+&#x27;, (err) =&gt; &#123;&#125;)</span><br><br>    <span class="hljs-comment">// 自定义的校验方法</span><br>    server.authenticate = <span class="hljs-function">(<span class="hljs-params">client: Client, username: <span class="hljs-built_in">string</span>, password: <span class="hljs-built_in">string</span>, callback</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (username == <span class="hljs-string">&#x27;limo&#x27;</span> &amp;&amp; password == <span class="hljs-string">&#x27;limo123&#x27;</span>) &#123;<br>            <span class="hljs-keyword">return</span> callback(<span class="hljs-literal">null</span>, <span class="hljs-literal">true</span>)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> callback(<span class="hljs-literal">null</span>, <span class="hljs-literal">false</span>)<br>        &#125;<br>    &#125;<br><br>    server.authorizePublish = <span class="hljs-function">(<span class="hljs-params">client: Client, topic: <span class="hljs-built_in">string</span>, payload: <span class="hljs-built_in">string</span>, callback</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> callback(<span class="hljs-literal">null</span>, <span class="hljs-literal">true</span>)<br>    &#125;<br><br>    server.authorizeSubscribe = <span class="hljs-function">(<span class="hljs-params">client: Client, topic: <span class="hljs-built_in">string</span>, callback</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> callback(<span class="hljs-literal">null</span>, <span class="hljs-literal">true</span>)<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="简单的本地客户端"><a href="#简单的本地客户端" class="headerlink" title="简单的本地客户端"></a>简单的本地客户端</h2><blockquote><p>client.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; connect, Client &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;mqtt&#x27;</span><br><br><span class="hljs-keyword">const</span> client: Client  = connect(<span class="hljs-string">&#x27;mqtt://127.0.0.1:12345&#x27;</span>, &#123;<br>    <span class="hljs-attr">username</span>: <span class="hljs-string">&#x27;limo&#x27;</span>,<br>    <span class="hljs-attr">password</span>: <span class="hljs-string">&#x27;limo123&#x27;</span><br>&#125;)<br><br><span class="hljs-keyword">const</span> topic = <span class="hljs-string">&#x27;sys/log/now&#x27;</span><br><br>client.on(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;客户端连接成功！&#x27;</span>)<br>    client.subscribe(topic)<br>    <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        client.publish(topic, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toLocaleString())<br>    &#125;, <span class="hljs-number">1000</span>)<br>&#125;)<br><br>client.on(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;连接失败！&#x27;</span>)<br>    client.end()<br>&#125;)<br><br>client.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">topic, message</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`topic:<span class="hljs-subst">$&#123;topic&#125;</span> message:<span class="hljs-subst">$&#123;message&#125;</span>`</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="简单的html客户端"><a href="#简单的html客户端" class="headerlink" title="简单的html客户端"></a>简单的html客户端</h2><blockquote><p>index.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./mqtt.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> &gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">const</span> client  = mqtt.connect(<span class="hljs-string">&#x27;mqtt://192.168.218.88:12346&#x27;</span>)</span><br><span class="javascript">        <span class="hljs-keyword">const</span> topic = <span class="hljs-string">&#x27;sys/log/now&#x27;</span></span><br><span class="javascript">        client.on(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;客户端连接成功！&#x27;</span>)</span><br><span class="javascript">            client.subscribe(topic)</span><br><span class="javascript">        &#125;)</span><br><span class="javascript">        client.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">topic, message</span>) =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`topic:<span class="hljs-subst">$&#123;topic&#125;</span> message:<span class="hljs-subst">$&#123;message&#125;</span>`</span>)</span><br><span class="javascript">        &#125;)</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>server</tag>
      
      <tag>mqtt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个通用Typescript对象池</title>
    <link href="/posts/c5ec88f3/"/>
    <url>/posts/c5ec88f3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>ObjectPool.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 可以加入对象池的对象</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@interface <span class="hljs-variable">IPoolObject</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> IPoolObject &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 重置的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">IPoolObject</span></span></span><br><span class="hljs-comment">     */</span><br>    reset() : <span class="hljs-built_in">void</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 对象池</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ObjectPool</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> _instance: ObjectPool<br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;&#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">get</span> <span class="hljs-title">Inst</span>() : <span class="hljs-title">ObjectPool</span> &#123;<br>        <span class="hljs-keyword">if</span> (!ObjectPool._instance) &#123;<br>            ObjectPool._instance = <span class="hljs-keyword">new</span> ObjectPool()<br>        &#125;<br>        <span class="hljs-keyword">return</span> ObjectPool._instance<br>    &#125;<br>    <span class="hljs-keyword">private</span> _poolMap: <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">any</span>, <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">any</span>&gt;&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">any</span>, <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">any</span>&gt;&gt;()<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 释放有对象池</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;&#123; new(): T&#125;</span></span>&#125; Class</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment">     */</span><br>    hasPool&lt;T <span class="hljs-keyword">extends</span> IPoolObject&gt;(Class: &#123; <span class="hljs-keyword">new</span>(): T&#125;) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">return</span> !!<span class="hljs-built_in">this</span>._poolMap.get(Class)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加入对象池</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">obj</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment">     */</span><br>    put&lt;T <span class="hljs-keyword">extends</span> IPoolObject&gt;(obj: T) : <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>._poolMap.get(obj)) &#123;<br>            <span class="hljs-built_in">this</span>._poolMap.set(obj, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;T&gt;())<br>        &#125;<br>        <span class="hljs-comment">// 重置对象</span><br>        obj.reset()<br>        <span class="hljs-built_in">this</span>._poolMap.get(obj.constructor).push(obj)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 取出数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;&#123; new(): T &#125;</span></span>&#125; Class</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment">     */</span><br>    get&lt;T <span class="hljs-keyword">extends</span> IPoolObject&gt;(Class:&#123; <span class="hljs-keyword">new</span>(): T &#125;) : T &#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>._poolMap.get(Class)) &#123;<br>            <span class="hljs-built_in">this</span>._poolMap.set(Class, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;T&gt;())<br>        &#125;<br>        <span class="hljs-keyword">let</span> pool = <span class="hljs-built_in">this</span>._poolMap.get(Class)<br>        <span class="hljs-keyword">if</span> (!pool.length) &#123;<br>            <span class="hljs-built_in">this</span>._factoryCreate(Class, pool)<br>        &#125;<br>        <span class="hljs-keyword">return</span> pool.pop()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 初始化对象池</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;&#123; new(): T&#125;</span></span>&#125; Class</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> </span>[count=10]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment">     */</span><br>    initPool&lt;T <span class="hljs-keyword">extends</span> IPoolObject&gt;(Class: &#123; <span class="hljs-keyword">new</span>(): T&#125;, <span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">10</span>) : <span class="hljs-built_in">void</span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>._poolMap.get(Class)) &#123;<br>            <span class="hljs-built_in">this</span>._poolMap.set(Class, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;T&gt;())<br>        &#125;<br>        <span class="hljs-keyword">let</span> pool = <span class="hljs-built_in">this</span>._poolMap.get(Class)<br>        <span class="hljs-keyword">if</span> (!pool.length) &#123;<br>            <span class="hljs-built_in">this</span>._factoryCreate(Class, pool, count)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清除所有</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">clearAll</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// TODO 如果需要释放资源 在这里做</span><br>        <span class="hljs-built_in">this</span>._poolMap = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">any</span>, <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">any</span>&gt;&gt;()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 批量创建对象</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;&#123; new(): T&#125;</span></span>&#125; Class</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> </span>[count=10]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ObjectPool</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> _factoryCreate&lt;T&gt; (Class: &#123; <span class="hljs-keyword">new</span>(): T&#125;, <span class="hljs-attr">pool</span>: <span class="hljs-built_in">Array</span>&lt;T&gt;, count: <span class="hljs-built_in">number</span> = <span class="hljs-number">10</span>) : <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) &#123;<br>            pool.push(<span class="hljs-keyword">new</span> Class())<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>game</tag>
      
      <tag>typescript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏中基础的位操作</title>
    <link href="/posts/bae55c6/"/>
    <url>/posts/bae55c6/</url>
    
    <content type="html"><![CDATA[<h3 id="单位源码"><a href="#单位源码" class="headerlink" title="单位源码"></a>单位源码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 定义游戏单位状态</span><br>enum UnitStatus &#123;<br>    US_1 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">1</span>,<br>    US_2 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,<br>    US_3 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,<br>    US_4 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">4</span>,<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 单位类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">Unit</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Unit</span> </span>&#123;<br>    <span class="hljs-attr">unitFlag</span>: number = <span class="hljs-number">0</span>;   <span class="hljs-comment">// 当前单位的状态标识</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置当前状态位</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitStatus&#125;</span> <span class="hljs-variable">flag</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Unit</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">setFlag</span>(<span class="hljs-params">flag: UnitStatus</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.unitFlag = <span class="hljs-built_in">this</span>.unitFlag | flag;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否有当前状态位</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitStatus&#125;</span> <span class="hljs-variable">flag</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Unit</span></span></span><br><span class="hljs-comment">     */</span><br>    hasFlag(flag: UnitStatus) : boolean &#123;<br>        <span class="hljs-keyword">return</span> !!(<span class="hljs-built_in">this</span>.unitFlag &amp; flag);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清除当前状态位</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;UnitStatus&#125;</span> <span class="hljs-variable">flag</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Unit</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">clearFlag</span>(<span class="hljs-params">flag: UnitStatus</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.unitFlag = <span class="hljs-built_in">this</span>.unitFlag &amp; (~flag);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 重置当前状态位</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Unit</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">resetFlag</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.unitFlag = <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> unit = <span class="hljs-keyword">new</span> Unit();<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;add UnitStatus.US_1 UnitStatus.US_2&#x27;</span>);<br>unit.setFlag(UnitStatus.US_1 | UnitStatus.US_2);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_1?&#x27;</span>, unit.hasFlag(UnitStatus.US_1));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_2?&#x27;</span>, unit.hasFlag(UnitStatus.US_2));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_3?&#x27;</span>, unit.hasFlag(UnitStatus.US_3));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_4?&#x27;</span>, unit.hasFlag(UnitStatus.US_4));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;remove UnitStatus.US_1&#x27;</span>);<br>unit.clearFlag(UnitStatus.US_1);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_1?&#x27;</span>, unit.hasFlag(UnitStatus.US_1));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_2?&#x27;</span>, unit.hasFlag(UnitStatus.US_2));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_3?&#x27;</span>, unit.hasFlag(UnitStatus.US_3));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_4?&#x27;</span>, unit.hasFlag(UnitStatus.US_4));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;reset unit status&#x27;</span>);<br>unit.resetFlag();<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_1?&#x27;</span>, unit.hasFlag(UnitStatus.US_1));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_2?&#x27;</span>, unit.hasFlag(UnitStatus.US_2));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_3?&#x27;</span>, unit.hasFlag(UnitStatus.US_3));<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;unit has UnitStatus.US_4?&#x27;</span>, unit.hasFlag(UnitStatus.US_4));<br></code></pre></td></tr></table></figure><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">add UnitStatus.US_1 UnitStatus.US_2<br>unit has UnitStatus.US_1? <span class="hljs-literal">true</span><br>unit has UnitStatus.US_2? <span class="hljs-literal">true</span><br>unit has UnitStatus.US_3? <span class="hljs-literal">false</span><br>unit has UnitStatus.US_4? <span class="hljs-literal">false</span><br>remove UnitStatus.US_1<br>unit has UnitStatus.US_1? <span class="hljs-literal">false</span><br>unit has UnitStatus.US_2? <span class="hljs-literal">true</span><br>unit has UnitStatus.US_3? <span class="hljs-literal">false</span><br>unit has UnitStatus.US_4? <span class="hljs-literal">false</span><br>reset unit status<br>unit has UnitStatus.US_1? <span class="hljs-literal">false</span><br>unit has UnitStatus.US_2? <span class="hljs-literal">false</span><br>unit has UnitStatus.US_3? <span class="hljs-literal">false</span><br>unit has UnitStatus.US_4? <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>TypeScript</tag>
      
      <tag>位操作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OX棋和五子棋</title>
    <link href="/posts/5b90d2f/"/>
    <url>/posts/5b90d2f/</url>
    
    <content type="html"><![CDATA[<blockquote><p>阅读所需基础技能</p></blockquote><ul><li>colyseus</li><li>cocos creator</li><li>状态同步</li></ul><blockquote><p>游戏效果</p></blockquote><iframe src="/games/chess/index.html" style="display:block; margin:0 auto; width:320px; height:568px; text-align:center;"></iframe><h2 id="OX棋"><a href="#OX棋" class="headerlink" title="OX棋"></a>OX棋</h2><p><img src="/images/OX%E6%A3%8B%E5%92%8C%E4%BA%94%E5%AD%90%E6%A3%8B/ox.gif" alt="OX棋"></p><h3 id="服务器房间主要代码"><a href="#服务器房间主要代码" class="headerlink" title="服务器房间主要代码"></a>服务器房间主要代码</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Room, Delayed, Client &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;colyseus&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-keyword">type</span>, Schema, MapSchema, ArraySchema &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@colyseus/schema&#x27;</span>;<br><br><span class="hljs-comment">// 一个回合的时间(秒)</span><br><span class="hljs-keyword">const</span> TURN_TIMEOUT = <span class="hljs-number">10</span><br><span class="hljs-comment">// 棋盘宽度</span><br><span class="hljs-keyword">const</span> BOARD_WIDTH = <span class="hljs-number">3</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Player</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Schema</span> </span>&#123;<br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span><br>&#125;<br><br><span class="hljs-comment">// 状态同步的内容</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">State</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Schema</span> </span>&#123;<br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">currentTurn</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-meta">@type</span>(&#123;<span class="hljs-attr">map</span>: Player &#125;)<br>    players = <span class="hljs-keyword">new</span> MapSchema&lt;Player&gt;()<br>    <span class="hljs-meta">@type</span>([<span class="hljs-string">&#x27;number&#x27;</span>])<br>    <span class="hljs-attr">board</span>: <span class="hljs-built_in">number</span>[] = <span class="hljs-keyword">new</span> ArraySchema&lt;<span class="hljs-built_in">number</span>&gt;(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">winner</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;boolean&#x27;</span>)<br>    <span class="hljs-attr">draw</span>: <span class="hljs-built_in">boolean</span><br>&#125;<br><br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TicTacTocRoom</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Room</span>&lt;<span class="hljs-title">State</span>&gt; </span>&#123;<br>maxClients = <span class="hljs-number">2</span><br><span class="hljs-attr">randomMoveTimeout</span>: Delayed<br><br>onCreate (options: <span class="hljs-built_in">any</span>) &#123;<br>        <span class="hljs-built_in">this</span>.setState(<span class="hljs-keyword">new</span> State())<br>        <span class="hljs-comment">// 消息回调</span><br>        <span class="hljs-built_in">this</span>.onMessage(<span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-built_in">this</span>.messageHandler.bind(<span class="hljs-built_in">this</span>))<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">messageHandler</span>(<span class="hljs-params">client: Client, <span class="hljs-keyword">type</span>: <span class="hljs-built_in">any</span>, message: <span class="hljs-built_in">any</span></span>)</span> &#123;<br><span class="hljs-comment">// 当前已经有赢家或者为平局</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.state.winner || <span class="hljs-built_in">this</span>.state.draw) &#123;<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-comment">// 当前玩家的回合</span><br><span class="hljs-keyword">if</span> (client.sessionId === <span class="hljs-built_in">this</span>.state.currentTurn) &#123;<br><span class="hljs-keyword">let</span> data: <span class="hljs-built_in">any</span> = message<br><span class="hljs-keyword">const</span> playerIds = <span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players)<br><span class="hljs-keyword">const</span> index = data.x + BOARD_WIDTH * data.y<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.state.board[index] === <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">const</span> move = (client.sessionId === playerIds[<span class="hljs-number">0</span>]) ? <span class="hljs-number">1</span> : <span class="hljs-number">2</span><br><span class="hljs-built_in">this</span>.state.board[index] = move<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checkWin(data.x, data.y, move)) &#123;<br><span class="hljs-built_in">this</span>.state.winner = client.sessionId<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checkBoardComplete()) &#123;<br><span class="hljs-built_in">this</span>.state.draw = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// 获取另一个玩家的id</span><br><span class="hljs-keyword">const</span> otherPlayerSessionId = (client.sessionId === playerIds[<span class="hljs-number">0</span>]) ? playerIds[<span class="hljs-number">1</span>] : playerIds[<span class="hljs-number">0</span>]<br><span class="hljs-comment">// 设置当前的轮回</span><br><span class="hljs-built_in">this</span>.state.currentTurn = otherPlayerSessionId<br><span class="hljs-comment">// 开启自动移动定时器</span><br><span class="hljs-built_in">this</span>.setAutoMoveTimeout()<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br>onJoin (client: Client, <span class="hljs-attr">options</span>: <span class="hljs-built_in">any</span>) &#123;<br><span class="hljs-keyword">let</span> player = <span class="hljs-keyword">new</span> Player()<br>player.id = client.sessionId<br>player.name = options.name || <span class="hljs-built_in">this</span>.randomName()<br><span class="hljs-built_in">this</span>.state.players[client.sessionId] = player<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players).length === <span class="hljs-number">2</span>) &#123;<br><span class="hljs-comment">// 当前的turn</span><br><span class="hljs-built_in">this</span>.state.currentTurn = client.sessionId<br><span class="hljs-built_in">this</span>.setAutoMoveTimeout()<br><span class="hljs-comment">// 锁定当前的房间</span><br><span class="hljs-built_in">this</span>.lock()<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">randomName</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> ~~(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10000</span>) + <span class="hljs-string">&#x27;&#x27;</span><br>&#125;<br><br><span class="hljs-comment">// 设置自动移动的定时器</span><br><span class="hljs-function"><span class="hljs-title">setAutoMoveTimeout</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.randomMoveTimeout) &#123;<br><span class="hljs-built_in">this</span>.randomMoveTimeout.clear()<br>&#125;<br><span class="hljs-built_in">this</span>.randomMoveTimeout = <span class="hljs-built_in">this</span>.clock.setTimeout(<span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">this</span>.doRandomMove(), TURN_TIMEOUT * <span class="hljs-number">1000</span>)<br>&#125;<br><br>  <span class="hljs-comment">// 随机移动</span><br><span class="hljs-function"><span class="hljs-title">doRandomMove</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">const</span> sessionId = <span class="hljs-built_in">this</span>.state.currentTurn<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> x=<span class="hljs-number">0</span>; x&lt;BOARD_WIDTH; x++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> y=<span class="hljs-number">0</span>; y&lt;BOARD_WIDTH; y++) &#123;<br><span class="hljs-keyword">const</span> index = x + BOARD_WIDTH * y;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.state.board[index] === <span class="hljs-number">0</span>) &#123;<br><span class="hljs-built_in">this</span>.messageHandler(&#123; sessionId &#125; <span class="hljs-keyword">as</span> Client, <span class="hljs-string">&#x27;pos&#x27;</span> ,&#123; x, y &#125;)<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br>  <span class="hljs-comment">// 检测当前的底板是否已经满了</span><br><span class="hljs-function"><span class="hljs-title">checkBoardComplete</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state.board.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item === <span class="hljs-number">0</span>).length === <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">// 检测是否成功</span><br>checkWin (x: <span class="hljs-built_in">number</span>, <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">move</span>: <span class="hljs-built_in">number</span>) &#123;<br><span class="hljs-keyword">let</span> won = <span class="hljs-literal">false</span><br><span class="hljs-keyword">let</span> board = <span class="hljs-built_in">this</span>.state.board<br><span class="hljs-comment">// 横向</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> y = <span class="hljs-number">0</span>; y &lt; BOARD_WIDTH; y++)&#123;<br><span class="hljs-keyword">const</span> i = x + BOARD_WIDTH * y<br><span class="hljs-keyword">if</span> (board[i] !== move) &#123; <span class="hljs-keyword">break</span> &#125;<br><span class="hljs-keyword">if</span> (y == BOARD_WIDTH-<span class="hljs-number">1</span>) &#123;<br>won = <span class="hljs-literal">true</span><br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 纵向</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>; x &lt; BOARD_WIDTH; x++)&#123;<br><span class="hljs-keyword">const</span> i = x + BOARD_WIDTH * y<br><span class="hljs-keyword">if</span> (board[i] !== move) &#123; <span class="hljs-keyword">break</span> &#125;<br><span class="hljs-keyword">if</span> (x == BOARD_WIDTH-<span class="hljs-number">1</span>) &#123;<br>won = <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 交叉</span><br><span class="hljs-keyword">if</span>(x === y) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> xy = <span class="hljs-number">0</span>; xy &lt; BOARD_WIDTH; xy++)&#123;<br><span class="hljs-keyword">const</span> i = xy + BOARD_WIDTH * xy<br><span class="hljs-keyword">if</span> (board[i] !== move) &#123; <span class="hljs-keyword">break</span> &#125;<br><span class="hljs-keyword">if</span> (xy == BOARD_WIDTH-<span class="hljs-number">1</span>) &#123;<br>won = <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>; x &lt; BOARD_WIDTH; x++) &#123;<br><span class="hljs-keyword">const</span> y = (BOARD_WIDTH - <span class="hljs-number">1</span>) - x<br><span class="hljs-keyword">const</span> i = x + BOARD_WIDTH * y<br><span class="hljs-keyword">if</span> (board[i] !== move) &#123; <span class="hljs-keyword">break</span> &#125;<br><span class="hljs-keyword">if</span> (x == BOARD_WIDTH - <span class="hljs-number">1</span>)&#123;<br>won = <span class="hljs-literal">true</span><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> won<br>&#125;<br><br>onLeave (client: Client, <span class="hljs-attr">consented</span>: <span class="hljs-built_in">boolean</span>) &#123;<br><span class="hljs-comment">// 删除当前离开的玩家</span><br><span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>.state.players[ client.sessionId ]<br><span class="hljs-comment">// 清除自动移动的定时器</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.randomMoveTimeout) &#123;<br><span class="hljs-built_in">this</span>.randomMoveTimeout.clear()<br>&#125;<br><span class="hljs-comment">// 获取剩余玩家</span><br><span class="hljs-keyword">let</span> remainingPlayerIds = <span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players)<br><span class="hljs-keyword">if</span> (remainingPlayerIds.length &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-comment">// 设置当前玩家为赢家</span><br><span class="hljs-built_in">this</span>.state.winner = remainingPlayerIds[<span class="hljs-number">0</span>]<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">onDispose</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>&#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="客户端主要代码"><a href="#客户端主要代码" class="headerlink" title="客户端主要代码"></a>客户端主要代码</h3><ul><li>TicTacToe.ts  </li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> OXChess <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./OXChess&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-keyword">const</span> <span class="hljs-built_in">enum</span> ResultType &#123;<br>    WIN,<br>    LOSE,<br>    DRAW<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-built_in">enum</span> GameState &#123;<br>    NON,<br>    MATCH,<br>    GAME,<br>    RESULT<br>&#125;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TicTacToe</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br>    <span class="hljs-attr">client</span>: Colyseus.Client<br>    <span class="hljs-attr">room</span>: Colyseus.Room<br>    <span class="hljs-attr">gameState</span>: GameState = GameState.NON<br><br>    <span class="hljs-meta">@property</span>() host: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-meta">@property</span>(cc.Node) boardNode: cc.Node = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Node) matchingLayer: cc.Node = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Node) resultLayer: cc.Node = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) turnLabel: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) timeLabel: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) resultLabel: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Button) matchBtn: cc.Button = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.EditBox) nameEditBox: cc.EditBox = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) yourName: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) otherName: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-attr">curTurn</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-attr">turnTimer</span>: <span class="hljs-built_in">any</span><br>    <span class="hljs-attr">time</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attr">playerMap</span>: <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">string</span>, &#123;<span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>&#125;&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">string</span>, &#123;<span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>&#125;&gt;()<br><br>    <span class="hljs-function"><span class="hljs-title">start</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.matchBtn.node.on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.resultLayer.active = <span class="hljs-literal">false</span><br>            <span class="hljs-built_in">this</span>.matchBtn.node.active = <span class="hljs-literal">false</span><br>            <span class="hljs-built_in">this</span>.startMatch()<br>        &#125;)<br><br>        <span class="hljs-built_in">this</span>.boardNode.children.forEach(<span class="hljs-function">(<span class="hljs-params">node: cc.Node, i: <span class="hljs-built_in">number</span></span>) =&gt;</span> &#123;<br>            node.on(cc.Node.EventType.TOUCH_START, <span class="hljs-function">() =&gt;</span> &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState != GameState.GAME) &#123;<br>                    <span class="hljs-keyword">return</span><br>                &#125;<br>                <span class="hljs-built_in">this</span>.room.send(<span class="hljs-string">&#x27;pos&#x27;</span>, &#123; <span class="hljs-attr">x</span>: (i % <span class="hljs-number">3</span>) , <span class="hljs-attr">y</span>: ~~(i / <span class="hljs-number">3</span>)&#125;)<br>            &#125;)<br>        &#125;)<br>        <span class="hljs-built_in">this</span>.client = <span class="hljs-keyword">new</span> Colyseus.Client(<span class="hljs-built_in">this</span>.host)<br>    &#125;<br><br><br>    <span class="hljs-function"><span class="hljs-title">startMatch</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gameState = GameState.MATCH<br>        <span class="hljs-built_in">this</span>.matchingLayer.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.nameEditBox.node.active = <span class="hljs-literal">false</span><br>        <span class="hljs-built_in">this</span>.client.joinOrCreate(<span class="hljs-string">&#x27;tictactoc&#x27;</span>, &#123;<span class="hljs-attr">name</span>: <span class="hljs-built_in">this</span>.nameEditBox.string&#125;).then(<span class="hljs-function"><span class="hljs-params">room</span> =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.room = room<br>            room.state.players.onAdd = <span class="hljs-function">(<span class="hljs-params">player: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                <span class="hljs-built_in">this</span>.playerMap.set(player.id, player)<br>                <span class="hljs-keyword">if</span> (room.sessionId === player.id) &#123;<br>                    <span class="hljs-built_in">this</span>.yourName.string = player.name<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-built_in">this</span>.otherName.string = player.name<br>                &#125;<br>            &#125;<br>            room.state.players.onChange = <span class="hljs-function">(<span class="hljs-params">player: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                <span class="hljs-built_in">this</span>.playerMap.set(player.id, player)<br>            &#125;<br>            room.state.players.onRemove= <span class="hljs-function">(<span class="hljs-params">player: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                <span class="hljs-built_in">this</span>.playerMap.delete(player.id)<br>            &#125;<br><br>            room.onStateChange(<span class="hljs-function"><span class="hljs-params">state</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState == GameState.MATCH &amp;&amp; <span class="hljs-built_in">Object</span>.keys(room.state.players).length === <span class="hljs-number">2</span>) &#123;<br>                    <span class="hljs-built_in">this</span>.curTurn = state.currentTurn<br>                    <span class="hljs-built_in">this</span>.startGame()<br>                &#125;<br>                <span class="hljs-keyword">if</span> (state.draw) &#123;<br>                    <span class="hljs-built_in">this</span>.gameResult(ResultType.DRAW)<br>                &#125;<br>                <span class="hljs-keyword">if</span> (state.winner) &#123;<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.room.sessionId === state.winner) &#123;<br>                        <span class="hljs-built_in">this</span>.gameResult(ResultType.WIN)<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-built_in">this</span>.gameResult(ResultType.LOSE)<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState == GameState.GAME) &#123;<br>                    <span class="hljs-built_in">this</span>.turnLabel.string = <span class="hljs-built_in">this</span>.room.sessionId === state.currentTurn ? <span class="hljs-string">&#x27;你的回合&#x27;</span> : <span class="hljs-string">&#x27;对手回合&#x27;</span><br>                &#125;<br>                <span class="hljs-comment">// 棋局</span><br>                <span class="hljs-built_in">this</span>.boardNode.children.forEach(<span class="hljs-function">(<span class="hljs-params">node: cc.Node, i: <span class="hljs-built_in">number</span></span>) =&gt;</span> &#123;<br>                    <span class="hljs-keyword">let</span> chess = node.getComponent(OXChess)<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState == GameState.GAME &amp;&amp; chess.getCurIndex() == <span class="hljs-number">0</span> &amp;&amp; state.board[i] != <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-built_in">this</span>.changeTurn()<br>                    &#125;<br>                    chess.setIcon(state.board[i])<br>                &#125;)<br>            &#125;)<br>        &#125;) <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">startGame</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gameState = GameState.GAME<br>        <span class="hljs-built_in">this</span>.matchingLayer.active = <span class="hljs-literal">false</span><br>        <br>        <span class="hljs-built_in">this</span>.changeTurn()<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">gameResult</span>(<span class="hljs-params"><span class="hljs-keyword">type</span>: ResultType</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gameState = GameState.RESULT<br>        <span class="hljs-built_in">this</span>.matchBtn.node.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.resultLayer.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.nameEditBox.node.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.yourName.string = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-built_in">this</span>.otherName.string = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-built_in">this</span>.playerMap.clear()<br>        <span class="hljs-keyword">switch</span>(<span class="hljs-keyword">type</span>) &#123;<br>            <span class="hljs-keyword">case</span> ResultType.WIN: &#123;<br>                <span class="hljs-built_in">this</span>.resultLabel.string = <span class="hljs-string">&#x27;赢就是这样简单&#x27;</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> ResultType.LOSE: &#123;<br>                <span class="hljs-built_in">this</span>.resultLabel.string = <span class="hljs-string">&#x27;失败也是一种进步&#x27;</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> ResultType.DRAW: &#123;<br>                <span class="hljs-built_in">this</span>.resultLabel.string = <span class="hljs-string">&#x27;和棋是一种态度&#x27;</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.turnLabel.string = <span class="hljs-string">&#x27;未知&#x27;</span><br>        <span class="hljs-built_in">this</span>.timeLabel.string = <span class="hljs-string">&#x27;0&#x27;</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.turnTimer) &#123;<br>            <span class="hljs-built_in">clearInterval</span>(<span class="hljs-built_in">this</span>.turnTimer)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">changeTurn</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.time = <span class="hljs-number">10</span><br>        <span class="hljs-built_in">this</span>.timeLabel.string = <span class="hljs-built_in">this</span>.time + <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.turnTimer) &#123;<br>            <span class="hljs-built_in">clearInterval</span>(<span class="hljs-built_in">this</span>.turnTimer)<br>        &#125;<br>        <span class="hljs-built_in">this</span>.turnTimer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.time--<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.time &lt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-built_in">this</span>.time = <span class="hljs-number">0</span><br>            &#125;<br>            <span class="hljs-built_in">this</span>.timeLabel.string = <span class="hljs-built_in">this</span>.time + <span class="hljs-string">&#x27;&#x27;</span><br>        &#125;, <span class="hljs-number">1000</span>)<br>    &#125;<br>    <span class="hljs-comment">// update (dt) &#123;&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>OXChess.ts  </li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OXChess</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>([cc.SpriteFrame])<br>    <span class="hljs-attr">chessIcons</span>: cc.SpriteFrame[] = []<br><br>    <span class="hljs-meta">@property</span>(cc.Sprite)<br>    <span class="hljs-attr">icon</span>: cc.Sprite = <span class="hljs-literal">null</span><br><br>    <span class="hljs-attr">curIndex</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><br>    <span class="hljs-function"><span class="hljs-title">setIcon</span>(<span class="hljs-params">id: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">switch</span>(id) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>: &#123;<br>                <span class="hljs-built_in">this</span>.icon.spriteFrame = <span class="hljs-literal">null</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>: &#123;<br>                <span class="hljs-built_in">this</span>.icon.spriteFrame = <span class="hljs-built_in">this</span>.chessIcons[<span class="hljs-number">0</span>]<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>: &#123;<br>                <span class="hljs-built_in">this</span>.icon.spriteFrame = <span class="hljs-built_in">this</span>.chessIcons[<span class="hljs-number">1</span>]<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.curIndex = id<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">getCurIndex</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.curIndex<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="五子棋"><a href="#五子棋" class="headerlink" title="五子棋"></a>五子棋</h2><p><img src="/images/OX%E6%A3%8B%E5%92%8C%E4%BA%94%E5%AD%90%E6%A3%8B/five.gif" alt="OX棋"></p><h3 id="服务器房间主要代码-1"><a href="#服务器房间主要代码-1" class="headerlink" title="服务器房间主要代码"></a>服务器房间主要代码</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Room, Delayed, Client &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;colyseus&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-keyword">type</span>, Schema, MapSchema, ArraySchema &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@colyseus/schema&#x27;</span>;<br><br><span class="hljs-comment">// 一个回合的时间</span><br><span class="hljs-keyword">const</span> TURN_TIMEOUT = <span class="hljs-number">10</span><br><span class="hljs-comment">// 棋盘宽度</span><br><span class="hljs-keyword">const</span> BOARD_WIDTH = <span class="hljs-number">13</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Player</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Schema</span> </span>&#123;<br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span><br>&#125;<br><br><span class="hljs-keyword">const</span> boardMap = [<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>]<br><br><span class="hljs-comment">// 状态同步的内容</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">State</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Schema</span> </span>&#123;<br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">currentTurn</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-meta">@type</span>(&#123;<span class="hljs-attr">map</span>: Player &#125;)<br>    players = <span class="hljs-keyword">new</span> MapSchema&lt;Player&gt;()<br>    <span class="hljs-meta">@type</span>([<span class="hljs-string">&#x27;number&#x27;</span>])<br>    <span class="hljs-attr">board</span>: <span class="hljs-built_in">number</span>[] = <span class="hljs-keyword">new</span> ArraySchema&lt;<span class="hljs-built_in">number</span>&gt;(...boardMap)<br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;string&#x27;</span>)<br>    <span class="hljs-attr">winner</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-meta">@type</span>(<span class="hljs-string">&#x27;boolean&#x27;</span>)<br>    <span class="hljs-attr">draw</span>: <span class="hljs-built_in">boolean</span><br>&#125;<br><br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FiveRoom</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Room</span>&lt;<span class="hljs-title">State</span>&gt; </span>&#123;<br>    maxClients = <span class="hljs-number">2</span><br>    <span class="hljs-attr">randomMoveTimeout</span>: Delayed<br><br>    onCreate (options: <span class="hljs-built_in">any</span>) &#123;<br>        <span class="hljs-built_in">this</span>.setState(<span class="hljs-keyword">new</span> State())<br>        <span class="hljs-comment">// 消息回调</span><br>        <span class="hljs-built_in">this</span>.onMessage(<span class="hljs-string">&quot;pos&quot;</span>, <span class="hljs-built_in">this</span>.posMessageHandler.bind(<span class="hljs-built_in">this</span>))<br>        <span class="hljs-built_in">this</span>.onMessage(<span class="hljs-string">&quot;ai&quot;</span>, <span class="hljs-function">(<span class="hljs-params">client: Client, message: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.posMessageHandler(client, <span class="hljs-built_in">this</span>.useAiMove())<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">posMessageHandler</span>(<span class="hljs-params">client: Client, message: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-comment">// 当前已经有赢家或者为平局</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.state.winner || <span class="hljs-built_in">this</span>.state.draw) &#123;<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-comment">// 当前玩家的回合</span><br>        <span class="hljs-keyword">if</span> (client.sessionId === <span class="hljs-built_in">this</span>.state.currentTurn) &#123;<br>            <span class="hljs-keyword">let</span> data: <span class="hljs-built_in">any</span> = message<br>            <span class="hljs-keyword">const</span> playerIds = <span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players)<br>            <span class="hljs-keyword">const</span> index = data.x + BOARD_WIDTH * data.y<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.state.board[index] === <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">const</span> move = (client.sessionId === playerIds[<span class="hljs-number">0</span>]) ? <span class="hljs-number">1</span> : <span class="hljs-number">2</span><br>            <span class="hljs-built_in">this</span>.state.board[index] = move<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checkWin(data.x, data.y, move)) &#123;<br>                <span class="hljs-built_in">this</span>.state.winner = client.sessionId<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.checkBoardComplete()) &#123;<br>                <span class="hljs-built_in">this</span>.state.draw = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">// 获取另一个玩家的id</span><br>                <span class="hljs-keyword">const</span> otherPlayerSessionId = (client.sessionId === playerIds[<span class="hljs-number">0</span>]) ? playerIds[<span class="hljs-number">1</span>] : playerIds[<span class="hljs-number">0</span>]<br>                <span class="hljs-comment">// 设置当前的轮回</span><br>                <span class="hljs-built_in">this</span>.state.currentTurn = otherPlayerSessionId<br>                <span class="hljs-comment">// 开启自动移动定时器</span><br>                <span class="hljs-built_in">this</span>.setAutoMoveTimeout()<br>            &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    onJoin (client: Client, <span class="hljs-attr">options</span>: <span class="hljs-built_in">any</span>) &#123;<br>        <span class="hljs-keyword">let</span> player = <span class="hljs-keyword">new</span> Player()<br>        player.id = client.sessionId<br>        player.name = options.name || <span class="hljs-built_in">this</span>.randomName()<br>        <span class="hljs-built_in">this</span>.state.players[client.sessionId] = player<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players).length === <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">// 当前的turn</span><br>            <span class="hljs-built_in">this</span>.state.currentTurn = client.sessionId<br>            <span class="hljs-built_in">this</span>.setAutoMoveTimeout()<br>            <span class="hljs-comment">// 锁定当前的房间</span><br>            <span class="hljs-built_in">this</span>.lock()<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">randomName</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> ~~(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10000</span>) + <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;<br><br>    <span class="hljs-comment">// 设置自动移动的定时器</span><br>    <span class="hljs-function"><span class="hljs-title">setAutoMoveTimeout</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.randomMoveTimeout) &#123;<br>            <span class="hljs-built_in">this</span>.randomMoveTimeout.clear()<br>        &#125;<br>        <span class="hljs-built_in">this</span>.randomMoveTimeout = <span class="hljs-built_in">this</span>.clock.setTimeout(<span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">this</span>.doRandomMove(), TURN_TIMEOUT * <span class="hljs-number">1000</span>)<br>    &#125;<br><br>    useAiMove() : &#123;<span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>&#125; &#123;<br>        <span class="hljs-keyword">const</span> playerIds = <span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players)<br>        <span class="hljs-keyword">const</span> move = (<span class="hljs-built_in">this</span>.state.currentTurn === playerIds[<span class="hljs-number">0</span>]) ? <span class="hljs-number">1</span> : <span class="hljs-number">2</span><br>        <span class="hljs-keyword">let</span> maxX = <span class="hljs-number">0</span>,<br>maxY = <span class="hljs-number">0</span>,<br>maxWeight = <span class="hljs-number">0</span>,<br>i, j, tem<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">14</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">14</span>; j &gt;= <span class="hljs-number">0</span>; j--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, j) !== <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">continue</span><br>&#125;<br>tem = <span class="hljs-built_in">this</span>.computeWeight(i, j, move)<br><span class="hljs-keyword">if</span> (tem &gt; maxWeight) &#123;<br>maxWeight = tem<br>maxX = i<br>maxY = j<br>&#125;<br>&#125;<br>&#125;<br>        <span class="hljs-keyword">return</span> &#123;<span class="hljs-attr">x</span>: maxX, <span class="hljs-attr">y</span>: maxY&#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 随机移动</span><br>    <span class="hljs-function"><span class="hljs-title">doRandomMove</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// 当前的id</span><br>        <span class="hljs-keyword">const</span> sessionId = <span class="hljs-built_in">this</span>.state.currentTurn<br>        <span class="hljs-built_in">this</span>.posMessageHandler(&#123; sessionId &#125; <span class="hljs-keyword">as</span> Client, <span class="hljs-built_in">this</span>.useAiMove())<br>        <br>        <span class="hljs-comment">// for (let x=0; x&lt;BOARD_WIDTH; x++) &#123;</span><br>        <span class="hljs-comment">//     for (let y=0; y&lt;BOARD_WIDTH; y++) &#123;</span><br>        <span class="hljs-comment">//         const index = x + BOARD_WIDTH * y;</span><br>        <span class="hljs-comment">//         if (this.state.board[index] === 0) &#123;</span><br>        <span class="hljs-comment">//             this.messageHandler(&#123; sessionId &#125; as Client, &#x27;pos&#x27; ,&#123; x, y &#125;)</span><br>        <span class="hljs-comment">//             return;</span><br>        <span class="hljs-comment">//         &#125;</span><br>        <span class="hljs-comment">//     &#125;</span><br>        <span class="hljs-comment">// &#125;</span><br>    &#125;<br><br>    <span class="hljs-comment">//计算下子至i,j的权重</span><br>    <span class="hljs-function"><span class="hljs-title">computeWeight</span>(<span class="hljs-params">i: <span class="hljs-built_in">number</span>, j: <span class="hljs-built_in">number</span>, move: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">var</span> weight = <span class="hljs-number">14</span> - (<span class="hljs-built_in">Math</span>.abs(i - <span class="hljs-number">7</span>) + <span class="hljs-built_in">Math</span>.abs(j - <span class="hljs-number">7</span>)), <span class="hljs-comment">//基于棋盘位置权重</span><br>            <span class="hljs-attr">pointInfo</span>: <span class="hljs-built_in">any</span> = &#123;&#125;,<span class="hljs-comment">//某点下子后连子信息</span><br>            chessColor = move<br>        <span class="hljs-comment">//x方向</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectX(i, j, chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">true</span>);<span class="hljs-comment">//AI下子权重</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectX(i, j, -chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">false</span>);<span class="hljs-comment">//player下子权重</span><br>        <span class="hljs-comment">//y方向</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectY(i, j, chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">true</span>);<span class="hljs-comment">//AI下子权重</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectY(i, j, -chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">false</span>);<span class="hljs-comment">//player下子权重</span><br>        <span class="hljs-comment">//左斜方向</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectXY(i, j, chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">true</span>);<span class="hljs-comment">//AI下子权重</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectXY(i, j, -chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">false</span>);<span class="hljs-comment">//player下子权重</span><br>        <span class="hljs-comment">//右斜方向</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectYX(i, j, chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">true</span>);<span class="hljs-comment">//AI下子权重</span><br>        pointInfo = <span class="hljs-built_in">this</span>.putDirectYX(i, j, -chessColor);<br>        weight += <span class="hljs-built_in">this</span>.weightStatus(pointInfo.nums, pointInfo.side1, pointInfo.side2, <span class="hljs-literal">false</span>);<span class="hljs-comment">//player下子权重</span><br>        <span class="hljs-keyword">return</span> weight;<br>    &#125;<br>    <span class="hljs-comment">// 下子到i，j X方向 结果: 多少连子 两边是否截断</span><br>    <span class="hljs-function"><span class="hljs-title">putDirectX</span>(<span class="hljs-params">i: <span class="hljs-built_in">number</span>, j: <span class="hljs-built_in">number</span>, chessColor: <span class="hljs-built_in">number</span></span>)</span> &#123;<br><span class="hljs-keyword">var</span> m, n,<br>nums = <span class="hljs-number">1</span>,<br>side1 = <span class="hljs-literal">false</span>,<br>side2 = <span class="hljs-literal">false</span><br><span class="hljs-keyword">for</span> (m = j - <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span>; m--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, m) === chessColor) &#123;<br>nums++;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, m) === <span class="hljs-number">0</span>) &#123;<br>side1 = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = j + <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span>; m++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, m) === chessColor) &#123;<br>nums++;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, m)=== <span class="hljs-number">0</span>) &#123;<br>side2 = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;nums&quot;</span>: nums, <span class="hljs-string">&quot;side1&quot;</span>: side1, <span class="hljs-string">&quot;side2&quot;</span>: side2&#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">// 下子到i，j Y方向 结果</span><br><span class="hljs-function"><span class="hljs-title">putDirectY</span>(<span class="hljs-params">i: <span class="hljs-built_in">number</span>, j: <span class="hljs-built_in">number</span>, chessColor: <span class="hljs-built_in">number</span></span>)</span> &#123;<br><span class="hljs-keyword">let</span> m, n,<br>nums = <span class="hljs-number">1</span>,<br>side1 = <span class="hljs-literal">false</span>,<br>side2 = <span class="hljs-literal">false</span><br><span class="hljs-keyword">for</span> (m = i - <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span>; m--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, j) === chessColor) &#123;<br>nums++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, j) === <span class="hljs-number">0</span>) &#123;<br>side1 = <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = i + <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span>; m++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, j) === chessColor) &#123;<br>nums++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, j) === <span class="hljs-number">0</span>) &#123;<br>side2 = <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;nums&quot;</span>: nums, <span class="hljs-string">&quot;side1&quot;</span>: side1, <span class="hljs-string">&quot;side2&quot;</span>: side2&#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">//下子到i，j XY方向 结果</span><br><span class="hljs-function"><span class="hljs-title">putDirectXY</span>(<span class="hljs-params">i: <span class="hljs-built_in">number</span>, j: <span class="hljs-built_in">number</span>, chessColor: <span class="hljs-built_in">number</span></span>)</span> &#123;<br><span class="hljs-keyword">let</span> m, n,<br>nums = <span class="hljs-number">1</span>,<br>side1 = <span class="hljs-literal">false</span>,<br>side2 = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">for</span> (m = i - <span class="hljs-number">1</span>, n = j - <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span> &amp;&amp; n &gt;= <span class="hljs-number">0</span>; m--, n--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>nums++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === <span class="hljs-number">0</span>) &#123;<br>side1 = <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = i + <span class="hljs-number">1</span>, n = j + <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span> &amp;&amp; n &lt; <span class="hljs-number">15</span>; m++, n++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>nums++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === <span class="hljs-number">0</span>) &#123;<br>side2 = <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;nums&quot;</span>: nums, <span class="hljs-string">&quot;side1&quot;</span>: side1, <span class="hljs-string">&quot;side2&quot;</span>: side2&#125;;<br>    &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-title">putDirectYX</span>(<span class="hljs-params">i: <span class="hljs-built_in">number</span>, j: <span class="hljs-built_in">number</span>, chessColor: <span class="hljs-built_in">number</span></span>)</span> &#123;<br><span class="hljs-keyword">let</span> m, n,<br>nums = <span class="hljs-number">1</span>,<br>side1 = <span class="hljs-literal">false</span>,<br>side2 = <span class="hljs-literal">false</span><br><span class="hljs-keyword">for</span> (m = i - <span class="hljs-number">1</span>, n = j + <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span> &amp;&amp; n &lt; <span class="hljs-number">15</span>; m--, n++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>nums++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === <span class="hljs-number">0</span>) &#123;<br>side1 = <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = i + <span class="hljs-number">1</span>, n = j - <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span> &amp;&amp; n &gt;= <span class="hljs-number">0</span>; m++, n--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>nums++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === <span class="hljs-number">0</span>) &#123;<br>side2 = <span class="hljs-literal">true</span><br>&#125;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;nums&quot;</span>: nums, <span class="hljs-string">&quot;side1&quot;</span>: side1, <span class="hljs-string">&quot;side2&quot;</span>: side2&#125;<br>&#125;<br>    <br>    <span class="hljs-comment">// 权重方案   独：两边为空可下子，单：一边为空</span><br><span class="hljs-function"><span class="hljs-title">weightStatus</span>(<span class="hljs-params">nums: <span class="hljs-built_in">number</span>, side1: <span class="hljs-built_in">number</span>, side2: <span class="hljs-built_in">number</span>, isAI: <span class="hljs-built_in">boolean</span></span>)</span> &#123;<br><span class="hljs-keyword">let</span> weight = <span class="hljs-number">0</span><br><span class="hljs-keyword">switch</span> (nums) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br><span class="hljs-keyword">if</span> (side1 &amp;&amp; side2) &#123;<br>weight = isAI ? <span class="hljs-number">15</span> : <span class="hljs-number">10</span>;<span class="hljs-comment">//独一</span><br>&#125;<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br><span class="hljs-keyword">if</span> (side1 &amp;&amp; side2) &#123;<br>weight = isAI ? <span class="hljs-number">100</span> : <span class="hljs-number">50</span>;<span class="hljs-comment">//独二</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (side1 || side2) &#123;<br>weight = isAI ? <span class="hljs-number">10</span> : <span class="hljs-number">5</span>;<span class="hljs-comment">//单二</span><br>&#125;<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br><span class="hljs-keyword">if</span> (side1 &amp;&amp; side2) &#123;<br>weight = isAI ? <span class="hljs-number">500</span> : <span class="hljs-number">200</span>;<span class="hljs-comment">//独三</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (side1 || side2) &#123;<br>weight = isAI ? <span class="hljs-number">30</span> : <span class="hljs-number">20</span>;<span class="hljs-comment">//单三</span><br>&#125;<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br><span class="hljs-keyword">if</span> (side1 &amp;&amp; side2) &#123;<br>weight = isAI ? <span class="hljs-number">5000</span> : <span class="hljs-number">2000</span>;<span class="hljs-comment">//独四</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (side1 || side2) &#123;<br>weight = isAI ? <span class="hljs-number">400</span> : <span class="hljs-number">100</span>;<span class="hljs-comment">//单四</span><br>&#125;<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>weight = isAI ? <span class="hljs-number">100000</span> : <span class="hljs-number">10000</span>;<span class="hljs-comment">//五</span><br><span class="hljs-keyword">break</span><br><span class="hljs-attr">default</span>:<br>weight = isAI ? <span class="hljs-number">500000</span> : <span class="hljs-number">250000</span>;<br><span class="hljs-keyword">break</span><br>&#125;<br><span class="hljs-keyword">return</span> weight<br>&#125;<br><br>    <span class="hljs-comment">// 检测当前的底板是否已经满了</span><br>    <span class="hljs-function"><span class="hljs-title">checkBoardComplete</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state.board.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item === <span class="hljs-number">0</span>).length === <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">getChessColor</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state.board[x + BOARD_WIDTH * y]<br>    &#125;<br><br>    <span class="hljs-comment">// 检测是否成功</span><br>    checkWin (i: <span class="hljs-built_in">number</span>, <span class="hljs-attr">j</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">move</span>: <span class="hljs-built_in">number</span>) : <span class="hljs-built_in">boolean</span> &#123;<br><span class="hljs-keyword">let</span> num = <span class="hljs-number">1</span>, chessColor = move, m = <span class="hljs-number">0</span>, n = <span class="hljs-number">0</span><br><span class="hljs-comment">//x方向</span><br><span class="hljs-keyword">for</span> (m = j - <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span>; m--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, m) === chessColor) &#123;<br>num++;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = j + <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span>; m++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(i, m) === chessColor) &#123;<br>num++<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (num &gt;= <span class="hljs-number">5</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>num = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-comment">//y方向</span><br><span class="hljs-keyword">for</span> (m = i - <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span>; m--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, j) === chessColor) &#123;<br>num++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = i + <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span>; m++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, j)  === chessColor) &#123;<br>num++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (num &gt;= <span class="hljs-number">5</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>num = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-comment">//左斜方向</span><br><span class="hljs-keyword">for</span> (m = i - <span class="hljs-number">1</span>, n = j - <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span> &amp;&amp; n &gt;= <span class="hljs-number">0</span>; m--, n--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>num++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = i + <span class="hljs-number">1</span>, n = j + <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span> &amp;&amp; n &lt; <span class="hljs-number">15</span>; m++, n++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>num++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (num &gt;= <span class="hljs-number">5</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>num = <span class="hljs-number">1</span><br>&#125;<br><span class="hljs-comment">//右斜方向</span><br><span class="hljs-keyword">for</span> (m = i - <span class="hljs-number">1</span>, n = j + <span class="hljs-number">1</span>; m &gt;= <span class="hljs-number">0</span> &amp;&amp; n &lt; <span class="hljs-number">15</span>; m--, n++) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>num++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (m = i + <span class="hljs-number">1</span>, n = j - <span class="hljs-number">1</span>; m &lt; <span class="hljs-number">15</span> &amp;&amp; n &gt;= <span class="hljs-number">0</span>; m++, n--) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getChessColor(m, n) === chessColor) &#123;<br>num++<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (num &gt;= <span class="hljs-number">5</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br><br>    onLeave (client: Client, <span class="hljs-attr">consented</span>: <span class="hljs-built_in">boolean</span>) &#123;<br>        <span class="hljs-comment">// 删除当前离开的玩家</span><br>        <span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>.state.players[ client.sessionId ]<br>        <span class="hljs-comment">// 清除自动移动的定时器</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.randomMoveTimeout) &#123;<br>            <span class="hljs-built_in">this</span>.randomMoveTimeout.clear()<br>        &#125;<br>        <span class="hljs-comment">// 获取剩余玩家</span><br>        <span class="hljs-keyword">let</span> remainingPlayerIds = <span class="hljs-built_in">Object</span>.keys(<span class="hljs-built_in">this</span>.state.players)<br>        <span class="hljs-keyword">if</span> (remainingPlayerIds.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// 设置当前玩家为赢家</span><br>            <span class="hljs-built_in">this</span>.state.winner = remainingPlayerIds[<span class="hljs-number">0</span>]<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">onDispose</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="客户端主要代码-1"><a href="#客户端主要代码-1" class="headerlink" title="客户端主要代码"></a>客户端主要代码</h3><ul><li>FiveGame.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> FiveChess <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./FiveChess&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-keyword">const</span> <span class="hljs-built_in">enum</span> ResultType &#123;<br>    WIN,<br>    LOSE,<br>    DRAW<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-built_in">enum</span> GameState &#123;<br>    NON,<br>    MATCH,<br>    GAME,<br>    RESULT<br>&#125;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FiveGame</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-attr">client</span>: Colyseus.Client<br>    <span class="hljs-attr">room</span>: Colyseus.Room<br>    <span class="hljs-attr">gameState</span>: GameState = GameState.NON<br><br>    <span class="hljs-meta">@property</span>() host: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-meta">@property</span>(cc.Node) boardNode: cc.Node = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Node) matchingLayer: cc.Node = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Node) resultLayer: cc.Node = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) turnLabel: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) timeLabel: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) resultLabel: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Button) matchBtn: cc.Button = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.EditBox) nameEditBox: cc.EditBox = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) yourName: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Label) otherName: cc.Label = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Button) aiButton: cc.Button = <span class="hljs-literal">null</span><br>    <span class="hljs-attr">curTurn</span>: <span class="hljs-built_in">string</span><br>    <span class="hljs-attr">turnTimer</span>: <span class="hljs-built_in">any</span><br>    <span class="hljs-attr">time</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attr">playerMap</span>: <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">string</span>, &#123;<span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>&#125;&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>&lt;<span class="hljs-built_in">string</span>, &#123;<span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>&#125;&gt;()<br>    <span class="hljs-attr">useAi</span>: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span><br><br>    start () &#123;<br><br>        <span class="hljs-built_in">this</span>.aiButton.node.on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.room.send(<span class="hljs-string">&#x27;ai&#x27;</span>)<br>        &#125;)<br><br>        <span class="hljs-built_in">this</span>.matchBtn.node.on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.resultLayer.active = <span class="hljs-literal">false</span><br>            <span class="hljs-built_in">this</span>.matchBtn.node.active = <span class="hljs-literal">false</span><br>            <span class="hljs-built_in">this</span>.startMatch()<br>        &#125;)<br><br>        <span class="hljs-built_in">this</span>.boardNode.children.forEach(<span class="hljs-function">(<span class="hljs-params">node: cc.Node, i: <span class="hljs-built_in">number</span></span>) =&gt;</span> &#123;<br>            node.on(cc.Node.EventType.TOUCH_START, <span class="hljs-function">() =&gt;</span> &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;点击&#x27;</span>)<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState != GameState.GAME) &#123;<br>                    <span class="hljs-keyword">return</span><br>                &#125;<br>                <span class="hljs-built_in">this</span>.room.send(<span class="hljs-string">&#x27;pos&#x27;</span>, &#123; <span class="hljs-attr">x</span>: (i % <span class="hljs-number">13</span>) , <span class="hljs-attr">y</span>: ~~(i / <span class="hljs-number">13</span>)&#125;)<br>            &#125;)<br>        &#125;)<br>        <span class="hljs-built_in">this</span>.client = <span class="hljs-keyword">new</span> Colyseus.Client(<span class="hljs-built_in">this</span>.host)<br>        <span class="hljs-built_in">this</span>.cleanBoard()<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">cleanBoard</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.boardNode.children.forEach(<span class="hljs-function">(<span class="hljs-params">node: cc.Node</span>) =&gt;</span> &#123;<br>            node.getComponent(FiveChess).setIcon(<span class="hljs-number">0</span>)<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">startMatch</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gameState = GameState.MATCH<br>        <span class="hljs-built_in">this</span>.matchingLayer.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.nameEditBox.node.active = <span class="hljs-literal">false</span><br>        <span class="hljs-built_in">this</span>.useAi = <span class="hljs-literal">false</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.nameEditBox.string == <span class="hljs-string">&#x27;joker&#x27;</span>) &#123;<br>            <span class="hljs-built_in">this</span>.useAi = <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-built_in">this</span>.client.joinOrCreate(<span class="hljs-string">&#x27;five&#x27;</span>, &#123;<span class="hljs-attr">name</span>: <span class="hljs-built_in">this</span>.nameEditBox.string&#125;).then(<span class="hljs-function"><span class="hljs-params">room</span> =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.room = room<br>            room.state.players.onAdd = <span class="hljs-function">(<span class="hljs-params">player: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                <span class="hljs-built_in">this</span>.playerMap.set(player.id, player)<br>                <span class="hljs-keyword">if</span> (room.sessionId === player.id) &#123;<br>                    <span class="hljs-built_in">this</span>.yourName.string = player.name<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-built_in">this</span>.otherName.string = player.name<br>                &#125;<br>            &#125;<br>            room.state.players.onChange = <span class="hljs-function">(<span class="hljs-params">player: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                <span class="hljs-built_in">this</span>.playerMap.set(player.id, player)<br>            &#125;<br>            room.state.players.onRemove= <span class="hljs-function">(<span class="hljs-params">player: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                <span class="hljs-built_in">this</span>.playerMap.delete(player.id)<br>            &#125;<br><br>            room.onStateChange(<span class="hljs-function"><span class="hljs-params">state</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState == GameState.MATCH &amp;&amp; <span class="hljs-built_in">Object</span>.keys(room.state.players).length === <span class="hljs-number">2</span>) &#123;<br>                    <span class="hljs-built_in">this</span>.curTurn = state.currentTurn<br>                    <span class="hljs-built_in">this</span>.startGame()<br>                &#125;<br>                <span class="hljs-keyword">if</span> (state.draw) &#123;<br>                    <span class="hljs-built_in">this</span>.gameResult(ResultType.DRAW)<br>                &#125;<br>                <span class="hljs-keyword">if</span> (state.winner) &#123;<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.room.sessionId === state.winner) &#123;<br>                        <span class="hljs-built_in">this</span>.gameResult(ResultType.WIN)<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-built_in">this</span>.gameResult(ResultType.LOSE)<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState == GameState.GAME) &#123;<br>                    <span class="hljs-built_in">this</span>.turnLabel.string = <span class="hljs-built_in">this</span>.room.sessionId === state.currentTurn ? <span class="hljs-string">&#x27;你的回合&#x27;</span> : <span class="hljs-string">&#x27;对手回合&#x27;</span><br>                &#125;<br>                <span class="hljs-comment">// 棋局</span><br>                <span class="hljs-built_in">this</span>.boardNode.children.forEach(<span class="hljs-function">(<span class="hljs-params">node: cc.Node, i: <span class="hljs-built_in">number</span></span>) =&gt;</span> &#123;<br>                    <span class="hljs-keyword">let</span> chess = node.getComponent(FiveChess)<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.gameState == GameState.GAME &amp;&amp; chess.getCurIndex() == <span class="hljs-number">0</span> &amp;&amp; state.board[i] != <span class="hljs-number">0</span>) &#123;<br>                        <span class="hljs-built_in">this</span>.changeTurn()<br>                    &#125;<br>                    chess.setIcon(state.board[i])<br>                &#125;)<br>            &#125;)<br>        &#125;) <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">startGame</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.aiButton.node.active = <span class="hljs-built_in">this</span>.useAi<br>        <span class="hljs-built_in">this</span>.gameState = GameState.GAME<br>        <span class="hljs-built_in">this</span>.matchingLayer.active = <span class="hljs-literal">false</span><br>        <span class="hljs-built_in">this</span>.changeTurn()<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">gameResult</span>(<span class="hljs-params"><span class="hljs-keyword">type</span>: ResultType</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gameState = GameState.RESULT<br>        <span class="hljs-built_in">this</span>.matchBtn.node.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.resultLayer.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.nameEditBox.node.active = <span class="hljs-literal">true</span><br>        <span class="hljs-built_in">this</span>.aiButton.node.active = <span class="hljs-literal">false</span><br>        <span class="hljs-built_in">this</span>.yourName.string = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-built_in">this</span>.otherName.string = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-built_in">this</span>.playerMap.clear()<br>        <span class="hljs-keyword">switch</span>(<span class="hljs-keyword">type</span>) &#123;<br>            <span class="hljs-keyword">case</span> ResultType.WIN: &#123;<br>                <span class="hljs-built_in">this</span>.resultLabel.string = <span class="hljs-string">&#x27;赢就是这样简单&#x27;</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> ResultType.LOSE: &#123;<br>                <span class="hljs-built_in">this</span>.resultLabel.string = <span class="hljs-string">&#x27;失败也是一种进步&#x27;</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> ResultType.DRAW: &#123;<br>                <span class="hljs-built_in">this</span>.resultLabel.string = <span class="hljs-string">&#x27;和棋是一种态度&#x27;</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.turnLabel.string = <span class="hljs-string">&#x27;未知&#x27;</span><br>        <span class="hljs-built_in">this</span>.timeLabel.string = <span class="hljs-string">&#x27;0&#x27;</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.turnTimer) &#123;<br>            <span class="hljs-built_in">clearInterval</span>(<span class="hljs-built_in">this</span>.turnTimer)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">changeTurn</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.time = <span class="hljs-number">10</span><br>        <span class="hljs-built_in">this</span>.timeLabel.string = <span class="hljs-built_in">this</span>.time + <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.turnTimer) &#123;<br>            <span class="hljs-built_in">clearInterval</span>(<span class="hljs-built_in">this</span>.turnTimer)<br>        &#125;<br>        <span class="hljs-built_in">this</span>.turnTimer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.time--<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.time &lt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-built_in">this</span>.time = <span class="hljs-number">0</span><br>            &#125;<br>            <span class="hljs-built_in">this</span>.timeLabel.string = <span class="hljs-built_in">this</span>.time + <span class="hljs-string">&#x27;&#x27;</span><br>        &#125;, <span class="hljs-number">1000</span>)<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>FiveChess.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FiveChess</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>([cc.SpriteFrame])<br>    <span class="hljs-attr">chessIcons</span>: cc.SpriteFrame[] = []<br><br>    <span class="hljs-meta">@property</span>(cc.Sprite)<br>    <span class="hljs-attr">icon</span>: cc.Sprite = <span class="hljs-literal">null</span><br><br>    <span class="hljs-attr">curIndex</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><br>    <span class="hljs-function"><span class="hljs-title">setIcon</span>(<span class="hljs-params">id: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">switch</span>(id) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>: &#123;<br>                <span class="hljs-built_in">this</span>.icon.spriteFrame = <span class="hljs-literal">null</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>: &#123;<br>                <span class="hljs-built_in">this</span>.icon.spriteFrame = <span class="hljs-built_in">this</span>.chessIcons[<span class="hljs-number">1</span>]<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>: &#123;<br>                <span class="hljs-built_in">this</span>.icon.spriteFrame = <span class="hljs-built_in">this</span>.chessIcons[<span class="hljs-number">0</span>]<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.curIndex = id<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">getCurIndex</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.curIndex<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CocosCreator</tag>
      
      <tag>OX棋</tag>
      
      <tag>五子棋</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个基础的编辑器背板</title>
    <link href="/posts/82d8abdf/"/>
    <url>/posts/82d8abdf/</url>
    
    <content type="html"><![CDATA[<h3 id="2D图形编辑器的基础背景板"><a href="#2D图形编辑器的基础背景板" class="headerlink" title="2D图形编辑器的基础背景板"></a>2D图形编辑器的基础背景板</h3><p><img src="/images/%E4%B8%80%E4%B8%AA%E5%9F%BA%E7%A1%80%E8%83%8C%E6%99%AF/pic1.jpg"></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>design<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">text-align</span>: center;</span><br><span class="css">            <span class="hljs-attribute">font-family</span>: monospace;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-tag">canvas</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">background-color</span>: black;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;asteroids&quot;</span> <span class="hljs-attr">width</span> = <span class="hljs-string">&quot;800&quot;</span> <span class="hljs-attr">height</span> = <span class="hljs-string">&quot;800&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">let</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;asteroids&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">let</span> ctx = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);</span><br><span class="javascript">        drawGrid(ctx, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>)</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">drawGrid</span>(<span class="hljs-params">ctx, minor, major, stroke, fill</span>) </span>&#123;</span><br><span class="javascript">            minor = minor || <span class="hljs-number">10</span>;</span><br><span class="javascript">            major = major || minor * <span class="hljs-number">5</span>;</span><br><span class="javascript">            stroke = stroke || <span class="hljs-string">&#x27;#00FF00&#x27;</span>;</span><br><span class="javascript">            fill = fill || <span class="hljs-string">&#x27;#009900&#x27;</span>;</span><br><span class="javascript">            ctx.save();</span><br><span class="javascript">            ctx.strokeStyle = stroke;</span><br><span class="javascript">            ctx.fillStyle = fill;</span><br><span class="javascript">            <span class="hljs-keyword">let</span> width = ctx.canvas.width;</span><br><span class="javascript">            <span class="hljs-keyword">let</span> height = ctx.canvas.height;</span><br><span class="javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>; x &lt; width; x += minor) &#123;</span><br><span class="javascript">                ctx.beginPath();</span><br><span class="javascript">                ctx.strokeStyle = <span class="hljs-string">&#x27;#00FF00&#x27;</span>;</span><br><span class="javascript">                ctx.moveTo(x, <span class="hljs-number">0</span>);</span><br><span class="javascript">                ctx.lineTo(x, height);</span><br><span class="javascript">                ctx.lineWidth = (x % major == <span class="hljs-number">0</span>) ? <span class="hljs-number">0.5</span> : <span class="hljs-number">0.25</span>;</span><br><span class="javascript">                ctx.stroke();</span><br><span class="javascript">                <span class="hljs-keyword">if</span>(x % major == <span class="hljs-number">0</span> ) &#123;</span><br><span class="javascript">                    ctx.fillText(x, x, <span class="hljs-number">10</span>);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> y = <span class="hljs-number">0</span>; y &lt; height; y += minor) &#123;</span><br><span class="javascript">                ctx.beginPath();</span><br><span class="javascript">                ctx.moveTo(<span class="hljs-number">0</span>, y);</span><br><span class="javascript">                ctx.lineTo(width, y);</span><br><span class="javascript">                ctx.lineWidth = (y % major == <span class="hljs-number">0</span>) ? <span class="hljs-number">0.5</span> : <span class="hljs-number">0.25</span>;</span><br><span class="javascript">                ctx.stroke();</span><br><span class="javascript">                <span class="hljs-keyword">if</span>(y % major == <span class="hljs-number">0</span> ) &#123;</span><br><span class="javascript">                    ctx.fillText(y, <span class="hljs-number">0</span>, y + <span class="hljs-number">10</span>);</span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>editor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator中的红点系统</title>
    <link href="/posts/961a8744/"/>
    <url>/posts/961a8744/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/redpoint/111.gif" alt="redpoint"></p><p><strong>游戏中会有许多操作的按钮需要有提示，引导用户点击，实现游戏内的操作</strong></p><h2 id="红点的类"><a href="#红点的类" class="headerlink" title="红点的类"></a>红点的类</h2><ul><li>使用枚举的选择框来确定红点</li><li>挂载在红点的节点</li><li>节点下需要挂载一个用来作为红点的icon</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; RedPointKey, RedPointCalKey, RED_POINT_MESSAGE &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./RedPointEnum&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; RedPointControl &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./RedPointControl&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RedPoint</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br>    <span class="hljs-comment">// 红点条件key值</span><br>    <span class="hljs-meta">@property</span>(&#123;<span class="hljs-attr">type</span>: [cc.Enum(RedPointKey)], <span class="hljs-attr">tooltip</span>:<span class="hljs-string">&quot;红点条件key值&quot;</span>&#125;)<br>    <span class="hljs-keyword">public</span> keyArr:<span class="hljs-built_in">Array</span>&lt;RedPointKey&gt; = []<br><br>    <span class="hljs-comment">// 红点计算key值</span><br>    <span class="hljs-meta">@property</span>(&#123;<span class="hljs-attr">type</span>: [cc.Enum(RedPointCalKey)], <span class="hljs-attr">tooltip</span>:<span class="hljs-string">&quot;红点计算key值&quot;</span>&#125;)<br>    <span class="hljs-keyword">public</span> CalKeyArr: <span class="hljs-built_in">Array</span>&lt;RedPointCalKey&gt; = []<br><br>    <span class="hljs-comment">// 红点图片</span><br>    <span class="hljs-keyword">private</span> redSprite:cc.Node = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-function"><span class="hljs-title">onLoad</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.redSprite = <span class="hljs-built_in">this</span>.node.getChildByName(<span class="hljs-string">&#x27;redSprite&#x27;</span>)<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">this</span>.redSprite) &#123;<br>            <span class="hljs-built_in">this</span>.redSprite = <span class="hljs-built_in">this</span>.node<br>        &#125;<br>        <span class="hljs-comment">// 绑定监听</span><br>        cc.director.on(RED_POINT_MESSAGE, <span class="hljs-function">(<span class="hljs-params">calKey: RedPointCalKey</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> v <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.CalKeyArr) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.CalKeyArr[v] == calKey) &#123;<br>                    <span class="hljs-built_in">this</span>.updateUI()<br>                    <span class="hljs-keyword">return</span><br>                &#125;<br>            &#125;<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-comment">// 当界面的红点数据已经存在的时候，进入界面使用红点数据</span><br>    <span class="hljs-function"><span class="hljs-title">onEnable</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.updateUI()<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">updateUI</span>(<span class="hljs-params"></span>)</span> &#123;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> v <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.keyArr) &#123;<br>            <span class="hljs-keyword">let</span> redKey = <span class="hljs-built_in">this</span>.keyArr[v]<br>            <span class="hljs-keyword">let</span> isShow = RedPointControl.getInstance().isShow(redKey)<br>            <span class="hljs-keyword">if</span> (isShow) &#123;<br>                <span class="hljs-built_in">this</span>.redSprite.active = <span class="hljs-literal">true</span><br>                <span class="hljs-keyword">return</span><br>            &#125;<br>        &#125;<br><br>        <span class="hljs-built_in">this</span>.redSprite.active = <span class="hljs-literal">false</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="红点的枚举类"><a href="#红点的枚举类" class="headerlink" title="红点的枚举类"></a>红点的枚举类</h2><ul><li>有新的红点位置需要在RedPointKey中注册</li><li>然后定义RedPointCalKey计算相关的一系列红点</li><li>一个PointKey对应一个红点</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 红点的key</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@enum <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> RedPointKey &#123;<br>    MIN = <span class="hljs-number">0</span>,<br>    k_BUTTON_1,<br>    k_BUTTON_2,<br>    k_BUTTON_3<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 红点的计算的key</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@enum <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> RedPointCalKey &#123;<br>    MIN = <span class="hljs-number">0</span>,<br>    ck_TEST_BUTTON<br>&#125;<br><br><span class="hljs-comment">// 红点的消息</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">let</span> RED_POINT_MESSAGE = <span class="hljs-string">&#x27;RED_POINT_MESSAGE&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="红点的控制类"><a href="#红点的控制类" class="headerlink" title="红点的控制类"></a>红点的控制类</h2><ul><li>用来计算红点的显示</li><li>存储红点的信息</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs ts"><br><span class="hljs-keyword">import</span> &#123; RedPointKey, RedPointCalKey, RED_POINT_MESSAGE &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./RedPointEnum&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; GameData &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../script/util/GameData&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RedPointControl</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> _instance: RedPointControl<br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;&#125;<br>    <span class="hljs-keyword">static</span> getInstance() : RedPointControl &#123;<br>        <span class="hljs-keyword">if</span> (!RedPointControl._instance) &#123;<br>            RedPointControl._instance = <span class="hljs-keyword">new</span> RedPointControl()<br>        &#125;<br>        <span class="hljs-keyword">return</span> RedPointControl._instance<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> pointData: <span class="hljs-built_in">Map</span>&lt;RedPointKey, <span class="hljs-built_in">boolean</span>&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>&lt;RedPointKey, <span class="hljs-built_in">boolean</span>&gt;()<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前红点是否显示</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;RedPointKey&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">RedPointControl</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> isShow(key: RedPointKey) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.pointData.get(key)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置当前的红点数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;RedPointKey&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;boolean&#125;</span> <span class="hljs-variable">isShow</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">RedPointControl</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">setPointData</span>(<span class="hljs-params">key: RedPointKey, isShow: <span class="hljs-built_in">boolean</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.pointData.set(key, isShow)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 计算红点的方法类</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;RedPointCalKey&#125;</span> <span class="hljs-variable">calKey</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">RedPointControl</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">cal</span>(<span class="hljs-params">calKey: RedPointCalKey</span>)</span> &#123;<br>        <span class="hljs-keyword">switch</span>(calKey) &#123;<br>            <span class="hljs-keyword">case</span> RedPointCalKey.ck_TEST_BUTTON: &#123;<br>                <span class="hljs-built_in">this</span>.setPointData(RedPointKey.k_BUTTON_1, GameData.getInstance().getFlag())<br>                <span class="hljs-built_in">this</span>.setPointData(RedPointKey.k_BUTTON_2, GameData.getInstance().getFlag2())<br>                <span class="hljs-built_in">this</span>.setPointData(RedPointKey.k_BUTTON_3, <span class="hljs-literal">true</span>)<br>            &#125;<br>        &#125;<br><br>        cc.director.emit(RED_POINT_MESSAGE, calKey)<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="数据更新"><a href="#数据更新" class="headerlink" title="数据更新"></a>数据更新</h2><ul><li>在游戏内数据有更新的时候,通过对应的计算的key计算红点数据</li><li>不同的数据使用不同的key计算</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">RedPointControl.getInstance().cal(RedPointCalKey.ck_TEST_BUTTON)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CocosCreator中的红点系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript排序实验室</title>
    <link href="/posts/c8b1d873/"/>
    <url>/posts/c8b1d873/</url>
    
    <content type="html"><![CDATA[<h2 id="BubbleSort"><a href="#BubbleSort" class="headerlink" title="BubbleSort"></a>BubbleSort</h2><ul><li>冒泡排序</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 冒泡排序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span> <span class="hljs-variable">array</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">BubbleSort</span>(<span class="hljs-params">array: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt;</span>) : <span class="hljs-title">Array</span>&lt;<span class="hljs-title">number</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">let</span> retArray = [].concat(array)<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, n = retArray.length; i &lt; n; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; n  - i - <span class="hljs-number">1</span>; j++) &#123;<br>            <span class="hljs-keyword">if</span> (retArray[j] &gt; retArray[j + <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-keyword">let</span> temp = retArray[j]<br>                retArray[j] = retArray[j + <span class="hljs-number">1</span>]<br>                retArray[j + <span class="hljs-number">1</span>] = temp<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> retArray<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ChooseSort"><a href="#ChooseSort" class="headerlink" title="ChooseSort"></a>ChooseSort</h2><ul><li>选择排序</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 选择排序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span> <span class="hljs-variable">array</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ChooseSort</span>(<span class="hljs-params">array: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt;</span>) : <span class="hljs-title">Array</span>&lt;<span class="hljs-title">number</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">let</span> retArray = [].concat(array)<br>    <span class="hljs-keyword">let</span> min = <span class="hljs-number">0</span>, key = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, n = retArray.length; i &lt; n; i++) &#123;<br>        min = retArray[i]<br>        key = i<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i + <span class="hljs-number">1</span>; j &lt; n; j++) &#123;<br>            <span class="hljs-keyword">if</span> (min &gt; retArray[j]) &#123;<br>                key = j<br>                min = retArray[j]<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (key != i) &#123;<br>            <span class="hljs-keyword">let</span> temp = retArray[i]<br>            retArray[i] = retArray[key]<br>            retArray[key] = temp<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> retArray<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="InsertSort"><a href="#InsertSort" class="headerlink" title="InsertSort"></a>InsertSort</h2><ul><li>插入排序</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 插入排序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span> <span class="hljs-variable">array</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">InsertSort</span>(<span class="hljs-params">array: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt;</span>) : <span class="hljs-title">Array</span>&lt;<span class="hljs-title">number</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">let</span> retArray = [].concat(array)<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>, n = retArray.length; i &lt; n; i++ ) &#123;<br>        <span class="hljs-keyword">let</span> temp = retArray[i]<br>        <span class="hljs-keyword">let</span> j = i<br>        <span class="hljs-keyword">while</span>(j &gt; <span class="hljs-number">0</span> &amp;&amp; retArray[j - <span class="hljs-number">1</span>] &gt; temp) &#123;<br>            retArray[j] = retArray[j - <span class="hljs-number">1</span>]<br>            j--<br>        &#125;<br>        retArray[j] = temp<br>    &#125;<br>    <span class="hljs-keyword">return</span> retArray<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ShellSort"><a href="#ShellSort" class="headerlink" title="ShellSort"></a>ShellSort</h2><ul><li>希尔排序</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 希尔排序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span> <span class="hljs-variable">array</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ShellSort</span>(<span class="hljs-params">array: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt;</span>) : <span class="hljs-title">Array</span>&lt;<span class="hljs-title">number</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">let</span> retArray = [].concat(array)<br>    <span class="hljs-keyword">let</span> n = retArray.length<br>    <span class="hljs-keyword">let</span> gap = ~~(n / <span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">while</span> (gap &gt;= <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = gap; i &lt; n; i++) &#123;<br>            <span class="hljs-keyword">let</span> temp = retArray[i]<br>            <span class="hljs-keyword">let</span> j = i<br>            <span class="hljs-keyword">while</span>(j &gt; gap - <span class="hljs-number">1</span> &amp;&amp; retArray[j - gap] &gt; temp) &#123;<br>                retArray[j] = retArray[j - gap]<br>                j -= gap<br>            &#125;<br>            retArray[j] = temp<br>        &#125;<br>        gap = ~~(gap / <span class="hljs-number">2</span>)<br>    &#125;<br>    <span class="hljs-keyword">return</span> retArray<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="QuickSort"><a href="#QuickSort" class="headerlink" title="QuickSort"></a>QuickSort</h2><ul><li>快速排序</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 快速排序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span> <span class="hljs-variable">array</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;Array&lt;number&gt;&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">QuickSort</span>(<span class="hljs-params">array: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">number</span>&gt;</span>) : <span class="hljs-title">Array</span>&lt;<span class="hljs-title">number</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">let</span> retArray = [].concat(array)<br>    <span class="hljs-keyword">let</span> n = retArray.length<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 快速排序的递归方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">left</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">right</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">quick</span>(<span class="hljs-params">begin: <span class="hljs-built_in">number</span>, end: <span class="hljs-built_in">number</span></span>) </span>&#123;<br><br>        <span class="hljs-comment">//递归出口</span><br>        <span class="hljs-keyword">if</span> (begin &gt;= end) &#123;<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> l = begin <span class="hljs-comment">// 左指针</span><br>        <span class="hljs-keyword">let</span> r = end <span class="hljs-comment">// 右指针</span><br>        <span class="hljs-keyword">let</span> temp = retArray[l] <span class="hljs-comment">// 基准数，这里取数组第一个数</span><br>        <span class="hljs-comment">// 左右指针相遇的时候退出扫描循环</span><br>        <span class="hljs-keyword">while</span>(l &lt; r) &#123;<br>            <span class="hljs-comment">// 右指针从右向左扫描，碰到第一个小于基准数的时候停住</span><br>            <span class="hljs-keyword">while</span>(l &lt; r &amp;&amp; retArray[r] &gt;= temp) &#123;<br>                r--<br>            &#125;<br>            <span class="hljs-comment">// 左指针从左向右扫描，碰到第一个大于基准数的时候停住</span><br>            <span class="hljs-keyword">while</span>(l &lt; r &amp;&amp; retArray[l] &lt;= temp) &#123;<br>                l++<br>            &#125;<br>            <span class="hljs-comment">// 交换左右指针所停位置的数</span><br>            [retArray[l], retArray[r]] = [retArray[r], retArray[l]]<br>        &#125;<br>        <span class="hljs-comment">// 最后交换基准数与指针相遇位置的数</span><br>        [retArray[begin], retArray[l]] = [retArray[l], retArray[begin]]<br>        <span class="hljs-comment">// 递归处理左右数组</span><br>        quick(begin, l - <span class="hljs-number">1</span>)<br>        quick(l + <span class="hljs-number">1</span>, end)<br>    &#125;<br>    quick(<span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">return</span> retArray<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="时间测试"><a href="#时间测试" class="headerlink" title="时间测试"></a>时间测试</h2><ul><li>使用含5000个随机整数的数组测试排序效率</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> testArr = []<br><span class="hljs-keyword">let</span> len = <span class="hljs-number">5000</span><br><span class="hljs-keyword">let</span> time = <span class="hljs-built_in">Date</span>.now()<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>    testArr.push(~~(<span class="hljs-built_in">Math</span>.random() * len))<br>&#125;<br><span class="hljs-comment">// 答案</span><br><span class="hljs-keyword">let</span> resultArr = testArr.sort(<span class="hljs-function">(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span></span>) =&gt;</span> a - b)<br><br><span class="hljs-comment">// 冒泡排序</span><br>time = <span class="hljs-built_in">Date</span>.now()<br><span class="hljs-keyword">let</span> ans1 = BubbleSort(testArr)<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">JSON</span>.stringify(resultArr) === <span class="hljs-built_in">JSON</span>.stringify(ans1)) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;BubbleSort Cost&#x27;</span>, <span class="hljs-built_in">Date</span>.now() - time, <span class="hljs-string">&#x27;ms&#x27;</span>)<br>&#125;<br><br><span class="hljs-comment">// 选择排序</span><br>time = <span class="hljs-built_in">Date</span>.now()<br><span class="hljs-keyword">let</span> ans2 = ChooseSort(testArr)<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">JSON</span>.stringify(resultArr) === <span class="hljs-built_in">JSON</span>.stringify(ans2)) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;ChooseSort Cost&#x27;</span>, <span class="hljs-built_in">Date</span>.now() - time, <span class="hljs-string">&#x27;ms&#x27;</span>)<br>&#125;<br><br><span class="hljs-comment">// 插入排序</span><br>time = <span class="hljs-built_in">Date</span>.now()<br><span class="hljs-keyword">let</span> ans3 = InsertSort(testArr)<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">JSON</span>.stringify(resultArr) === <span class="hljs-built_in">JSON</span>.stringify(ans3)) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;InsertSort Cost&#x27;</span>, <span class="hljs-built_in">Date</span>.now() - time, <span class="hljs-string">&#x27;ms&#x27;</span>)<br>&#125;<br><br><span class="hljs-comment">// 希尔排序</span><br>time = <span class="hljs-built_in">Date</span>.now()<br><span class="hljs-keyword">let</span> ans4 = ShellSort(testArr)<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">JSON</span>.stringify(resultArr) === <span class="hljs-built_in">JSON</span>.stringify(ans4)) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;ShellSort Cost&#x27;</span>, <span class="hljs-built_in">Date</span>.now() - time, <span class="hljs-string">&#x27;ms&#x27;</span>)<br>&#125;<br><br><span class="hljs-comment">// 快速排序</span><br>time = <span class="hljs-built_in">Date</span>.now()<br><span class="hljs-keyword">let</span> ans5 = QuickSort(testArr)<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">JSON</span>.stringify(resultArr) === <span class="hljs-built_in">JSON</span>.stringify(ans5)) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;QuickSort Cost&#x27;</span>, <span class="hljs-built_in">Date</span>.now() - time, <span class="hljs-string">&#x27;ms&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript排序实验室</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript数据结构实验室</title>
    <link href="/posts/f96a5f3/"/>
    <url>/posts/f96a5f3/</url>
    
    <content type="html"><![CDATA[<h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><ul><li>栈是一个最基础的数据结构</li><li>先进后出</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 栈</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Stack</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 使用数组作为数据源</span><br>    <span class="hljs-keyword">private</span> _data: <span class="hljs-built_in">Array</span>&lt;T&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;T&gt;()<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">push</span>(<span class="hljs-params">element: T</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._data.push(element)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查看栈顶数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    peek() : T &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._data.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data[<span class="hljs-built_in">this</span>._data.length - <span class="hljs-number">1</span>]<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查看并弹出栈顶数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    pop() : T &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.pop()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断栈是否为空</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    isEmpty() : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.length == <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清除栈的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">clean</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;T&gt;()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回栈的长度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    size() : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.length<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 栈的打印</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Stack</span></span></span><br><span class="hljs-comment">     */</span><br>    toString() : <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.toString()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><ul><li>队列是一个最基础的数据结构</li><li>先进先出</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 队列</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Queue</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 使用数组作为数据源</span><br>    <span class="hljs-keyword">private</span> _data: <span class="hljs-built_in">Array</span>&lt;T&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;T&gt;()<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 入队</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">enqueue</span>(<span class="hljs-params">element: T</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._data.push(element)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 出队</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment">     */</span><br>    dequeue() : T &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.shift()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查看队伍的第一个</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment">     */</span><br>    front() : T &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._data.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">this</span>._data[<span class="hljs-number">0</span>]<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否为空队</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment">     */</span><br>    isEmpty() : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.length == <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队列的长度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment">     */</span><br>    size() : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.length<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队列的打印</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Queue</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">toString</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.toString()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="PriorityQueue"><a href="#PriorityQueue" class="headerlink" title="PriorityQueue"></a>PriorityQueue</h2><ul><li>带优先级的队列，优先级越大越靠前</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 队列的数据节点, 带优先级</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">QueueElement</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">QueueElement</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> element: T, <span class="hljs-keyword">public</span> priority: <span class="hljs-built_in">number</span></span>)</span> &#123;&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 优先级队列</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PriorityQueue</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 优先级队列的数据源</span><br>    <span class="hljs-keyword">private</span> _data: <span class="hljs-built_in">Array</span>&lt;QueueElement&lt;T&gt;&gt; = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>&lt;QueueElement&lt;T&gt;&gt;()<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通过优先级入队,越大越优先</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> </span>[priority=0]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">enqueue</span>(<span class="hljs-params">element: T, priority: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> added = <span class="hljs-literal">false</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>._data.length; i++) &#123;<br>            <span class="hljs-keyword">if</span> (priority &lt;= <span class="hljs-built_in">this</span>._data[i].priority) &#123;<br>                <span class="hljs-built_in">this</span>._data.splice(i, <span class="hljs-number">0</span>, <span class="hljs-keyword">new</span> QueueElement(element, priority))<br>                added = <span class="hljs-literal">true</span><br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!added) &#123;<br>            <span class="hljs-built_in">this</span>._data.push(<span class="hljs-keyword">new</span> QueueElement(element, priority))<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查看队首位置</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment">     */</span><br>    front() : T &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._data.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data[<span class="hljs-built_in">this</span>._data.length - <span class="hljs-number">1</span>].element<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 出队</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment">     */</span><br>    dequeue() : T &#123;<br>        <span class="hljs-keyword">let</span> queueElement: QueueElement&lt;T&gt; = <span class="hljs-built_in">this</span>._data.pop()<br>        <span class="hljs-keyword">if</span> (queueElement) &#123;<br>            <span class="hljs-keyword">return</span> queueElement.element<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队列是否为空</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment">     */</span><br>    isEmpty() : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.length == <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队列的数量</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">size</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.length<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 队列的打印</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PriorityQueue</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">toString</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._data.toString()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h2><ul><li>单向链表</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 链表的节点</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">LinkedNode</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LinkedNode</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> element: T, <span class="hljs-keyword">public</span> next: LinkedNode&lt;T&gt; = <span class="hljs-literal">null</span></span>)</span> &#123;&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 单向链表</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LinkedList</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 链表的表头</span><br>    <span class="hljs-keyword">private</span> _head: LinkedNode&lt;T&gt; = <span class="hljs-literal">null</span><br>    <span class="hljs-comment">// 链表的长度</span><br>    <span class="hljs-keyword">private</span> _length: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 在链表尾部添加元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">append</span>(<span class="hljs-params">element: T</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._length == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">this</span>._head = <span class="hljs-keyword">new</span> LinkedNode&lt;T&gt;(element)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>            <span class="hljs-keyword">while</span>(curNode.next) &#123;<br>                curNode = curNode.next<br>            &#125;<br>            curNode.next = <span class="hljs-keyword">new</span> LinkedNode&lt;T&gt;(element)<br>        &#125;<br>        <span class="hljs-built_in">this</span>._length++<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 在链表中插入元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    insert(position: <span class="hljs-built_in">number</span>, <span class="hljs-attr">element</span>: T) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt; <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> newNode = <span class="hljs-keyword">new</span> LinkedNode&lt;T&gt;(element)<br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-number">0</span>) &#123;<br>            newNode.next = curNode<br>            <span class="hljs-built_in">this</span>._head = newNode<br>            <span class="hljs-built_in">this</span>._length++<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> preNode = <span class="hljs-literal">null</span><br>        <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>            preNode = curNode<br>            curNode =curNode.next<br>        &#125;<br>        preNode.next = newNode<br>        newNode.next = curNode<br>        <span class="hljs-built_in">this</span>._length++<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取指定位置的元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    get(position: <span class="hljs-built_in">number</span>) : T &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt;= <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>            curNode = curNode.next<br>        &#125;<br>        <span class="hljs-keyword">return</span> curNode.element<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获得元素的下标</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    indexOf(element: T) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(curNode) &#123;<br>            <span class="hljs-keyword">if</span> (curNode.element == element) &#123;<br>                <span class="hljs-keyword">return</span> index<br>            &#125;<br>            index++<br>            curNode = curNode.next<br>        &#125;<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改指定下标的元素内容</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    update(position: <span class="hljs-built_in">number</span>, <span class="hljs-attr">element</span>: T) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt;= <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>            curNode = curNode.next<br>        &#125;<br>        curNode.element = element<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    remove(element: T) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.removeAt(<span class="hljs-built_in">this</span>.indexOf(element))) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除指定下标的元素</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    removeAt(position: <span class="hljs-built_in">number</span>) : T &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt;= <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">this</span>._head = <span class="hljs-built_in">this</span>._head.next<br>            <span class="hljs-built_in">this</span>._length--<br>            <span class="hljs-keyword">return</span> curNode.element<br>        &#125;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> preNode = <span class="hljs-literal">null</span><br>        <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>            preNode = curNode<br>            curNode = curNode.next<br>        &#125;<br>        preNode.next = curNode.next<br>        <span class="hljs-built_in">this</span>._length--<br>        <span class="hljs-keyword">return</span> curNode.element<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断是否为空</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">isEmpty</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._length == <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 链表的打印</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">toString</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">let</span> ret = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> (curNode) &#123;<br>            ret += curNode.element.toString() + <span class="hljs-string">&#x27;-&gt;&#x27;</span><br>            curNode = curNode.next<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 链表的长度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">LinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">size</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._length<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="DoublyLinkedList"><a href="#DoublyLinkedList" class="headerlink" title="DoublyLinkedList"></a>DoublyLinkedList</h2><ul><li>双向链表</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 双向链表的节点</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">DoublyLinkedNode</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DoublyLinkedNode</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> element: T, <span class="hljs-keyword">public</span> previous: DoublyLinkedNode&lt;T&gt; = <span class="hljs-literal">null</span>, <span class="hljs-keyword">public</span> next: DoublyLinkedNode&lt;T&gt; = <span class="hljs-literal">null</span></span>)</span> &#123;&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 双向链表</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DoublyLinkedList</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 头节点</span><br>    <span class="hljs-keyword">private</span> _head: DoublyLinkedNode&lt;T&gt; = <span class="hljs-literal">null</span><br>    <span class="hljs-comment">// 尾节点</span><br>    <span class="hljs-keyword">private</span> _tail: DoublyLinkedNode&lt;T&gt; = <span class="hljs-literal">null</span><br>    <span class="hljs-comment">// 链表的长度</span><br>    <span class="hljs-keyword">private</span> _length = <span class="hljs-number">0</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">append</span>(<span class="hljs-params">element: T</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> newNode = <span class="hljs-keyword">new</span> DoublyLinkedNode(element)<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._length == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">this</span>._head = newNode<br>            <span class="hljs-built_in">this</span>._tail = newNode<br>            <span class="hljs-built_in">this</span>._length++<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-built_in">this</span>._tail.next = newNode<br>        newNode.previous = <span class="hljs-built_in">this</span>._tail<br>        <span class="hljs-built_in">this</span>._tail = newNode<br>        <span class="hljs-built_in">this</span>._length++<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定位置插入数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    insert(position: <span class="hljs-built_in">number</span>, <span class="hljs-attr">element</span>: T) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt; <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> newNode = <span class="hljs-keyword">new</span> DoublyLinkedNode(element)<br>        <span class="hljs-comment">// 当前的数组为空</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._length == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">this</span>._head = newNode<br>            <span class="hljs-built_in">this</span>._tail = newNode<br>            <span class="hljs-built_in">this</span>._length++<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-comment">// 插入到最前面</span><br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-number">0</span>) &#123;<br>            newNode.next = <span class="hljs-built_in">this</span>._head<br>            <span class="hljs-built_in">this</span>._head.previous = newNode<br>            <span class="hljs-built_in">this</span>._head = newNode<br>            <span class="hljs-built_in">this</span>._length++<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-comment">// 插入到最后</span><br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-built_in">this</span>._tail.next = newNode<br>            newNode.previous = <span class="hljs-built_in">this</span>._tail<br>            <span class="hljs-built_in">this</span>._tail = newNode<br>            <span class="hljs-built_in">this</span>._length++<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-comment">// TODO 实现二分插入 先判断插入位置 然后确定从头或者从尾开始插入</span><br>        <span class="hljs-comment">// 从前面插入</span><br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>            curNode = curNode.next<br>        &#125;<br>        curNode.previous.next = newNode<br>        newNode.previous = curNode.previous<br>        curNode.previous = newNode<br>        newNode.next = curNode<br>        <span class="hljs-built_in">this</span>._length++<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    remove(element: T) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.removeAt(<span class="hljs-built_in">this</span>.indexOf(element))) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除指定节点数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    removeAt(position: <span class="hljs-built_in">number</span>) : T &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt;= <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-literal">null</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._length == <span class="hljs-number">1</span>) &#123;<br>            curNode = <span class="hljs-built_in">this</span>._head<br>            <span class="hljs-built_in">this</span>._head = <span class="hljs-literal">null</span><br>            <span class="hljs-built_in">this</span>._tail = <span class="hljs-literal">null</span><br>            <span class="hljs-built_in">this</span>._length--<br>            <span class="hljs-keyword">return</span> curNode.element<br>        &#125;<br>        <span class="hljs-comment">// 删除第一个节点</span><br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-number">0</span>) &#123;<br>            curNode = <span class="hljs-built_in">this</span>._head<br>            <span class="hljs-built_in">this</span>._head = <span class="hljs-built_in">this</span>._head.next<br>            <span class="hljs-built_in">this</span>._head.previous = <span class="hljs-literal">null</span><br>            <span class="hljs-built_in">this</span>._length--<br>            <span class="hljs-keyword">return</span> curNode.element<br>        &#125;<br>        <span class="hljs-comment">// 删除最后一个节点</span><br>        <span class="hljs-keyword">if</span> (position == <span class="hljs-built_in">this</span>._length - <span class="hljs-number">1</span>) &#123;<br>            curNode = <span class="hljs-built_in">this</span>._tail<br>            <span class="hljs-built_in">this</span>._tail = <span class="hljs-built_in">this</span>._tail.previous<br>            <span class="hljs-built_in">this</span>._tail.next = <span class="hljs-literal">null</span><br>            <span class="hljs-keyword">return</span> curNode.element<br>        &#125;<br>        <span class="hljs-comment">// 从前面开始遍历</span><br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span> (index++ &lt; position) &#123;<br>            curNode = curNode.next<br>        &#125;<br>        curNode.previous.next = curNode.next<br>        curNode.next.previous = curNode.previous<br>        <span class="hljs-keyword">return</span> curNode.element<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新指定节点数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    update(position: <span class="hljs-built_in">number</span>, <span class="hljs-attr">element</span>: T) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt;= <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>            curNode = curNode.next<br>        &#125;<br>        curNode.element = element<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回数据的下标</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> <span class="hljs-variable">element</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    indexOf(element: T) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(curNode) &#123;<br>            <span class="hljs-keyword">if</span> (curNode.element == element) &#123;<br>                <span class="hljs-keyword">return</span> index<br>            &#125;<br>            index++<br>            curNode = curNode.next<br>        &#125;<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取指定下标的数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">position</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    get(position: <span class="hljs-built_in">number</span>) : T &#123;<br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-number">0</span> || position &gt;= <span class="hljs-built_in">this</span>._length) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br>        <span class="hljs-comment">// 实现二分读取 先判断读取位置 然后确定从头或者从尾开始读取</span><br>        <span class="hljs-keyword">if</span> (position &lt; <span class="hljs-built_in">this</span>._length / <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">// 从前面读取</span><br>            <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>            <span class="hljs-keyword">while</span>(index++ &lt; position) &#123;<br>                curNode = curNode.next<br>            &#125;<br>            <span class="hljs-keyword">return</span> curNode.element<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 从后面读取</span><br>            <span class="hljs-keyword">let</span> index = <span class="hljs-built_in">this</span>._length - <span class="hljs-number">1</span><br>            <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._tail<br>            <span class="hljs-keyword">while</span>(index-- &gt; position) &#123;<br>                curNode = curNode.previous<br>            &#125;<br>            <span class="hljs-keyword">return</span> curNode.element<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断是否为空</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    isEmpty() : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._length == <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回链表的长度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    size() : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._length<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 从尾开始遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    backwardString() : <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">let</span> ret = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._tail<br>        <span class="hljs-keyword">while</span>(curNode) &#123;<br>            ret += curNode.element + <span class="hljs-string">&#x27;&lt;-&#x27;</span><br>            curNode = curNode.previous<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 从头开始遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    forwardString() : <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">let</span> ret = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">let</span> curNode = <span class="hljs-built_in">this</span>._head<br>        <span class="hljs-keyword">while</span>(curNode) &#123;<br>            ret += curNode.element + <span class="hljs-string">&#x27;-&gt;&#x27;</span><br>            curNode = curNode.next<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 打印链表</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    toString() : <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.backwardString()<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取头数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    getHead() : T &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._head.element<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取尾数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">DoublyLinkedList</span></span></span><br><span class="hljs-comment">     */</span><br>    getTail() : T &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._tail.element<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h2><ul><li>哈希表</li><li>要点是哈希函数的均匀分布</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 哈希表</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">K</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">V</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HashTable</span> &lt;<span class="hljs-title">K</span>, <span class="hljs-title">V</span>&gt;</span>&#123;<br>    <span class="hljs-comment">// 哈希表的数据源</span><br>    <span class="hljs-keyword">private</span> _storage = []<br>    <span class="hljs-comment">// 哈希表的数量</span><br>    <span class="hljs-keyword">private</span> _count = <span class="hljs-number">0</span><br>    <span class="hljs-comment">// 哈希表的限制数量</span><br>    <span class="hljs-keyword">private</span> _limit = <span class="hljs-number">17</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 哈希函数</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">str</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">size</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashMap</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> hash(str: <span class="hljs-built_in">string</span>, <span class="hljs-attr">size</span>: <span class="hljs-built_in">number</span>) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> hashCode = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;<br>            hashCode = <span class="hljs-number">37</span> * hashCode + str.charCodeAt(i)<br>        &#125;<br>        index = hashCode % size<br>        <span class="hljs-keyword">return</span> index<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否是质数</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">num</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> isPrime(num: <span class="hljs-built_in">number</span>) : <span class="hljs-built_in">boolean</span> &#123;<br>        <span class="hljs-keyword">if</span> (num &lt;= <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">2</span>, n = ~~(<span class="hljs-built_in">Math</span>.sqrt(num)); i &lt;= n; i++) &#123;<br>            <span class="hljs-keyword">if</span> (num % i == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取素数</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">num</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> getPrime(num: <span class="hljs-built_in">number</span>) : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">while</span>(!<span class="hljs-built_in">this</span>.isPrime(num)) &#123;<br>            num++<br>        &#125;<br>        <span class="hljs-keyword">return</span> num<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 修改数据大小</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">limit</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">resize</span>(<span class="hljs-params">limit: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> oldStorage = <span class="hljs-built_in">this</span>._storage<br>        <span class="hljs-built_in">this</span>._count = <span class="hljs-number">0</span><br>        <span class="hljs-built_in">this</span>._limit = limit<br>        <span class="hljs-built_in">this</span>._storage = []<br>        oldStorage.forEach(<span class="hljs-function"><span class="hljs-params">bucket</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (bucket) &#123;<br>                bucket.forEach(<span class="hljs-function"><span class="hljs-params">tuple</span> =&gt;</span> &#123;<br>                    <span class="hljs-built_in">this</span>.put(tuple[<span class="hljs-number">0</span>], tuple[<span class="hljs-number">1</span>])<br>                &#125;)<br>            &#125;<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;K&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;V&#125;</span> <span class="hljs-variable">value</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">put</span>(<span class="hljs-params">key: K, value: V</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-built_in">this</span>.hash(key + <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-built_in">this</span>._limit)<br>        <span class="hljs-keyword">let</span> bucket = <span class="hljs-built_in">this</span>._storage[index]<br>        <span class="hljs-keyword">if</span> (!bucket) &#123;<br>            bucket = []<br>            <span class="hljs-built_in">this</span>._storage[index] = bucket<br>        &#125;<br>        <span class="hljs-keyword">let</span> has = bucket.some(<span class="hljs-function"><span class="hljs-params">tuple</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (key + <span class="hljs-string">&#x27;&#x27;</span> === tuple[<span class="hljs-number">0</span>]) &#123;<br>                tuple[<span class="hljs-number">1</span>] = value<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>        &#125;)<br>        <span class="hljs-keyword">if</span> (!has) &#123;<br>            bucket.push([key + <span class="hljs-string">&#x27;&#x27;</span>, value])<br>            <span class="hljs-built_in">this</span>._count++<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._count &gt; <span class="hljs-built_in">this</span>._limit * <span class="hljs-number">0.75</span>) &#123;<br>                <span class="hljs-built_in">this</span>.resize(<span class="hljs-built_in">this</span>.getPrime(<span class="hljs-built_in">this</span>._limit * <span class="hljs-number">2</span>))<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;K&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;V&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    get(key: K) : V &#123;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-built_in">this</span>.hash(key + <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-built_in">this</span>._limit)<br>        <span class="hljs-keyword">let</span> bucket = <span class="hljs-built_in">this</span>._storage[index]<br>        <span class="hljs-keyword">if</span> (!bucket) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; bucket.length; i++) &#123;<br>            <span class="hljs-keyword">let</span> tuple = bucket[i]<br>            <span class="hljs-keyword">if</span> (key + <span class="hljs-string">&#x27;&#x27;</span> === tuple[<span class="hljs-number">0</span>]) &#123;<br>                <span class="hljs-keyword">return</span> tuple[<span class="hljs-number">1</span>]<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;K&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;V&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    remove(key: K) : V &#123;<br>        <span class="hljs-keyword">let</span> index = <span class="hljs-built_in">this</span>.hash(key + <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-built_in">this</span>._limit)<br>        <span class="hljs-keyword">let</span> bucket = <span class="hljs-built_in">this</span>._storage[index]<br>        <span class="hljs-keyword">if</span> (!bucket) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; bucket.length; i++) &#123;<br>            <span class="hljs-keyword">let</span> tuple = bucket[i]<br>            <span class="hljs-keyword">if</span> (key + <span class="hljs-string">&#x27;&#x27;</span> === tuple[<span class="hljs-number">0</span>]) &#123;<br>                bucket.splice(i, <span class="hljs-number">1</span>)<br>                <span class="hljs-built_in">this</span>._count--<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._limit &gt; <span class="hljs-number">17</span> &amp;&amp; <span class="hljs-built_in">this</span>._count &lt; <span class="hljs-built_in">this</span>._limit * <span class="hljs-number">0.25</span>) &#123;<br>                    <span class="hljs-built_in">this</span>.resize(<span class="hljs-built_in">this</span>.getPrime(~~(<span class="hljs-built_in">this</span>._limit / <span class="hljs-number">2</span>)))<br>                &#125;<br>                <span class="hljs-keyword">return</span> tuple[<span class="hljs-number">1</span>]<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 判断是否为空</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">isEmpty</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._count == <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回数据大小</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">HashTable</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">size</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._count<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="BinarySearchTree"><a href="#BinarySearchTree" class="headerlink" title="BinarySearchTree"></a>BinarySearchTree</h2><ul><li>搜索二叉树</li><li>删除是难点 多用到递归</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 二叉树节点</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">TreeNode</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TreeNode</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> key: <span class="hljs-built_in">number</span>, <span class="hljs-keyword">public</span> value: T, <span class="hljs-keyword">public</span> left: TreeNode&lt;T&gt; = <span class="hljs-literal">null</span>, <span class="hljs-keyword">public</span> right: TreeNode&lt;T&gt; = <span class="hljs-literal">null</span></span>)</span> &#123;&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 二叉树</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@template <span class="hljs-variable">T</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BinarySearchTree</span>&lt;<span class="hljs-title">T</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 根节点</span><br>    <span class="hljs-attr">root</span>: TreeNode&lt;T&gt; = <span class="hljs-literal">null</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;T&#125;</span> </span>[value=null]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">insert</span>(<span class="hljs-params">key: <span class="hljs-built_in">number</span>, value: T = <span class="hljs-literal">null</span></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> newNode = <span class="hljs-keyword">new</span> TreeNode&lt;T&gt;(key, value)<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.root == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.root = newNode<br>            <span class="hljs-keyword">return</span><br>        &#125;<br>        <span class="hljs-built_in">this</span>.insertNode(<span class="hljs-built_in">this</span>.root, newNode)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取最小值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    min() : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> node = <span class="hljs-built_in">this</span>.root<br>        <span class="hljs-keyword">while</span>(node.left !== <span class="hljs-literal">null</span>) &#123;<br>            node = node.left<br>        &#125;<br>        <span class="hljs-keyword">return</span> node.key || <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取最大值</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    max() : <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> node = <span class="hljs-built_in">this</span>.root<br>        <span class="hljs-keyword">while</span>(node.right !== <span class="hljs-literal">null</span>) &#123;<br>            node = node.right<br>        &#125;<br>        <span class="hljs-keyword">return</span> node.key || <span class="hljs-number">0</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    search(key: <span class="hljs-built_in">number</span>) : T &#123;<br>        <span class="hljs-keyword">let</span> node = <span class="hljs-built_in">this</span>.searchNode(<span class="hljs-built_in">this</span>.root, key)<br>        <span class="hljs-keyword">return</span> node &amp;&amp; node.value<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;T&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    remove(key: <span class="hljs-built_in">number</span>) : T &#123;<br>        <span class="hljs-keyword">let</span> current = <span class="hljs-built_in">this</span>.root<br>        <span class="hljs-keyword">let</span> parent = <span class="hljs-built_in">this</span>.root<br>        <span class="hljs-keyword">let</span> isLeftChild = <span class="hljs-literal">true</span><br>        <span class="hljs-comment">// 查找要删除的节点</span><br>        <span class="hljs-keyword">while</span>(current.key != key) &#123;<br>            parent = current<br>            <span class="hljs-keyword">if</span> (key &lt; current.key) &#123;<br>                isLeftChild = <span class="hljs-literal">true</span><br>                current = current.left<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                isLeftChild = <span class="hljs-literal">false</span><br>                current = current.right<br>            &#125;<br>            <span class="hljs-keyword">if</span> (current == <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 删除叶子节点</span><br>        <span class="hljs-keyword">if</span> (current.left == <span class="hljs-literal">null</span> &amp;&amp; current.right == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (current == parent) &#123;<br>                <span class="hljs-built_in">this</span>.root = <span class="hljs-literal">null</span><br>                <span class="hljs-keyword">return</span> current.value<br>            &#125;<br>            <span class="hljs-keyword">if</span> (isLeftChild) &#123;<br>                parent.left = <span class="hljs-literal">null</span><br>                <span class="hljs-keyword">return</span> current.value<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                parent.right = <span class="hljs-literal">null</span><br>                <span class="hljs-keyword">return</span> current.value<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 删除有一个子节点</span><br>        <span class="hljs-keyword">if</span> (current.left == <span class="hljs-literal">null</span> || current.right == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (current == parent) &#123;<br>                <span class="hljs-built_in">this</span>.root = current.left || current.right<br>                <span class="hljs-keyword">return</span> current.value<br>            &#125;<br>            <span class="hljs-keyword">if</span> (isLeftChild) &#123;<br>                parent.left = current.left || current.right<br>                <span class="hljs-keyword">return</span> current.value<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                parent.right = current.left || current.right<br>                <span class="hljs-keyword">return</span> current.value<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 删除有两个节点</span><br>        <span class="hljs-keyword">let</span> obj = <span class="hljs-built_in">this</span>.getDelSuccessor(current)<br><br>        <span class="hljs-keyword">if</span> (obj.successor != current.right) &#123;<br>            obj.parent.left = obj.successor.right<br>            obj.successor.right = current.right<br>        &#125;<br>        <span class="hljs-keyword">if</span> (current == parent) &#123;<br>            <span class="hljs-built_in">this</span>.root = obj.successor<br>        &#125;<br>        <span class="hljs-keyword">if</span> (isLeftChild) &#123;<br>            parent.left = obj.successor.left<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            parent.left = obj.successor.right<br>        &#125;<br>        <span class="hljs-keyword">return</span> current.value<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> getDelSuccessor(delNode: TreeNode&lt;T&gt;) : &#123;<span class="hljs-attr">successor</span>: TreeNode&lt;T&gt;, parent: TreeNode&lt;T&gt; &#125; &#123;<br>        <span class="hljs-keyword">let</span> successor = delNode<br>        <span class="hljs-keyword">let</span> parent = delNode<br>        <span class="hljs-keyword">let</span> current = delNode.right<br><br>        <span class="hljs-keyword">while</span>(current != <span class="hljs-literal">null</span>) &#123;<br>            parent = successor<br>            successor = current<br>            current = current.left<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> &#123;<br>            successor, parent<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 先序遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;(key: number) =&gt; void&#125;</span> <span class="hljs-variable">handler</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">preOrderTraversal</span>(<span class="hljs-params">handler: (key: <span class="hljs-built_in">number</span>) =&gt; <span class="hljs-built_in">void</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.preOrderTraversalNode(<span class="hljs-built_in">this</span>.root, handler)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 中序遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;(key: number) =&gt; void&#125;</span> <span class="hljs-variable">handler</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">middleOrderTraversal</span>(<span class="hljs-params">handler: (key: <span class="hljs-built_in">number</span>) =&gt; <span class="hljs-built_in">void</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.middleOrderTraversalNode(<span class="hljs-built_in">this</span>.root, handler)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 后序遍历</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;(key: number) =&gt; void&#125;</span> <span class="hljs-variable">handler</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">postOrderTraversal</span>(<span class="hljs-params">handler: (key: <span class="hljs-built_in">number</span>) =&gt; <span class="hljs-built_in">void</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.postOrderTraversalNode(<span class="hljs-built_in">this</span>.root, handler)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查找节点的递归方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;TreeNode&lt;T&gt;&#125;</span> <span class="hljs-variable">node</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">key</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;TreeNode&lt;T&gt;&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> searchNode(node: TreeNode&lt;T&gt;, key: <span class="hljs-built_in">number</span>) : TreeNode&lt;T&gt; &#123;<br>        <span class="hljs-keyword">if</span> (node === <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (node.key &gt; key) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.searchNode(node.left, key)<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(node.key &lt; key) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.searchNode(node.right, key)<br>        &#125;<br>        <span class="hljs-keyword">return</span> node<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">postOrderTraversalNode</span>(<span class="hljs-params">node: TreeNode&lt;T&gt;, handler: (key: <span class="hljs-built_in">number</span>) =&gt; <span class="hljs-built_in">void</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (node != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.postOrderTraversalNode(node.left, handler)<br>            <span class="hljs-built_in">this</span>.postOrderTraversalNode(node.right, handler)<br>            handler(node.key)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">middleOrderTraversalNode</span>(<span class="hljs-params">node: TreeNode&lt;T&gt;, handler: (key: <span class="hljs-built_in">number</span>) =&gt; <span class="hljs-built_in">void</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (node != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.middleOrderTraversalNode(node.left, handler)<br>            handler(node.key)<br>            <span class="hljs-built_in">this</span>.middleOrderTraversalNode(node.right, handler)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">preOrderTraversalNode</span>(<span class="hljs-params">node: TreeNode&lt;T&gt;, handler: (key: <span class="hljs-built_in">number</span>) =&gt; <span class="hljs-built_in">void</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (node != <span class="hljs-literal">null</span>) &#123;<br>            handler(node.key)<br><br>            <span class="hljs-built_in">this</span>.preOrderTraversalNode(node.left, handler)<br><br>            <span class="hljs-built_in">this</span>.preOrderTraversalNode(node.right, handler)<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入节点的递归方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;TreeNode&lt;T&gt;&#125;</span> <span class="hljs-variable">node</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;TreeNode&lt;T&gt;&#125;</span> <span class="hljs-variable">newNode</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">BinarySearchTree</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">insertNode</span>(<span class="hljs-params">node: TreeNode&lt;T&gt;, newNode: TreeNode&lt;T&gt;</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (newNode.key &lt; node.key) &#123;<br>            <span class="hljs-keyword">if</span> (node.left == <span class="hljs-literal">null</span>) &#123;<br>                node.left = newNode<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.insertNode(node.left, newNode)<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (node.right == <span class="hljs-literal">null</span>) &#123;<br>                node.right = newNode<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.insertNode(node.right, newNode)<br>            &#125;<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TypeScript数据结构实验室</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator的ScrollView优化</title>
    <link href="/posts/921bf6d5/"/>
    <url>/posts/921bf6d5/</url>
    
    <content type="html"><![CDATA[<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/images/CocosCreator%E7%9A%84ScrollView%E4%BC%98%E5%8C%96/xx.gif" alt="截图"></p><h3 id="新建一个预制件"><a href="#新建一个预制件" class="headerlink" title="新建一个预制件"></a>新建一个预制件</h3><p><img src="/images/CocosCreator%E7%9A%84ScrollView%E4%BC%98%E5%8C%96/image1.jpg" alt="prefab"></p><h3 id="预制件代码"><a href="#预制件代码" class="headerlink" title="预制件代码"></a>预制件代码</h3><blockquote><p>Item.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Item</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.Label) label: cc.Label = <span class="hljs-literal">null</span>;<br><br>    index: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><br>    getIndex(): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.index<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">index: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.label.string = <span class="hljs-string">`<span class="hljs-subst">$&#123;index&#125;</span>`</span><br>        <span class="hljs-built_in">this</span>.index = index<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">itemShow</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.node.opacity = <span class="hljs-number">255</span><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">itemHide</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.node.opacity = <span class="hljs-number">0</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="主文件代码"><a href="#主文件代码" class="headerlink" title="主文件代码"></a>主文件代码</h3><blockquote><p>Main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> Item <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./Item&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.ScrollView) scrollView: cc.ScrollView = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Prefab) itemPrefab: cc.Prefab = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.Button) startBtn: cc.Button = <span class="hljs-literal">null</span><br>    <span class="hljs-meta">@property</span>(cc.EditBox) editBox: cc.EditBox = <span class="hljs-literal">null</span><br><br>    <span class="hljs-attr">needItem</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attr">index</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attr">viewRect</span>: cc.Rect = <span class="hljs-literal">null</span><br>    needCulling = <span class="hljs-literal">false</span><br>    <span class="hljs-comment">// onLoad () &#123;&#125;</span><br><br>    <span class="hljs-function"><span class="hljs-title">start</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.startBtn.node.on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.needItem +=  <span class="hljs-built_in">parseInt</span>(<span class="hljs-built_in">this</span>.editBox.string)<br>        &#125;)<br>        <span class="hljs-keyword">let</span> pos = <span class="hljs-built_in">this</span>.scrollView.node.parent.convertToNodeSpace(<br>            <span class="hljs-built_in">this</span>.scrollView.node.position<br>        )<br>        <span class="hljs-comment">// 构造碰撞盒子 需要有预留</span><br>        <span class="hljs-built_in">this</span>.viewRect = cc.rect(pos.x - <span class="hljs-number">125</span>, pos.y - <span class="hljs-number">125</span>, <span class="hljs-built_in">this</span>.scrollView.node.width + <span class="hljs-number">250</span>, <span class="hljs-built_in">this</span>.scrollView.node.height + <span class="hljs-number">300</span> )<br>        <span class="hljs-built_in">this</span>.scrollView.node.on(<span class="hljs-string">&#x27;scroll-began&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.needCulling = <span class="hljs-literal">true</span><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;scroll-began&#x27;</span>)<br>        &#125;)<br>        <span class="hljs-built_in">this</span>.scrollView.node.on(<span class="hljs-string">&#x27;scroll-ended&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.culling()<br>            <span class="hljs-built_in">this</span>.needCulling = <span class="hljs-literal">false</span><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;scroll-ended&#x27;</span>)<br>        &#125;)<br>        <span class="hljs-built_in">this</span>.scrollView.node.on(cc.Node.EventType.TOUCH_CANCEL, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.culling()<br>            <span class="hljs-comment">// this.needCulling = false</span><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;TOUCH_CANCEL&#x27;</span>)<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">frameCreator</span>(<span class="hljs-params">dt: <span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.needItem &lt; <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span><br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.needItem === <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-built_in">this</span>.culling()<br>        &#125;<br>        <span class="hljs-built_in">this</span>.needItem--<br>        <span class="hljs-built_in">this</span>.index++<br>        <span class="hljs-keyword">let</span> itemNode = cc.instantiate(<span class="hljs-built_in">this</span>.itemPrefab)<br>        itemNode.getComponent(Item).init(<span class="hljs-built_in">this</span>.index)<br>        itemNode.color = cc.color(~~(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">255</span>), ~~(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">255</span>), ~~(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">255</span>))<br>        <span class="hljs-built_in">this</span>.scrollView.content.addChild(itemNode)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">culling</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.scrollView.content.children.forEach(<span class="hljs-function">(<span class="hljs-params">node</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.viewRect.containsRect(node.getBoundingBoxToWorld()))&#123;<br>                node.getComponent(Item).itemShow()<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                node.getComponent(Item).itemHide()<br>            &#125;<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">update</span>(<span class="hljs-params">dt</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.frameCreator(dt)<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.needCulling) &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;is culling&#x27;</span>)<br>            <span class="hljs-built_in">this</span>.culling()<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="简单分析"><a href="#简单分析" class="headerlink" title="简单分析"></a>简单分析</h3><ul><li>将预制件实例化的操作分到每一帧, 每一帧生成实体</li><li>在每一帧16ms的时间内，生成一个或者多个实体</li><li>当item的位置超出view的位置时就设置透明度为0(减少drawCall)</li></ul>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cocos creator</tag>
      
      <tag>scrollview</tag>
      
      <tag>性能优化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator与zip</title>
    <link href="/posts/71deeea/"/>
    <url>/posts/71deeea/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><figcaption><span>《围城》, 钱钟书</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs blockquote">**忠厚老实人的恶毒，像饭里的砂砾或者出骨鱼片里未净的刺，会给人一种不期待的伤痛。。**<br></code></pre></td></tr></table></figure><h2 id="写在前头"><a href="#写在前头" class="headerlink" title="写在前头"></a>写在前头</h2><p>你在什么时候需要压缩包？</p><ul><li>文件太多，只想下载一次</li><li>分版本更新内容</li><li>数据加密</li></ul><h2 id="找个类库咯"><a href="#找个类库咯" class="headerlink" title="找个类库咯"></a>找个类库咯</h2><p><strong>能找到类库实现的,就不要自己浪费时间了</strong></p><p><a href="https://github.com/Stuk/jszip">JSZip</a></p><p>下载dist里面的<strong>jszip.min.js</strong>扔到CocosCreator里面就好了</p><h2 id="准备一个压缩包"><a href="#准备一个压缩包" class="headerlink" title="准备一个压缩包"></a>准备一个压缩包</h2><p>随便找点json文件或者其他<strong>文本文件</strong>, 当前的压缩包内只能放一些文本文件，一些图片和其他文件在引擎中可能没有解析的方法，也许是我还没找到</p><p><strong>压缩包的后缀名改成.bin</strong>, 以二进制的方式读取文件，不改的话就直接文本模式读取了</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><blockquote><p>Main.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-keyword">import</span> JSZip = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./lib/jszip.min.js&#x27;</span>)<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.Label) resultLabel: cc.Label = <span class="hljs-literal">null</span><br><br>    start () &#123;<br><br>        cc.loader.loadRes(<span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-keyword">async</span> (err, res) =&gt; &#123;<br>            <span class="hljs-keyword">if</span> (err) &#123;<br>                <span class="hljs-built_in">console</span>.log(err)<br>                <span class="hljs-built_in">this</span>.p(<span class="hljs-string">&#x27;加载失败！&#x27;</span>)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.p(<span class="hljs-string">&#x27;加载成功！&#x27;</span>)<br>                <span class="hljs-built_in">console</span>.log(res)<br>                <span class="hljs-built_in">console</span>.log(res._nativeAsset)<br><br>                <span class="hljs-keyword">let</span> jsZip = <span class="hljs-keyword">new</span> JSZip()<br>                <span class="hljs-comment">// console.log(jsZip)</span><br>                <span class="hljs-keyword">let</span> zip = <span class="hljs-keyword">await</span> jsZip.loadAsync(res._nativeAsset)<br>                <span class="hljs-keyword">if</span> (zip) &#123;<br>                    <span class="hljs-keyword">let</span> file1 = <span class="hljs-keyword">await</span> zip.file(<span class="hljs-string">&#x27;data1.json&#x27;</span>).async(<span class="hljs-string">&#x27;string&#x27;</span>)<br>                    <span class="hljs-keyword">let</span> file2 = <span class="hljs-keyword">await</span> zip.file(<span class="hljs-string">&#x27;data2.json&#x27;</span>).async(<span class="hljs-string">&#x27;string&#x27;</span>)<br>                    <span class="hljs-keyword">let</span> file3 = <span class="hljs-keyword">await</span> zip.file(<span class="hljs-string">&#x27;data3.json&#x27;</span>).async(<span class="hljs-string">&#x27;string&#x27;</span>)<br>                    <span class="hljs-keyword">let</span> file4 = <span class="hljs-keyword">await</span> zip.file(<span class="hljs-string">&#x27;data4.json&#x27;</span>).async(<span class="hljs-string">&#x27;string&#x27;</span>)<br>                    <span class="hljs-keyword">let</span> file5 = <span class="hljs-keyword">await</span> zip.file(<span class="hljs-string">&#x27;test.b64.txt&#x27;</span>).async(<span class="hljs-string">&#x27;string&#x27;</span>)<br>                    <span class="hljs-keyword">let</span> file6 = <span class="hljs-keyword">await</span> zip.file(<span class="hljs-string">&#x27;dou.png&#x27;</span>).async(<span class="hljs-string">&#x27;uint8array&#x27;</span>)<br>                    <span class="hljs-built_in">console</span>.log(file6.byteLength)<br><br>                    <span class="hljs-built_in">this</span>.p(file1)<br>                    <span class="hljs-built_in">this</span>.p(file2)<br>                    <span class="hljs-built_in">this</span>.p(file3)<br>                    <span class="hljs-built_in">this</span>.p(file4)<br><br>                    <span class="hljs-keyword">let</span> image = <span class="hljs-keyword">new</span> Image()<br>                    image.src = file5<br>                    image.onload = <span class="hljs-function">() =&gt;</span> &#123;<br>                        <span class="hljs-keyword">let</span> tex = <span class="hljs-keyword">new</span> cc.Texture2D()<br>                        tex.initWithElement(image)<br>                        <span class="hljs-keyword">let</span> spf = <span class="hljs-keyword">new</span> cc.SpriteFrame(tex)<br>                        <span class="hljs-keyword">let</span> node = <span class="hljs-keyword">new</span> cc.Node()<br>                        <span class="hljs-keyword">let</span> sp = node.addComponent(cc.Sprite)<br>                        sp.spriteFrame = spf<br>                        <span class="hljs-built_in">this</span>.node.addChild(node, -<span class="hljs-number">2</span>)<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">p</span>(<span class="hljs-params">str: <span class="hljs-built_in">string</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.resultLabel.string += <span class="hljs-string">`\n<span class="hljs-subst">$&#123;str&#125;</span>`</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="真机测试"><a href="#真机测试" class="headerlink" title="真机测试"></a>真机测试</h2><p><img src="/images/CocosCreator%E4%B8%8Ezip/image1.jpg" alt="真机测试"></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><ul><li>实现了zip内的数据获取</li><li>存储图片的base64编码后的字符串，可以转变为图片</li><li>存储图片本人可以获得ArrayBuffer数据，转存可以保存为图片</li><li>尚未找到CocosCreator中ArrayBuffer转为cc.Texture2d的方案，如过攻破这个的话，图片加密，数据加密，包体压缩什么的都可以了</li></ul>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小游戏</tag>
      
      <tag>cocos creator</tag>
      
      <tag>zip</tag>
      
      <tag>jszip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小游戏的长连接解决方案</title>
    <link href="/posts/ed17295a/"/>
    <url>/posts/ed17295a/</url>
    
    <content type="html"><![CDATA[<h2 id="Socket-IO"><a href="#Socket-IO" class="headerlink" title="Socket.IO"></a>Socket.IO</h2><ul><li>Socket.io实现了房间频道广播等一些基础功能，还有可以实现分路由事件执行，相对来说是一个比较成熟的长连接实现，服务器端有限制，需要是nodejs, 客户端有限制，在微信小游戏等平台需要额外修改类库实现</li></ul><h3 id="服务器的代码"><a href="#服务器的代码" class="headerlink" title="服务器的代码"></a>服务器的代码</h3><ul><li>用于测试简单的连接</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> socketIo <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;socket.io&#x27;</span><br><br><span class="hljs-keyword">const</span> io = socketIo(&#123;<br>    <span class="hljs-attr">pingTimeout</span>: <span class="hljs-number">1000</span> * <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">pingInterval</span>: <span class="hljs-number">1000</span> * <span class="hljs-number">3</span>,<br>    <span class="hljs-attr">transports</span>: [<span class="hljs-string">&#x27;websocket&#x27;</span>],<br>    <span class="hljs-attr">allowUpgrades</span>: <span class="hljs-literal">false</span><br>&#125;)<br><br>io.on(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">socket: socketIo.Socket</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(socket.id, <span class="hljs-string">&#x27;登录到服务器&#x27;</span>)<br>    socket.emit(<span class="hljs-string">&#x27;hello&#x27;</span>, &#123;<br>        <span class="hljs-attr">hello</span>: <span class="hljs-string">&#x27;world&#x27;</span><br>    &#125;)<br>&#125;)<br><br>io.listen(<span class="hljs-number">3001</span>)<br></code></pre></td></tr></table></figure><h3 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h3><ul><li>cocoscreator本身有集成socket.io …</li><li>直接输出的window.io就是socket.io的对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-keyword">declare</span> <span class="hljs-keyword">let</span> io<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.Node) tipNode: cc.Node = <span class="hljs-literal">null</span><br><br>    start () &#123;<br>        <span class="hljs-built_in">this</span>.tipNode.color = cc.Color.RED<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;io&#x27;</span>)<br>        <span class="hljs-built_in">console</span>.log(io)<br>        <span class="hljs-keyword">let</span> socket = io.connect(<span class="hljs-string">&#x27;ws://192.168.218.88:3001&#x27;</span>, <br>        &#123; <br>            <span class="hljs-attr">transports</span>:[<span class="hljs-string">&#x27;websocket&#x27;</span>],<br>            <span class="hljs-string">&#x27;force new connection&#x27;</span> : <span class="hljs-literal">true</span><br>        &#125;)<br>        socket.on(<span class="hljs-string">&#x27;connect&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`\n SocketIo Connect`</span>)<br>            <span class="hljs-built_in">this</span>.tipNode.color = cc.Color.GREEN<br>        &#125;)<br>        socket.on(<span class="hljs-string">&#x27;hello&#x27;</span>, <span class="hljs-function"><span class="hljs-params">d</span> =&gt;</span> &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`\n <span class="hljs-subst">$&#123;<span class="hljs-built_in">JSON</span>.stringify(d)&#125;</span>`</span>)<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="web端可以直接允许测试"><a href="#web端可以直接允许测试" class="headerlink" title="web端可以直接允许测试"></a>web端可以直接允许测试</h3><ul><li>绿色为连接成功</li></ul><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image1.jpg" alt="web测试"></p><h3 id="微信小游戏端需要设置"><a href="#微信小游戏端需要设置" class="headerlink" title="微信小游戏端需要设置"></a>微信小游戏端需要设置</h3><ul><li><p>使用微信小游戏下适配的Socket.io</p></li><li><p>下载地址</p></li></ul><p><a href="https://github.com/10cella/weapp.socket.io">https://github.com/10cella/weapp.socket.io</a></p><ul><li>在项目目录下新建一个build-templates目录</li><li>在里面新建一个wechatgame目录</li><li>新建一个src目录</li><li>将上面dist里面的weapp.socket.io.js复制到src下</li><li>在src同级目录新建一个main.js文件</li><li>内容复制打包小游戏生成的main.js即可</li><li>在最上层加入如下代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">window</span>.io = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;src/weapp.socket.io.js&#x27;</span>)<br>...<br></code></pre></td></tr></table></figure><h3 id="模拟器测试"><a href="#模拟器测试" class="headerlink" title="模拟器测试"></a>模拟器测试</h3><ul><li>构建微信小游戏并运行</li><li>当前无法连接</li></ul><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image2.jpg" alt="无法连接"></p><ul><li>在详情中的本地设置勾选不校验域名</li></ul><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image3.jpg" alt="模拟器连接成功"></p><h3 id="真机测试"><a href="#真机测试" class="headerlink" title="真机测试"></a>真机测试</h3><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image4.jpg" alt="真机连接成功"></p><h2 id="Colyseus"><a href="#Colyseus" class="headerlink" title="Colyseus"></a>Colyseus</h2><ul><li>Colyseus实现了以房间为单位的服务器架构，框架实现了一个状态同步的游戏服务器，实现相关的游戏房间的操作，服务器端有限制，需要是nodejs</li></ul><h3 id="服务器代码"><a href="#服务器代码" class="headerlink" title="服务器代码"></a>服务器代码</h3><blockquote><p>index.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Server &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;colyseus&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; createServer &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;http&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; GameRoom &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./GameRoom&quot;</span>;<br><br><span class="hljs-keyword">const</span> gameServer = <span class="hljs-keyword">new</span> Server(&#123;<br>  <span class="hljs-attr">server</span>: createServer()<br>&#125;);<br><br>gameServer.register(<span class="hljs-string">&#x27;game&#x27;</span>, GameRoom)<br><br>gameServer.listen(<span class="hljs-number">3000</span>);<br></code></pre></td></tr></table></figure><blockquote><p>GameRoom.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Room, Client &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;colyseus&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameRoom</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Room</span> </span>&#123;<br>    onMessage(client: Client, <span class="hljs-attr">data</span>: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(client.sessionId, data)   <br>        <span class="hljs-built_in">this</span>.send(client, &#123; <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;Hello world!&quot;</span> &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="客户端代码-1"><a href="#客户端代码-1" class="headerlink" title="客户端代码"></a>客户端代码</h3><ul><li>下载最新版本的colyseus.js的文件</li></ul><p><a href="https://github.com/colyseus/colyseus.js/releases">https://github.com/colyseus/colyseus.js/releases</a></p><ul><li>将文件加入到目录下</li><li>使用require的方式导入colyseus</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-keyword">import</span> Colyseus = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./colyseus&#x27;</span>)<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.Node) tipNode: cc.Node = <span class="hljs-literal">null</span><br><br>    start () &#123;<br>        <span class="hljs-built_in">this</span>.tipNode.color = cc.Color.RED<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;colyseus&#x27;</span>)<br>        <span class="hljs-keyword">let</span> client = <span class="hljs-keyword">new</span> Colyseus.Client(<span class="hljs-string">&#x27;ws://192.168.218.88:3000&#x27;</span>);<br>        client.onOpen.add(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.tipNode.color = cc.Color.GREEN<br>            <span class="hljs-keyword">let</span> room = client.join(<span class="hljs-string">&quot;game&quot;</span>);<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="web端测试"><a href="#web端测试" class="headerlink" title="web端测试"></a>web端测试</h3><ul><li>绿色为连接成功</li></ul><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image1.jpg" alt="web测试"></p><h3 id="模拟器测试-1"><a href="#模拟器测试-1" class="headerlink" title="模拟器测试"></a>模拟器测试</h3><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image3.jpg" alt="模拟器连接成功"></p><h3 id="真机测试-1"><a href="#真机测试-1" class="headerlink" title="真机测试"></a>真机测试</h3><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image4.jpg" alt="真机连接成功"></p><h2 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h2><ul><li>长连接相对比较底层的实现，一些心跳包，断线重连等都需要自己实现，对于服务器没有限制，在各个平台基本都有WebScoket的实现</li></ul><h3 id="服务器代码-1"><a href="#服务器代码-1" class="headerlink" title="服务器代码"></a>服务器代码</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> WebSocket <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ws&#x27;</span><br><span class="hljs-keyword">import</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>)<br><br><span class="hljs-keyword">const</span> server = http.createServer()<br><br><span class="hljs-keyword">const</span> wss = <span class="hljs-keyword">new</span> WebSocket.Server(&#123;<br>    server<br>&#125;)<br><br>wss.on(<span class="hljs-string">&#x27;connection&#x27;</span>, <span class="hljs-function"><span class="hljs-params">socket</span> =&gt;</span> &#123;<br>    socket.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">message</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;message&#x27;</span>, message)<br>    &#125;)<br><br>    socket.send(<span class="hljs-string">&#x27;hello&#x27;</span>)<br>&#125;)<br><br>server.listen(<span class="hljs-number">3002</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;wsServer is on&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="客户端代码-2"><a href="#客户端代码-2" class="headerlink" title="客户端代码"></a>客户端代码</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.Node) tipNode: cc.Node = <span class="hljs-literal">null</span><br><br>    start () &#123;<br>        <span class="hljs-built_in">this</span>.tipNode.color = cc.Color.RED<br>        <span class="hljs-keyword">let</span> webSocket = <span class="hljs-keyword">new</span> WebSocket(<span class="hljs-string">&#x27;ws://192.168.218.88:3002&#x27;</span>)<br>        webSocket.onopen = <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.tipNode.color = cc.Color.GREEN<br>            webSocket.send(<span class="hljs-string">&#x27;hello server&#x27;</span>)<br>        &#125;<br><br>        webSocket.onmessage = <span class="hljs-function">(<span class="hljs-params">message: MessageEvent</span>) =&gt;</span> &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;message&#x27;</span>, message.data)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="web端测试-1"><a href="#web端测试-1" class="headerlink" title="web端测试"></a>web端测试</h3><ul><li>绿色为连接成功</li></ul><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image1.jpg" alt="web测试"></p><h3 id="模拟器测试-2"><a href="#模拟器测试-2" class="headerlink" title="模拟器测试"></a>模拟器测试</h3><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image3.jpg" alt="模拟器连接成功"></p><h3 id="真机测试-2"><a href="#真机测试-2" class="headerlink" title="真机测试"></a>真机测试</h3><p><img src="/images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/image4.jpg" alt="真机连接成功"></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小游戏</tag>
      
      <tag>cocoscreator</tag>
      
      <tag>game</tag>
      
      <tag>weChat</tag>
      
      <tag>长连接</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator与微信小游戏</title>
    <link href="/posts/d4f6582c/"/>
    <url>/posts/d4f6582c/</url>
    
    <content type="html"><![CDATA[<h1 id="CocosCreator与微信小游戏"><a href="#CocosCreator与微信小游戏" class="headerlink" title="CocosCreator与微信小游戏"></a>CocosCreator与微信小游戏</h1><h2 id="基础系统"><a href="#基础系统" class="headerlink" title="基础系统"></a>基础系统</h2><h3 id="判断环境的宏定义"><a href="#判断环境的宏定义" class="headerlink" title="判断环境的宏定义"></a>判断环境的宏定义</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">cc.sys.platform == cc.sys.WECHAT_GAME<br></code></pre></td></tr></table></figure><h3 id="获取当前设置-用于获取是否授权等"><a href="#获取当前设置-用于获取是否授权等" class="headerlink" title="获取当前设置,用于获取是否授权等"></a>获取当前设置,用于获取是否授权等</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取当前的设置</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@memberof <span class="hljs-variable">WxManager</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-title">getSetting</span>(<span class="hljs-params">cb</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (cc.sys.platform != cc.sys.WECHAT_GAME) &#123;<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    wx.getSetting(&#123;<br>        <span class="hljs-function"><span class="hljs-title">success</span>(<span class="hljs-params">res</span>)</span> &#123;<br>            cb(<span class="hljs-literal">null</span>, res)<br>        &#125;,<br>        <span class="hljs-function"><span class="hljs-title">fail</span>(<span class="hljs-params">res</span>)</span> &#123;<br>            cb(<span class="hljs-string">&#x27;getSetting fail&#x27;</span>, res)<br>        &#125;<br><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取用户授权"><a href="#获取用户授权" class="headerlink" title="获取用户授权"></a>获取用户授权</h3><ul><li>传入一个透明按钮对象(设置全屏即可)</li><li>用户第一次点击屏幕的时候先走授权，之后会自动调用</li><li>如果授权成功就回调成功，需要移除透明按钮</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 获取当前用户信息</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@memberof <span class="hljs-variable">WxManager</span></span></span><br><span class="hljs-comment">    */</span><br><span class="hljs-function"><span class="hljs-title">getUserInfo</span>(<span class="hljs-params">btnNode, cb</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (cc.sys.platform != cc.sys.WECHAT_GAME) &#123;<br>        <span class="hljs-keyword">return</span><br>    &#125;<br>    wx.getSetting(&#123;<br>        <span class="hljs-function"><span class="hljs-title">success</span>(<span class="hljs-params">res</span>)</span> &#123;<br>            <span class="hljs-keyword">if</span>(!res.authSetting[<span class="hljs-string">&#x27;scope.userInfo&#x27;</span>]) &#123;<br><br>                <span class="hljs-keyword">let</span> btnSize = cc.size(btnNode.width+<span class="hljs-number">10</span>,btnNode.height+<span class="hljs-number">10</span>);<br>                <span class="hljs-keyword">let</span> frameSize = cc.view.getFrameSize();<br>                <span class="hljs-keyword">let</span> winSize = cc.director.getWinSize();<br>                <span class="hljs-comment">// console.log(&quot;winSize: &quot;,winSize);</span><br>                <span class="hljs-comment">// console.log(&quot;frameSize: &quot;,frameSize);</span><br>                <span class="hljs-comment">//适配不同机型来创建微信授权按钮</span><br>                <span class="hljs-keyword">let</span> left = (winSize.width*<span class="hljs-number">0.5</span>+btnNode.x-btnSize.width*<span class="hljs-number">0.5</span>)/winSize.width*frameSize.width;<br>                <span class="hljs-keyword">let</span> top = (winSize.height*<span class="hljs-number">0.5</span>-btnNode.y-btnSize.height*<span class="hljs-number">0.5</span>)/winSize.height*frameSize.height;<br>                <span class="hljs-keyword">let</span> width = btnSize.width/winSize.width*frameSize.width;<br>                <span class="hljs-keyword">let</span> height = btnSize.height/winSize.height*frameSize.height;<br><br>                <span class="hljs-keyword">const</span> button = wx.createUserInfoButton(&#123;<br>                    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;text&#x27;</span>,<br>                    <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>                    <span class="hljs-attr">style</span>: &#123;<br>                        <span class="hljs-attr">left</span>: left,<br>                        <span class="hljs-attr">top</span>: top,<br>                        <span class="hljs-attr">width</span>: width,<br>                        <span class="hljs-attr">height</span>: height,<br>                        <span class="hljs-attr">lineHeight</span>: <span class="hljs-number">0</span>,<br>                        <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>                        <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#ffffff&#x27;</span>,<br>                        <span class="hljs-attr">textAlign</span>: <span class="hljs-string">&#x27;center&#x27;</span>,<br>                        <span class="hljs-attr">fontSize</span>: <span class="hljs-number">16</span>,<br>                        <span class="hljs-attr">borderRadius</span>: <span class="hljs-number">4</span><br>                    &#125;<br>                &#125;)<br>                button.onTap(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                    <span class="hljs-comment">// 此处可以获取到用户信息</span><br>                    <span class="hljs-keyword">if</span> (cb) &#123;<br>                        <span class="hljs-keyword">if</span>(res.userInfo) &#123;<br>                            cb(<span class="hljs-literal">null</span>, res)<br>                            button.hide()<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            cb(<span class="hljs-string">&#x27;没有允许获取用户权限&#x27;</span>)<br>                        &#125;<br>                    &#125;<br>                &#125;)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                wx.getUserInfo(&#123;<br>                    <span class="hljs-function"><span class="hljs-title">success</span>(<span class="hljs-params">res</span>)</span> &#123;<br>                        <span class="hljs-keyword">if</span> (cb) &#123;<br>                            cb(<span class="hljs-literal">null</span>, res)<br>                        &#125;<br>                    &#125;<br>                &#125;)<br>            &#125;<br>        &#125;<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>使用方法</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">xx.getUserInfo(<span class="hljs-built_in">this</span>.userButton,<span class="hljs-function">(<span class="hljs-params">err, res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (err) <span class="hljs-keyword">return</span><br>    GameDataManager.getInstance().wxUserInfo = res.userInfo<br>    <span class="hljs-built_in">this</span>.userButton.active = <span class="hljs-literal">false</span><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;授权成功&#x27;</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><h3 id="设置被动分享（点击三点图标显示的分享）"><a href="#设置被动分享（点击三点图标显示的分享）" class="headerlink" title="设置被动分享（点击三点图标显示的分享）"></a>设置被动分享（点击三点图标显示的分享）</h3><ul><li>分享是否带ticket</li><li>被动分享的传参是个函数</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts">wx.showShareMenu(&#123;<br>    <span class="hljs-attr">withShareTicket</span>: <span class="hljs-literal">false</span><br>&#125;)<br>wx.onShareAppMessage(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 用户点击了“转发”按钮</span><br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;分享的title&#x27;</span>,<br>        <span class="hljs-attr">imageUrlId</span>: <span class="hljs-string">&#x27;imageUrlId&#x27;</span>,<br>        <span class="hljs-attr">imageUrl</span>: <span class="hljs-string">&#x27;imageUrl&#x27;</span>,<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="设置主动分享"><a href="#设置主动分享" class="headerlink" title="设置主动分享"></a>设置主动分享</h3><ul><li>主动分享的传参是个对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts">wx.shareAppMessage(<br>    &#123;<br>        <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;title&#x27;</span>,<br>        <span class="hljs-attr">imageUrlId</span>: <span class="hljs-string">&#x27;imageUrlId&#x27;</span>,<br>        <span class="hljs-attr">imageUrl</span>: <span class="hljs-string">&#x27;imageUrl&#x27;</span><br>    &#125;<br>)<br></code></pre></td></tr></table></figure><h3 id="使用截图分享"><a href="#使用截图分享" class="headerlink" title="使用截图分享"></a>使用截图分享</h3><ul><li><strong>getSystemInfoSync</strong>用来获取当前真是的像素数据</li><li>当前是预定义开始的截取高度，安装宽比高 5：4的比例截取</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> info = wx.getSystemInfoSync()<br><span class="hljs-keyword">let</span> screenWidth = info.pixelRatio * info.windowWidth<br><span class="hljs-keyword">let</span> screenHeight = info.pixelRatio * info.windowHeight<br>wx.shareAppMessage(<br>&#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;title&#x27;</span>,<br>    <span class="hljs-attr">imageUrl</span>: <span class="hljs-built_in">window</span>[<span class="hljs-string">&#x27;canvas&#x27;</span>].toTempFilePathSync(&#123;<br>        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">y</span>: screenHeight * <span class="hljs-number">.6</span>,<br>        <span class="hljs-attr">width</span>: screenWidth,<br>        <span class="hljs-attr">height</span>: screenWidth * <span class="hljs-number">.8</span>,<br>        <span class="hljs-attr">destWidth</span>: <span class="hljs-number">500</span>,<br>        <span class="hljs-attr">destHeight</span>: <span class="hljs-number">400</span><br>    &#125;)<br>&#125;<br>)<br></code></pre></td></tr></table></figure><h3 id="使用固定图片加Canvas画图的分享"><a href="#使用固定图片加Canvas画图的分享" class="headerlink" title="使用固定图片加Canvas画图的分享"></a>使用固定图片加Canvas画图的分享</h3><ul><li>使用图片的规格为 375 X 300</li><li>放置在ccc的模板目录内</li><li>画图使用的值为rpx</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> canvas1 = wx.createCanvas()<br><span class="hljs-keyword">let</span> ctx = canvas1.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>) <span class="hljs-comment">// 创建一个 2d context</span><br><span class="hljs-keyword">let</span> image = wx.createImage()<br>image.onload = <span class="hljs-function">() =&gt;</span> &#123;<br>    ctx.drawImage(image, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>    ctx.fillStyle = <span class="hljs-string">&#x27;#333333&#x27;</span><br>    ctx.font = <span class="hljs-string">&quot;18px bold 微软雅黑&quot;</span>;<br>    ctx.textAlign = <span class="hljs-string">&quot;center&quot;</span>;<br>    ctx.textBaseline = <span class="hljs-string">&quot;middle&quot;</span>;<br>    ctx.fillText(<span class="hljs-string">&#x27;哈哈&#x27;</span>, <span class="hljs-number">190</span>, <span class="hljs-number">37</span>)<br>    wx.shareAppMessage(<br>        &#123;<br>            <span class="hljs-attr">title</span>: str,<br>            <span class="hljs-attr">imageUrl</span>: canvas1.toTempFilePathSync(&#123;<br>                <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">width</span>: <span class="hljs-number">375</span>,<br>                <span class="hljs-attr">height</span>: <span class="hljs-number">300</span>,<br>                <span class="hljs-attr">destWidth</span>: <span class="hljs-number">500</span>,<br>                <span class="hljs-attr">destHeight</span>: <span class="hljs-number">400</span><br>            &#125;)<br>        &#125;<br>    )<br>&#125;<br>image.src = <span class="hljs-string">&#x27;img/share1.png&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="排行榜"><a href="#排行榜" class="headerlink" title="排行榜"></a>排行榜</h2><h3 id="发送数据到子域-主域"><a href="#发送数据到子域-主域" class="headerlink" title="发送数据到子域(主域)"></a>发送数据到子域(主域)</h3><ul><li>发送对象到子域</li><li>用于传递相关数据</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> openDataContext = wx.getOpenDataContext()<br>openDataContext.postMessage(&#123;<span class="hljs-attr">hello</span>: <span class="hljs-string">&#x27;hello&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure><h3 id="子域接收主域发送数据"><a href="#子域接收主域发送数据" class="headerlink" title="子域接收主域发送数据"></a>子域接收主域发送数据</h3><ul><li>obj是获取的对象</li><li>可以定义固定的格式内容，用于判断传递的数据类型和内容</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-built_in">window</span>[<span class="hljs-string">&quot;wx&quot;</span>].onMessage(<span class="hljs-function">(<span class="hljs-params">obj: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br><br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="子域中获取用户信息-子域"><a href="#子域中获取用户信息-子域" class="headerlink" title="子域中获取用户信息(子域)"></a>子域中获取用户信息(子域)</h3><ul><li>子域中获取信息，传入openId</li><li>传入selfOpenId为获取自己的信息</li><li>data数组对应openIdList</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-built_in">window</span>[<span class="hljs-string">&quot;wx&quot;</span>].getUserInfo(&#123;<br>    <span class="hljs-attr">openIdList</span>: [<span class="hljs-string">&#x27;selfOpenId&#x27;</span>],<br>    <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// console.log(&#x27;res&lt;&lt;&lt;&lt;&lt;&lt;==&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x27;, res)</span><br>        <span class="hljs-built_in">this</span>.selfNickName = res.data[<span class="hljs-number">0</span>].nickName<br>        <span class="hljs-built_in">this</span>.selfAvatarUrl = res.data[<span class="hljs-number">0</span>].avatarUrl<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="获取当前用户的数据"><a href="#获取当前用户的数据" class="headerlink" title="获取当前用户的数据"></a>获取当前用户的数据</h3><ul><li>保存的数据都为字符串模式, 使用数据的时候需要转换</li><li>第一次获取数据的时候可能为空</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 获取当前用户的数据</span><br><span class="hljs-built_in">window</span>[<span class="hljs-string">&quot;wx&quot;</span>].getUserCloudStorage(&#123;<br>    <span class="hljs-attr">keyList</span>: [<span class="hljs-string">&quot;score&quot;</span>, <span class="hljs-string">&quot;timestamp&quot;</span>],<br>    <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-comment">// console.log(&#x27;res=--==--=&gt;&#x27;, res)</span><br>        <span class="hljs-keyword">let</span> arr: <span class="hljs-built_in">Array</span>&lt;&#123; <span class="hljs-attr">key</span>: <span class="hljs-built_in">string</span>,<span class="hljs-attr">value</span>: <span class="hljs-built_in">string</span> &#125;&gt; = res.KVDataList<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(arr[<span class="hljs-number">0</span>]) !== <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123;<br><br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(arr[<span class="hljs-number">1</span>]) !== <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123;<br><br>        &#125;<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="请求所有好友的的数据"><a href="#请求所有好友的的数据" class="headerlink" title="请求所有好友的的数据"></a>请求所有好友的的数据</h3><ul><li>获取当前所有好友的信息</li><li>UserGameData为获取的数据结构</li><li>获取数据有可能为空(没有好友玩，包括自己都没上传成绩)</li><li>使用函数方法进行数据过滤和排序</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> UserGameData &#123;<br><span class="hljs-attr">avatarUrl</span>: <span class="hljs-built_in">string</span><br><span class="hljs-attr">nickname</span>: <span class="hljs-built_in">string</span><br><span class="hljs-attr">openid</span>: <span class="hljs-built_in">string</span><br><span class="hljs-attr">KVDataList</span>: <span class="hljs-built_in">Array</span>&lt;&#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-built_in">string</span>,<br>    <span class="hljs-attr">value</span>: <span class="hljs-built_in">string</span><br>&#125;&gt;<br>&#125;<br><br><span class="hljs-comment">// 请求当前所有的用户数据</span><br><span class="hljs-built_in">window</span>[<span class="hljs-string">&quot;wx&quot;</span>].getFriendCloudStorage(&#123;<br>    <span class="hljs-attr">keyList</span>: [<span class="hljs-string">&quot;score&quot;</span>, <span class="hljs-string">&quot;timestamp&quot;</span>],<br>    <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> ranking = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">let</span> hasSelf: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span><br>        <span class="hljs-keyword">let</span> data: <span class="hljs-built_in">Array</span>&lt;UserGameData&gt; = res.data<br>        data.map(<span class="hljs-built_in">Function</span>).sort(<span class="hljs-built_in">Function</span>).forEach(<span class="hljs-built_in">Function</span>)<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h2><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><ul><li>将小程序的appid和key存储在服务器</li><li>安装superagent用于代理访问</li></ul><blockquote><p>api.ts</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> superagent <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;superagent&#x27;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Api</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通过登录的code 获取用户的session</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">appid</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">secret</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">js_code</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> </span>[grant_type=&#x27;authorization_code&#x27;]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">code2Session</span>(<span class="hljs-params">appid: <span class="hljs-built_in">string</span>, secret: <span class="hljs-built_in">string</span>, js_code: <span class="hljs-built_in">string</span>, grant_type = <span class="hljs-string">&#x27;authorization_code&#x27;</span></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">let</span> url = <span class="hljs-string">`https://api.weixin.qq.com/sns/jscode2session?appid=<span class="hljs-subst">$&#123;appid&#125;</span>&amp;secret=<span class="hljs-subst">$&#123;secret&#125;</span>&amp;js_code=<span class="hljs-subst">$&#123;js_code&#125;</span>&amp;grant_type=<span class="hljs-subst">$&#123;grant_type&#125;</span>`</span><br>            superagent.get(url).end(<span class="hljs-function">(<span class="hljs-params">err, res</span>) =&gt;</span> &#123;<br>               <span class="hljs-comment">// console.log(err)</span><br>               <span class="hljs-comment">// console.log(res)</span><br>                <span class="hljs-keyword">if</span> (err) &#123;<br>                    resolve(<span class="hljs-string">&#x27;&#123;&#125;&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">// console.log(&#x27;res: &#x27;, res)</span><br>                    <span class="hljs-comment">// console.log(&#x27;res.text: &#x27;, res.text)</span><br>                    resolve(res.text)<br>                &#125;<br>            &#125;)<br>        &#125;)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取code"><a href="#获取code" class="headerlink" title="获取code"></a>获取code</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">wx.login(&#123;<br>  success (res) &#123;<br>    <span class="hljs-keyword">if</span> (res.code) &#123;<br>      <span class="hljs-comment">// 此处将获得的code发送给自己的服务器获取openId,实现登录</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;登录失败！&#x27;</span> + res.errMsg)<br>    &#125;<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小游戏</tag>
      
      <tag>cocos creator</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator中使用pureMvc</title>
    <link href="/posts/f7dc405d/"/>
    <url>/posts/f7dc405d/</url>
    
    <content type="html"><![CDATA[<blockquote><p>PureMVC框架的目标很明确，即把程序分为低耦合的三层：Model、View和Controller。</p></blockquote><p><img src="/images/CocosCreator%E4%B8%AD%E4%BD%BF%E7%94%A8pureMvc/image1.jpg" alt="pureMvc的架构"></p><h3 id="PureMvc的结构"><a href="#PureMvc的结构" class="headerlink" title="PureMvc的结构"></a>PureMvc的结构</h3><h4 id="Model与Proxy"><a href="#Model与Proxy" class="headerlink" title="Model与Proxy"></a>Model与Proxy</h4><p>Model保存对Proxy对象的引用，Proxy负责操作数据模型，与远程服务器通信存取数据</p><h4 id="View与Mediator"><a href="#View与Mediator" class="headerlink" title="View与Mediator"></a>View与Mediator</h4><p>View保存对Mediator对象的引用，由Mediator对象来操作具体的视图组件(ViewComponent, 在ccc中即为继承自cc.Component的各种UI组件)，包括添加事件监听器，发送或者接受Notification，直接改变视图的状态<br><strong>改变视图状态要在Mediator实现，也可以在ViewComponent中即继承自cc.Component的组件脚步中实现修改视图的API在Mediator中调用</strong></p><h4 id="Controller与Command"><a href="#Controller与Command" class="headerlink" title="Controller与Command"></a>Controller与Command</h4><p>Controller保存所有Command的映射，Command类是无状态，只有在需要的时候才被创建。Command可以获取Proxy对象并与之交互，发送Notification，执行其他的Command。</p><h4 id="Facade与Core"><a href="#Facade与Core" class="headerlink" title="Facade与Core"></a>Facade与Core</h4><p>Facade类使用单例模式，他负责初始化核心层(Model, View和Controller)，可以访问他们的Public方法<br>实际的应用中，只要继承Facade类创建一个具体的Facade就可以实现整个MVC的模式，不需要在代码中导入编写Model，View和Controller类<br>Proxy,Mediator和Command就可以通过创建的Facade类来相互访问通信</p><h4 id="Notification可以被用来触发Command的执行"><a href="#Notification可以被用来触发Command的执行" class="headerlink" title="Notification可以被用来触发Command的执行"></a>Notification可以被用来触发Command的执行</h4><p>Facade保存了Command与Notification之间的映射。当Notification(通知)被发出的时候，对应的Command(命令)就会自动的由Controller执行。Command实现复杂的交互，降低View和Model的耦合度</p><h4 id="Mediator发送-声明-接收Notification"><a href="#Mediator发送-声明-接收Notification" class="headerlink" title="Mediator发送 声明 接收Notification"></a>Mediator发送 声明 接收Notification</h4><p>当用View注册Mediator时，Mediator的listNotification方法会被调用，以数组的形式返回该Mediator对象所关心的所有Notification，之后当系统其他角色发出同名的Notification(通知)的时候，关心这个通知的Mediator都会调用handleNotification方法并将Notification以参数的形式传递到方法<br><strong>我可以在多个Mediator中注册相同的Notification，当系统其他角色发送Notification的时候，我注册的多个Mediator都能收到，广播和收音机的关系</strong></p><h4 id="Proxy只发送，不接收Notification"><a href="#Proxy只发送，不接收Notification" class="headerlink" title="Proxy只发送，不接收Notification"></a>Proxy只发送，不接收Notification</h4><p>在很多场景下Proxy需要发送Notification(通知)，比如：Proxy从远程服务器接收到数据时，发送Notification告诉系统，或当Proxy的数据被更新的时候，发送Notification告诉系统<br>如果让Proxy也监听Notification(通知)会导致它和View(视图)层和Controller(控制)层的耦合度太高<br>View和Controller必须监听Proxy发送的Notification，因为他们的职责就是通过可视化的界面使用户能与Proxy持有的数据交互<br>不过对View层和Controller层的改变不应该影响到Model层<br>MVC元设计模式的核心要素在purMvc中体现为Model类，View类和Controller类。为了简化程序开发，pureMvc应用了Facade模式<br>Facade是Model，View和Controller三者的“经纪人”。实际编写代码的你不用导入这三者的类文件，也不直接使用他们。Facade类已经在构造方法包含了对核心MVC三者单例的构造<br>一般的，实际的应用程序都有一个Facade子类，这个Facade类对象负责初始化Controller(控制器),建立Command与Notification名之间的映射，并执行一个Command注册所有的Model和View</p><h3 id="Facade"><a href="#Facade" class="headerlink" title="Facade"></a>Facade</h3><ul><li>AppFacade需要继承Facade类并实现IFacade接口</li><li>StartupCommand是一个启动的Command负责启动所有</li><li>在initializeController中注册了StartupCommand</li><li>在startup方法中发送系统通知STARTUP，然后就注销了StartupCommand(初始化只需要执行一次)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> StartupCommand <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./controller/StartupCommand&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppFacade</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">Facade</span> <span class="hljs-title">implements</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">IFacade</span> </span>&#123;<br>    public <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>()<br>    &#125;<br><br>    public <span class="hljs-keyword">static</span> STARTUP = <span class="hljs-string">&#x27;startup&#x27;</span><br><br>    private <span class="hljs-keyword">static</span> instance: AppFacade<br><br>    public <span class="hljs-keyword">static</span> getInstance(): AppFacade &#123;<br>        <span class="hljs-keyword">if</span> (AppFacade.instance == <span class="hljs-literal">null</span>) &#123;<br>            AppFacade.instance = <span class="hljs-keyword">new</span> AppFacade();<br>        &#125;<br>        <span class="hljs-keyword">return</span> &lt;AppFacade&gt;(AppFacade.instance);<br>    &#125;<br><br>    <span class="hljs-comment">// 启动pureMvc</span><br>    public startup() : <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.sendNotification(AppFacade.STARTUP)<br>        <span class="hljs-built_in">this</span>.removeCommand(AppFacade.STARTUP) <span class="hljs-comment">// 初始化完成之后注销STARTUP命令</span><br>    &#125;<br><br>    <span class="hljs-comment">// 以下是该类的初始化函数，创建改类实例后会自动调用改函数</span><br>    public initializeFacade() : <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">super</span>.initializeFacade()<br>    &#125;<br><br>    <span class="hljs-comment">// 注册数据模型</span><br>    public initializeModel(): <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">super</span>.initializeModel();<br>    &#125;<br><br>    <span class="hljs-comment">// 注册控制器</span><br>    public initializeController(): <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">super</span>.initializeController();<br>        <span class="hljs-built_in">this</span>.registerCommand(AppFacade.STARTUP, StartupCommand);<br>    &#125;<br><br>    <span class="hljs-comment">// 注册View视图</span><br>    public initializeView(): <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">super</span>.initializeView();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Notification"><a href="#Notification" class="headerlink" title="Notification"></a>Notification</h3><blockquote><p>pureMvc使用了观察者模式，所以各层之间能以一种松耦合的方式通信，并且与平台无关</p></blockquote><h4 id="Event与Notification"><a href="#Event与Notification" class="headerlink" title="Event与Notification"></a>Event与Notification</h4><p>Facade和Proxy只能发送Notification，Mediators既可以发送也可以接受Notification，Notification被映射到Command，同时Command也可以发送Notification。这是一种”发布/订阅”机制，所有的观察者都可以收到相同的通知。例如多个收音机收到同一个FM调频,当有音乐播放时候，所有人都能听到。</p><h4 id="定义Notification和Event的常量"><a href="#定义Notification和Event的常量" class="headerlink" title="定义Notification和Event的常量"></a>定义Notification和Event的常量</h4><p>公共的Notification名称常量很适合定义在Facade中，所有的Notification交互的参与者都是Facade的协作者<br>当这些Notification的名称常量需要被其他程序访问时，我们可以使用单独的“Constants”类来存放这些Notification名称常量定义。<br><strong>不管什么时候都应该吧Notification名称定义为常量</strong></p><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><blockquote><p>Facade实现类需要在启动时初始化Controller，建立Notification与Command的映射</p></blockquote><p>Controller会注册监听每一个Notification，当被通知到时，Controller会实例化该Notification对应的Command类的对象。最后将Notification作为参数传递给execute方法</p><p>Command对象是无状态的，只有在需要的时候(Controller收到相应的Notification)才会被创建，并且在被执行(调用execute方法)之后就会被删除。所以不要在那些长生命周期的对象里面引用Command对象</p><p><strong>Command是个短命鬼，生下来就为了爽一下，过把瘾就死</strong></p><h4 id="SimpleCommand和MacroCommand"><a href="#SimpleCommand和MacroCommand" class="headerlink" title="SimpleCommand和MacroCommand"></a>SimpleCommand和MacroCommand</h4><p>Command要实现ICommand接口，在pureMvc中有两个类实现了ICommand接口，分别是SimpleCommand和MacroCommand</p><ul><li>SimpleCommand</li></ul><p>SimpleCommand只有一个execute方法，execute方法接受一个INotification实例作为参数。实际应用中，你只需要重写这个方法就行了。</p><ul><li>MacroCommand</li></ul><p>MacroCommand让你可以顺序执行多个Command。每个执行都会创建一个Command对象并传参一个对源Notification的引用</p><p>MacroCommand在构造方法调用自身的initializeMacroCommand方法。实际应用中，需要重写这个方法，调用addSubCommand添加子Command,可以随意组合SimpleCommand和MacroCommand成为一个新的Command</p><blockquote><p>上文中的StartupCommand， 添加了3个初始化Command Proxy Mediator的Command</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> BootstrapCommands <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bootstrap/BootstrapCommands&quot;</span>;<br><span class="hljs-keyword">import</span> BootstrapModels <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bootstrap/BootstrapModels&quot;</span>;<br><span class="hljs-keyword">import</span> BootstrapViews <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bootstrap/BootstrapViews&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StartupCommand</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">MacroCommand</span> </span>&#123;<br>    public <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    public initializeMacroCommand(): <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.addSubCommand(BootstrapCommands);<br>        <span class="hljs-built_in">this</span>.addSubCommand(BootstrapModels);<br>        <span class="hljs-built_in">this</span>.addSubCommand(BootstrapViews);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>上文中注册一个游戏Proxy的简单命令</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> GameProxy <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../model/GameProxy&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BootstrapModels</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">SimpleCommand</span> </span>&#123;<br>    public <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>()<br>    &#125;<br><br>    public execute(notification: puremvc.INotification) : <span class="hljs-keyword">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.facade.registerProxy(<span class="hljs-keyword">new</span> GameProxy())<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="降低Command与Mediator-Proxy的耦合度"><a href="#降低Command与Mediator-Proxy的耦合度" class="headerlink" title="降低Command与Mediator Proxy的耦合度"></a>降低Command与Mediator Proxy的耦合度</h4><p>通过发送Notification通知Controller来执行Command，而且只能由Controller实例化执行Command。</p><p>为了和系统其他部分交互与通信，Command可能需要</p><ul><li>注册,删除 Mediator Proxy 和 Command，或者检查他们是否已经注册</li><li>发送Notification通知Command或者Mediator做出响应</li><li>获取Proxy和Mediator对象并直接操作他们</li></ul><p>Command使我们可以很容易的切换视图元素状态或者传送数据给它</p><p>Command可以调用多个Proxy执行事务处理，当事务结束后，发送Notification或者处理异常和失败</p><p>Command与Mediator和Proxy交互，应避免Mediator和Proxy直接交互</p><h3 id="Mediator"><a href="#Mediator" class="headerlink" title="Mediator"></a>Mediator</h3><p>Mediator是视图组件ViewComponent(在ccc中为继承cc.Component的UI控件脚本)交互的中间件</p><h4 id="Mediator的职责"><a href="#Mediator的职责" class="headerlink" title="Mediator的职责"></a>Mediator的职责</h4><p>对基于pureMvc的应用程序来说，ViewComponent可以是任意的UIComponent，不用管所处的框架是什么，也不用管它有多少个组件。一个ViewComponent应该尽可能的把自己的状态和操作封装起来，只对外提供事件 方法和属性的简单API</p><p>Mediator保存了一个或者多个ViewComponent的引用，通过ViewComponent自身提供的API管理他们</p><p>Mediator的主要职责是处理ViewComponent派发的事件和系统其他部分发出来的Notification</p><p>因为Mediator也会经常和Proxy交互，所以经常在Mediator的构造方法中取得Proxy实例的引用并保存在Mediator的属性中，这样避免频繁的获取Proxy实例</p><p>Mediator负责处理与Controller层 Model层交互，在收到相关的Notification的时候更新ViewComponet</p><h4 id="一个Mediator的事件响应会有以下几种处理"><a href="#一个Mediator的事件响应会有以下几种处理" class="headerlink" title="一个Mediator的事件响应会有以下几种处理"></a>一个Mediator的事件响应会有以下几种处理</h4><ul><li>检查事件类型或者事件的自定义内容</li><li>检查或者修改ViewComponent的属性或者提供的方法</li><li>检查或者修改Proxy对象的属性或者提供的方法</li><li>发送一个或者多个Notification， 通知别的Mediator或者Command做出反应(甚至可以发送给本人)</li></ul><h4 id="小Tips"><a href="#小Tips" class="headerlink" title="小Tips:"></a>小Tips:</h4><ul><li>如果多个Mediator对同一个事件做出响应，那么应该发送应该Notification，然后相关的Mediator做出各自的响应</li><li>如果应该Mediator需要和其他Mediator进行大量的交互，那么应该好方法是利益Command吧交互步骤定义在一个地方</li><li>不应该让一个Mediator直接去获取调用其他的Mediator，在Mediator中定义这样的操作本身是错误的</li><li>Proxy是有状态的，当状态发送变化时发送Notification通知Mediator，将数据的变化反映到视图</li></ul><h4 id="在Mediator中处理Notification"><a href="#在Mediator中处理Notification" class="headerlink" title="在Mediator中处理Notification"></a>在Mediator中处理Notification</h4><p>在Mediator实例化时，pureMvc会调用Mediator的listNotificationInterests方法查询关心的Notification，Mediator则在listNotificationInterests方法中以数据的形式返回这些Notification的名称。</p><p>当这个数组例的一个Notification被系统的其他部分发出时，Mediator对象的handleNotification函数会被调用，并传入Notification参数</p><h4 id="Mediator和Proxy之间-Mediator和其他Mediator之间的耦合"><a href="#Mediator和Proxy之间-Mediator和其他Mediator之间的耦合" class="headerlink" title="Mediator和Proxy之间 Mediator和其他Mediator之间的耦合"></a>Mediator和Proxy之间 Mediator和其他Mediator之间的耦合</h4><p>View本质上是显示Model的数据让用户能与之交互，我们期望一种单向依赖，即View依赖于Model，而Model却不依赖于View。View必须知道Model的数据是什么，但是Model却并不需要知道View的任何内容</p><p>虽然Mediator可以任意访问Proxy，通过Proxy的API读取 操作Data Object,但是，由Command来做这些工作可以实现View和Model之间的松耦合</p><p>如果一个Mediator有太多的Proxy及其他数据的操作，那么应该把这些代码重构在Command内，简化Mediator,把业务逻辑放到Command上，这样Command可以被View的其他部分重用，还会实现View和Model之间的松耦合提高扩展性</p><h4 id="用户与ViewComponent和Mediator的交互"><a href="#用户与ViewComponent和Mediator的交互" class="headerlink" title="用户与ViewComponent和Mediator的交互"></a>用户与ViewComponent和Mediator的交互</h4><ul><li>构建值对象用来作为Notification的参数传递</li><li>Mediator收到的Notification包含Proxy处理的值对象</li></ul><h3 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h3><p>一个Proxy有可能管理对本地创建的数据结构的访问。它是Proxy的数据对象。</p><p>RemoteProxy被用来封装与远程的数据访问。Proxy维护那些与RemoteService通信的对象，并控制对这些数据的访问。</p><p>在这种情况下，调用Proxy获取数据的方法，然后等待Proxy在收到远程服务的数据后发出异步Notification</p><h4 id="Proxy的职责"><a href="#Proxy的职责" class="headerlink" title="Proxy的职责"></a>Proxy的职责</h4><p>Proxy封装了数据模型，管理Data Object及对Data Object的访问，不管数据来自哪里，什么类型</p><p>在pureMvc中，Proxy是个被Model注册的简单的数据持有者</p><p>虽然Proxy类已经是完全可用的了，但是通常对于具体的应用你应该编写Proxy的子类，增加操作方法</p><p>一般的Proxy有下面几种类型</p><ul><li>Remote Proxy 当Proxy管理的数据存放在远程终端，通过某种服务访问</li><li>Proxy and Delegate,多个Proxy共享对应该服务的访问，由Delegate封装对服务的控制访问，确保响应正确的返回给相应的请求者</li><li>Protection Proxy 用于数据对象的访问有不同的权限时</li><li>Virtual Proxy 对创建开销很的数据对象进行管理</li><li>Smart Proxy首次访问时载入对象到内容，并计算它被引用的次数，允许锁定确保其他对象不能修改</li></ul><h4 id="避免对Mediator的依赖"><a href="#避免对Mediator的依赖" class="headerlink" title="避免对Mediator的依赖"></a>避免对Mediator的依赖</h4><p>Proxy不监听Notification，也永远不会被通知，因为Proxy并不关心View的状态。但是，Proxy提供的方法和属性让其他角色关心数据</p><p>Proxy对象不应该通过引用 操作 Mediator对象来通知系统它的DataObject发生了改变</p><p>使用Notification的方式，把Model层和系统操作隔离开来，这样View层和Controller层被重构时不会影响到Model层</p><p>但是反过来就不是这样了， Model层的改变很难不影响到View层和Controller层。毕竟，他们存在的目的就是让用户与Model层交互的</p><h4 id="封装域逻辑"><a href="#封装域逻辑" class="headerlink" title="封装域逻辑"></a>封装域逻辑</h4><p>Model层中的改变总会造成View/Controller层的一些重构</p><p>我们把Domain Logic 尽可能放在Proxy中实现，这样尽可能做到Model层与相关联的View层 Controller层的分离</p><p><strong>域逻辑？？？？？</strong></p><p>Proxy不仅仅用来管理数据对象的访问，而且用来封装数据对象的操作使数据维持在一个合法的状态</p><p>比如计算营业税是一个Domain Logic，它应该放在Proxy中实现而不是Mediator或Command</p><h4 id="与Remote-Proxy通信"><a href="#与Remote-Proxy通信" class="headerlink" title="与Remote Proxy通信"></a>与Remote Proxy通信</h4><p>Remote Proxy对象是一个从远程位置获取DataObject的Proxy。这通常意味着我们与它的交互是以异步的方式</p><p>调用远程服务的查询并返回的结果，这个过程通常有以下几步</p><ol><li>一个ViewComponent触发一个事件，发起一个请求</li><li>它的Mediator相应，获取相应的RemoteProxy设置它的查询内容</li><li>Proxy的通过内部的HttpService初始化查询请求</li><li>当服务器返回结果时，HttpService会触发回调，Proxy响应回调</li><li>Proxy发送一个Notification表示请求成功，并把结果封装成值对象传递</li><li>关心这个Notification的Mediator就会响应这个Notification并获得封装的值对象</li><li>然后通过Mediator刷新View</li></ol><h3 id="pureMvc官网的PDF"><a href="#pureMvc官网的PDF" class="headerlink" title="pureMvc官网的PDF"></a>pureMvc官网的PDF</h3><p><a href="/images/CocosCreator%E4%B8%AD%E4%BD%BF%E7%94%A8pureMvc/PureMVC_IIBP_Chinese.pdf">PureMVC_IIBP_Chinese.pdf</a></p><h3 id="pureMvc与CocosCreator的demo"><a href="#pureMvc与CocosCreator的demo" class="headerlink" title="pureMvc与CocosCreator的demo"></a>pureMvc与CocosCreator的demo</h3><p><img src="/images/CocosCreator%E4%B8%AD%E4%BD%BF%E7%94%A8pureMvc/xx.gif" alt="展示图"></p><h4 id="代码的目录结构"><a href="#代码的目录结构" class="headerlink" title="代码的目录结构"></a>代码的目录结构</h4><p><img src="/images/CocosCreator%E4%B8%AD%E4%BD%BF%E7%94%A8pureMvc/image2.jpg" alt="展示图"></p><h4 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h4><ul><li>用来启动pureMvc的地方</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> AppFacade <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./AppFacade&quot;</span>;<br><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Start</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    start () &#123;<br>        AppFacade.getInstance().startup();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="Constans"><a href="#Constans" class="headerlink" title="Constans"></a>Constans</h4><ul><li>用来保存图片下载结果Notification常量的地方</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> ImageDownLoadConstants &#123;<br>    DOWN_IMAGE_SUCCESS = <span class="hljs-string">&#x27;down_image_success&#x27;</span>,<br>    DOWN_IMAGE_FAIL = <span class="hljs-string">&#x27;down_image_fail&#x27;</span>,<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="StartViewMediator"><a href="#StartViewMediator" class="headerlink" title="StartViewMediator"></a>StartViewMediator</h4><ul><li>listNotificationInterests表示要关心的Notification</li><li>handleNotification是处理Notification的地方</li><li>onRegister中加入了按钮的监听<ul><li>构建了一个ImageRequestVo的值对象用来传递需要下载的图片信息</li><li>使用sendNotification发送下载消息给Command(如果直接使用Proxy会增加耦合)</li></ul></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; GameCommand &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./../controller/commands/GameCommand&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; ImageVo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/vos/ImageVo&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; ImageRequestVo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../model/vos/ImageRequestVo&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; ImageDownLoadConstants &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../Constants&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StartViewMediator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">Mediator</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> NAME = <span class="hljs-string">&#x27;StartViewMediator&#x27;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">viewComponent: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(StartViewMediator.NAME, viewComponent)<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> listNotificationInterests() : <span class="hljs-built_in">string</span>[] &#123;<br>        <span class="hljs-keyword">return</span> [<br>            ImageDownLoadConstants.DOWN_IMAGE_SUCCESS,<br>            ImageDownLoadConstants.DOWN_IMAGE_FAIL<br>        ]<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> handleNotification( notification: puremvc.INotification) : <span class="hljs-built_in">void</span> &#123;<br><br>        <span class="hljs-built_in">console</span>.log(notification)<br>        <span class="hljs-keyword">switch</span>(notification.getName()) &#123;<br>            <span class="hljs-keyword">case</span> ImageDownLoadConstants.DOWN_IMAGE_SUCCESS: &#123;<br>                <span class="hljs-keyword">const</span> data: ImageVo = notification.getBody()<br>                <span class="hljs-built_in">this</span>.viewComponent.setSprite(data.texture)<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> onRegister() : <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.viewComponent.testButton.node.on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;click.&#x27;</span>)<br>            <span class="hljs-built_in">this</span>.facade.sendNotification(GameCommand.DOWN_IMAGE, <span class="hljs-keyword">new</span> ImageRequestVo(<span class="hljs-string">&#x27;https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2738245099,987323490&amp;fm=26&amp;gp=0.jpg&#x27;</span>, <span class="hljs-string">&#x27;jpg&#x27;</span>))<br>        &#125;)<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> onRemove() : <span class="hljs-built_in">void</span> &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="StartView"><a href="#StartView" class="headerlink" title="StartView"></a>StartView</h4><ul><li>CocosCreator中的脚步(作为当前系统下的ViewComponent)</li><li>根据生命周期加入了注册和移除Mediator的方法</li><li>暴露了setSprite的方法可以修改图片</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> AppFacade <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../AppFacade&quot;</span>;<br><span class="hljs-keyword">import</span> StartViewMediator <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../StartViewMediator&quot;</span>;<br><br><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StartView</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    <span class="hljs-meta">@property</span>(cc.Button) testButton: cc.Button = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-meta">@property</span>(cc.Sprite) downImage: cc.Sprite = <span class="hljs-literal">null</span><br><br>    start () &#123;<br>        <span class="hljs-comment">// 注册</span><br>        AppFacade.getInstance().registerMediator(<span class="hljs-keyword">new</span> StartViewMediator(<span class="hljs-built_in">this</span>))<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">onDestroy</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-comment">// 移除</span><br>        AppFacade.getInstance().removeMediator(StartViewMediator.NAME);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置图片</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>tex </span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">setSprite</span>(<span class="hljs-params">tex: cc.Texture2D</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.downImage.spriteFrame = <span class="hljs-keyword">new</span> cc.SpriteFrame(tex)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="GameProxy"><a href="#GameProxy" class="headerlink" title="GameProxy"></a>GameProxy</h4><ul><li>NAME命名当前的Proxy</li><li>fetchTest执行当前的下载图片的操作</li><li>在异步下载完成后使用sendNotification发送结果给系统</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; ImageVo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./vos/ImageVo&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; ImageRequestVo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./vos/ImageRequestVo&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; ImageDownLoadConstants &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../Constants&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameProxy</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">Proxy</span>  </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> NAME = <span class="hljs-string">&#x27;GameProxy&#x27;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>(GameProxy.NAME)<br>    &#125;<br>    <span class="hljs-comment">// 重置数据</span><br>    <span class="hljs-keyword">public</span> reset() : <span class="hljs-built_in">void</span> &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">fetchTest</span>(<span class="hljs-params">request: ImageRequestVo</span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;fetchTest&#x27;</span>)<br>        cc.loader.load(&#123;<span class="hljs-attr">url</span>: request.url, <span class="hljs-attr">type</span>: request.ext&#125;, <span class="hljs-function">(<span class="hljs-params">err, tex</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(err) &#123;<br>                <span class="hljs-built_in">this</span>.facade.sendNotification(ImageDownLoadConstants.DOWN_IMAGE_FAIL)<br>                <span class="hljs-keyword">return</span><br>            &#125;<br>            <span class="hljs-built_in">this</span>.facade.sendNotification(ImageDownLoadConstants.DOWN_IMAGE_SUCCESS, <span class="hljs-keyword">new</span> ImageVo(<span class="hljs-string">&#x27;down_image&#x27;</span>, tex))<br>        &#125;)<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ImageVo"><a href="#ImageVo" class="headerlink" title="ImageVo"></a>ImageVo</h4><ul><li>值对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ImageVo</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 初始化</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>name </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>texture </span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> name: <span class="hljs-built_in">string</span>, <span class="hljs-keyword">public</span> texture: cc.Texture2D</span>)</span> &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ImageRequestVo"><a href="#ImageRequestVo" class="headerlink" title="ImageRequestVo"></a>ImageRequestVo</h4><ul><li>值对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ImageRequestVo</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求初始化</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>url </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>ext </span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> url: <span class="hljs-built_in">string</span>, <span class="hljs-keyword">public</span> ext?: <span class="hljs-built_in">string</span></span>)</span> &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="StartupCommand"><a href="#StartupCommand" class="headerlink" title="StartupCommand"></a>StartupCommand</h4><ul><li>启动初始化的Command</li><li>加了多个子Command</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> BootstrapCommands <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bootstrap/BootstrapCommands&quot;</span>;<br><span class="hljs-keyword">import</span> BootstrapModels <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bootstrap/BootstrapModels&quot;</span>;<br><span class="hljs-keyword">import</span> BootstrapViews <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./bootstrap/BootstrapViews&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">StartupCommand</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">MacroCommand</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> initializeMacroCommand(): <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.addSubCommand(BootstrapCommands);<br>        <span class="hljs-built_in">this</span>.addSubCommand(BootstrapModels);<br>        <span class="hljs-built_in">this</span>.addSubCommand(BootstrapViews);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="GameCommand"><a href="#GameCommand" class="headerlink" title="GameCommand"></a>GameCommand</h4><ul><li>执行下载图片操作的Command</li><li>通过execute方法调用Proxy执行下载操作</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; ImageRequestVo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../model/vos/ImageRequestVo&#x27;</span>;<br><span class="hljs-keyword">import</span> GameProxy <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../model/GameProxy&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameCommand</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">SimpleCommand</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>()<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> NAME = <span class="hljs-string">&#x27;GameCommand&#x27;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DOWN_IMAGE = <span class="hljs-string">&#x27;down_image&#x27;</span><br>    <span class="hljs-comment">// 注册的方法</span><br>    <span class="hljs-keyword">public</span> register() : <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.facade.registerCommand(GameCommand.DOWN_IMAGE, GameCommand)<br>    &#125;<br><br>    <span class="hljs-comment">// 执行的方法</span><br>    <span class="hljs-keyword">public</span> execute( notification: puremvc.INotification) : <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-keyword">const</span> gameProxy: GameProxy = &lt;GameProxy&gt;(<span class="hljs-built_in">this</span>.facade.retrieveProxy(GameProxy.NAME))<br>        <span class="hljs-keyword">const</span> data = notification.getBody()<br>        <span class="hljs-keyword">switch</span>(notification.getName()) &#123;<br>            <span class="hljs-keyword">case</span> GameCommand.DOWN_IMAGE: &#123;<br>                gameProxy.fetchTest(data <span class="hljs-keyword">as</span> ImageRequestVo)<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="BootstrapViews"><a href="#BootstrapViews" class="headerlink" title="BootstrapViews"></a>BootstrapViews</h4><ul><li>初始化需要用到的view的Command</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BootstrapViews</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">SimpleCommand</span> /* <span class="hljs-title">implements</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">ICommand</span> */</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> execute(notification: puremvc.INotification): <span class="hljs-built_in">void</span> &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="BootstrapModels"><a href="#BootstrapModels" class="headerlink" title="BootstrapModels"></a>BootstrapModels</h4><ul><li>初始化需要用到的Proxy的Command</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> GameProxy <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../model/GameProxy&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BootstrapModels</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">SimpleCommand</span> /* <span class="hljs-title">implements</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">ICommand</span> */</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>()<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> execute(notification: puremvc.INotification) : <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.facade.registerProxy(<span class="hljs-keyword">new</span> GameProxy())<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="BootstrapCommands"><a href="#BootstrapCommands" class="headerlink" title="BootstrapCommands"></a>BootstrapCommands</h4><ul><li>初始化需要用到的Command的Command</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; GameCommand &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./../commands/GameCommand&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BootstrapCommands</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">SimpleCommand</span> /* <span class="hljs-title">implements</span> <span class="hljs-title">puremvc</span>.<span class="hljs-title">ICommand</span> */</span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>()<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> execute(notification: puremvc.INotification) : <span class="hljs-built_in">void</span> &#123;<br>        (<span class="hljs-keyword">new</span> GameCommand()).register()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pureMvc</tag>
      
      <tag>架构</tag>
      
      <tag>cocoscreator</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小游戏配置子包</title>
    <link href="/posts/f144b02a/"/>
    <url>/posts/f144b02a/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/wechatsubpackage/xx.gif" alt="展示图"></p><h3 id="资源管理器的结构"><a href="#资源管理器的结构" class="headerlink" title="资源管理器的结构"></a>资源管理器的结构</h3><ul><li>package1和package2为子包的文件夹</li><li>sub1和sub2为两个界面(好像不用放到子包里面,反正会打到主包里面)</li><li>代码和资源部分会打包到子包里面</li></ul><blockquote><p>注意：配置为子包后，只有原生资源，例如图片和音频会被最终放到子包中。Prefab、AnimationClip 等 JSON 类型的资源仍然会放在主包里。</p></blockquote><p><img src="/images/wechatsubpackage/image1.png" alt="资源管理器"></p><h3 id="点选文件夹-配置为子包"><a href="#点选文件夹-配置为子包" class="headerlink" title="点选文件夹, 配置为子包"></a>点选文件夹, 配置为子包</h3><p><img src="/images/wechatsubpackage/image2.png" alt="子包属性"></p><h3 id="加载子包的源码部分"><a href="#加载子包的源码部分" class="headerlink" title="加载子包的源码部分"></a>加载子包的源码部分</h3><ul><li>已经屏蔽了重复加载</li><li>_subpackages为子包的集合，不建议直接操作</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * !#en</span><br><span class="hljs-comment"> * Load subpackage with name.</span><br><span class="hljs-comment"> * !#zh</span><br><span class="hljs-comment"> * 通过子包名加载子包代码。</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@method <span class="hljs-variable">loadSubpackage</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;String&#125;</span> <span class="hljs-variable">name</span></span> - Subpackage name</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Function&#125;</span> </span>[completeCallback] -  Callback invoked when subpackage loaded</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Error&#125;</span> </span>completeCallback.error - error information</span><br><span class="hljs-comment"> */</span><br>Downloader.prototype.loadSubpackage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">name, completeCallback</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> pac = <span class="hljs-built_in">this</span>._subpackages[name];<br>    <span class="hljs-keyword">if</span> (pac) &#123;<br>        <span class="hljs-keyword">if</span> (pac.loaded) &#123;<br>            <span class="hljs-keyword">if</span> (completeCallback) completeCallback();<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            downloadScript(&#123;<span class="hljs-attr">url</span>: pac.path + <span class="hljs-string">&#x27;index.js&#x27;</span>&#125;, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (!err) &#123;<br>                    pac.loaded = <span class="hljs-literal">true</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (completeCallback) completeCallback(err);<br>            &#125;);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (completeCallback) &#123;<br>        completeCallback(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">`Can&#x27;t find subpackage <span class="hljs-subst">$&#123;name&#125;</span>`</span>));<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="打包到微信"><a href="#打包到微信" class="headerlink" title="打包到微信"></a>打包到微信</h3><ul><li>注意sub1和sub2是要勾选的</li><li>不然无法直接通过loadScene调用</li><li>使用异步加载scene没有尝试 应该也是一样的</li></ul><p><img src="/images/wechatsubpackage/image3.png" alt="打包界面"></p><h3 id="Demo地址"><a href="#Demo地址" class="headerlink" title="Demo地址"></a>Demo地址</h3><p><a href="https://gitee.com/limo/wechat_subpackage_demo.git">https://gitee.com/limo/wechat_subpackage_demo.git</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小游戏</tag>
      
      <tag>game</tag>
      
      <tag>weChat</tag>
      
      <tag>subPackage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏引擎渲染基础之WebGl</title>
    <link href="/posts/2cdc85be/"/>
    <url>/posts/2cdc85be/</url>
    
    <content type="html"><![CDATA[<h3 id="使用TS开发环境搭建"><a href="#使用TS开发环境搭建" class="headerlink" title="使用TS开发环境搭建"></a>使用TS开发环境搭建</h3><ul><li>parcel网址</li></ul><p><a href="https://parceljs.org/">https://parceljs.org/</a></p><ul><li>安装命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g parcel-bundler<br></code></pre></td></tr></table></figure><ul><li>新建一个index.html文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;webgl&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;400&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;400&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./main.ts&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>同目录下新建一个main.ts的文件</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello ts&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>构建环境</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">parcel index.html<br></code></pre></td></tr></table></figure><ul><li>打开网址</li></ul><p><a href="http://localhost:1234/">http://localhost:1234/</a></p><p>在console里面可以看到打印的”hello ts”, 接下来可以使用ts进行web的开发</p><ul><li>源码地址</li></ul><p><a href="https://gitee.com/limo/basic_webgl/tree/master/basic01">https://gitee.com/limo/basic_webgl/tree/master/basic01</a></p><h3 id="显示一个webgl的黑色屏幕"><a href="#显示一个webgl的黑色屏幕" class="headerlink" title="显示一个webgl的黑色屏幕"></a>显示一个webgl的黑色屏幕</h3><ul><li>工具方法用于不同浏览器获取WebGl的句柄</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取当前的webgl句柄</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;HTMLCanvasElement&#125;</span> <span class="hljs-variable">canvas</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getWebGLContext</span>(<span class="hljs-params">canvas: HTMLCanvasElement</span>) : <span class="hljs-title">WebGLRenderingContext</span> </span>&#123;<br>    <span class="hljs-keyword">let</span> gl = canvas.getContext(<span class="hljs-string">&#x27;webgl&#x27;</span>) || canvas.getContext(<span class="hljs-string">&#x27;experimental-webgl&#x27;</span>)<br>    <span class="hljs-keyword">return</span> gl<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>渲染的方法</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 渲染的方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 清除颜色</span><br>    gl.clearColor(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br>    <span class="hljs-comment">// 使用深度测试</span><br>    gl.enable(gl.DEPTH_TEST)<br>    <span class="hljs-comment">// 清除模式</span><br>    gl.clear(gl.COLOR_BUFFER_BIT  | gl.DEPTH_BUFFER_BIT)<br>    <span class="hljs-comment">// 启动混合模式(后面图片会用到)</span><br>    gl.enable(gl.BLEND);<br>    <span class="hljs-comment">// 设置混合模式</span><br>    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)<br>    <span class="hljs-comment">// 设置视界</span><br>    gl.viewport(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, CANVAS_WIDTH, CANVAS_HEIGHT)<br>    <span class="hljs-comment">// 动画帧方法(多次调用)</span><br>    requestAnimationFrame(render)<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>当前的源码</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 当前的gl句柄</span><br><span class="hljs-keyword">let</span> gl: WebGLRenderingContext = <span class="hljs-literal">null</span><br><span class="hljs-keyword">let</span> CANVAS_WIDTH: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> CANVAS_HEIGHT: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> canvas: HTMLCanvasElement = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;webgl&quot;</span>) <span class="hljs-keyword">as</span> HTMLCanvasElement<br>    CANVAS_WIDTH = canvas.width<br>    CANVAS_HEIGHT = canvas.height<br>    gl = getWebGLContext(canvas)<br>    <span class="hljs-comment">// 调用渲染</span><br>    render()<br>&#125;<br><br>main()<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 渲染的方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 清除颜色</span><br>    gl.clearColor(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br>    gl.enable(gl.DEPTH_TEST)<br>    gl.clear(gl.COLOR_BUFFER_BIT  | gl.DEPTH_BUFFER_BIT)<br>    gl.enable(gl.BLEND);<br>    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)<br>    <span class="hljs-comment">// 设置视界</span><br>    gl.viewport(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, CANVAS_WIDTH, CANVAS_HEIGHT)<br>    <span class="hljs-comment">// gl.drawArrays(gl.TRIANGLES, 0, count)</span><br>    requestAnimationFrame(render)<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取当前的webgl句柄</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;HTMLCanvasElement&#125;</span> <span class="hljs-variable">canvas</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getWebGLContext</span>(<span class="hljs-params">canvas: HTMLCanvasElement</span>) : <span class="hljs-title">WebGLRenderingContext</span> </span>&#123;<br>    <span class="hljs-keyword">let</span> gl = canvas.getContext(<span class="hljs-string">&#x27;webgl&#x27;</span>) || canvas.getContext(<span class="hljs-string">&#x27;experimental-webgl&#x27;</span>)<br>    <span class="hljs-keyword">return</span> gl<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>显示的内容</li></ul><p><img src="/images/basicwebgl/basicwebgl01.png"></p><ul><li>源码地址</li></ul><p><a href="https://gitee.com/limo/basic_webgl/tree/master/basic02">https://gitee.com/limo/basic_webgl/tree/master/basic02</a></p><h3 id="画一个三角形"><a href="#画一个三角形" class="headerlink" title="画一个三角形"></a>画一个三角形</h3><h4 id="创建shader，顶点着色器和片面着色器"><a href="#创建shader，顶点着色器和片面着色器" class="headerlink" title="创建shader，顶点着色器和片面着色器"></a>创建shader，顶点着色器和片面着色器</h4><ul><li>创建并编译shader的工具方法</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建shader程序的方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">type</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">source</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createShader</span>(<span class="hljs-params">gl: WebGLRenderingContext, <span class="hljs-keyword">type</span>: <span class="hljs-built_in">number</span>, source: <span class="hljs-built_in">string</span></span>) </span>&#123;<br>    <span class="hljs-comment">// 通过类型创建着色器对象</span><br>    <span class="hljs-keyword">const</span> shader = gl.createShader(<span class="hljs-keyword">type</span>)<br>    <span class="hljs-comment">// 将着色器代码装载到着色器对象内</span><br>    gl.shaderSource(shader, source)<br>    <span class="hljs-comment">// 编译着色器</span><br>    gl.compileShader(shader)<br>    <span class="hljs-comment">// 检测着色器的编译情况</span><br>    <span class="hljs-keyword">const</span> compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)<br>    <span class="hljs-keyword">if</span>(!compiled)&#123;<br>        <span class="hljs-comment">// 获取当前的错误数据</span><br>        <span class="hljs-keyword">const</span> err = gl.getShaderInfoLog(shader)<br>        <span class="hljs-built_in">console</span>.error(<span class="hljs-string">&#x27;Failed to compile shader: &#x27;</span> + err)<br>        <span class="hljs-comment">// 删除着色器</span><br>        gl.deleteShader(shader)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> shader<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>基础的GLSL源码</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 顶点着色器的源码</span><br><span class="hljs-keyword">const</span> V_SHADER_SOURCE: <span class="hljs-built_in">string</span> =<span class="hljs-string">`</span><br><span class="hljs-string">attribute vec3 a_Position;</span><br><span class="hljs-string">attribute vec3 a_Color;</span><br><span class="hljs-string">varying vec3 v_Color;</span><br><span class="hljs-string">void main() &#123;</span><br><span class="hljs-string">    gl_Position = vec4(a_Position.x, a_Position.y, a_Position.z, 1.0);</span><br><span class="hljs-string">    v_Color = a_Color;</span><br><span class="hljs-string">&#125;`</span><br><br><span class="hljs-comment">// 片段着色器</span><br><span class="hljs-keyword">const</span> F_SHADER_SOURCE: <span class="hljs-built_in">string</span> =<span class="hljs-string">`</span><br><span class="hljs-string">precision mediump float;</span><br><span class="hljs-string">varying vec3 v_Color;</span><br><span class="hljs-string">void main() &#123;</span><br><span class="hljs-string">    gl_FragColor = vec4(v_Color.r, v_Color.g, v_Color.b, 1.0);;</span><br><span class="hljs-string">&#125;`</span><br></code></pre></td></tr></table></figure><h4 id="创建Program-着色器程序"><a href="#创建Program-着色器程序" class="headerlink" title="创建Program 着色器程序"></a>创建Program 着色器程序</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建着色程序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">vShaderSrc</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">fShaderSrc</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;WebGLProgram&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createProgram</span>(<span class="hljs-params">gl: WebGLRenderingContext, vShaderSrc?: <span class="hljs-built_in">string</span>, fShaderSrc?: <span class="hljs-built_in">string</span></span>) : <span class="hljs-title">WebGLProgram</span> </span>&#123;<br>    <span class="hljs-comment">// 加载顶点和片段着色器</span><br>    <span class="hljs-keyword">const</span> vertexShader = createShader(gl, gl.VERTEX_SHADER, vShaderSrc || V_SHADER_SOURCE)<br>    <span class="hljs-keyword">const</span> fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fShaderSrc || F_SHADER_SOURCE)<br>    <span class="hljs-comment">// 创建着色程序</span><br>    <span class="hljs-keyword">const</span> program = gl.createProgram()<br>    <span class="hljs-comment">// 将编译过的着色器附加到着色程序上</span><br>    gl.attachShader(program, vertexShader)<br>    gl.attachShader(program, fragmentShader)<br>    <span class="hljs-comment">// 链接着色程序</span><br>    gl.linkProgram(program)<br>    <span class="hljs-comment">// 使用着色程序</span><br>    gl.useProgram(program)<br>    <span class="hljs-keyword">return</span> program<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="初始化顶点数据和颜色数据的buffer"><a href="#初始化顶点数据和颜色数据的buffer" class="headerlink" title="初始化顶点数据和颜色数据的buffer"></a>初始化顶点数据和颜色数据的buffer</h4><ul><li>初始化顶点和颜色</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化数据</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initBuffer</span>(<span class="hljs-params">gl: WebGLRenderingContext</span>) </span>&#123;<br>    <span class="hljs-comment">// 定义顶点数据</span><br>    <span class="hljs-keyword">const</span> vertices = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>        -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>        -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    ])<br>    <span class="hljs-comment">// 写入顶点</span><br>    <span class="hljs-keyword">const</span> vertexBuffer =  gl.createBuffer();<br>    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);<br>    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);<br>    <span class="hljs-keyword">const</span> a_Position = gl.getAttribLocation(program, <span class="hljs-string">&#x27;a_Position&#x27;</span>);<br>    gl.vertexAttribPointer(a_Position, <span class="hljs-number">3</span>, gl.FLOAT, <span class="hljs-literal">false</span>,<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    gl.enableVertexAttribArray(a_Position);<br><br>    <span class="hljs-comment">// 定义颜色数据</span><br>    <span class="hljs-keyword">const</span> colors = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    ])<br>    <span class="hljs-comment">// 写入颜色</span><br>    <span class="hljs-keyword">const</span> colorBuffer = gl.createBuffer();<br>    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);<br>    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);<br>    <span class="hljs-keyword">const</span> a_Color = gl.getAttribLocation(program, <span class="hljs-string">&#x27;a_Color&#x27;</span>);<br>    gl.vertexAttribPointer(a_Color, <span class="hljs-number">3</span>, gl.FLOAT, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    gl.enableVertexAttribArray(a_Color);<br><br>    count = vertices.length / <span class="hljs-number">3</span><br>    <span class="hljs-built_in">console</span>.log(count)<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>画出缓存的方法 渲染的模式为三角形</li><li>count表示为顶点的数量(3个一组为顶点)</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">gl.drawArrays(gl.TRIANGLES, <span class="hljs-number">0</span>, count)<br></code></pre></td></tr></table></figure><ul><li>当前的源码</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello ts&#x27;</span>)<br><br><span class="hljs-comment">// 顶点着色器的源码</span><br><span class="hljs-keyword">const</span> V_SHADER_SOURCE: <span class="hljs-built_in">string</span> =<span class="hljs-string">`</span><br><span class="hljs-string">attribute vec3 a_Position;</span><br><span class="hljs-string">attribute vec3 a_Color;</span><br><span class="hljs-string">varying vec3 v_Color;</span><br><span class="hljs-string">void main() &#123;</span><br><span class="hljs-string">    gl_Position = vec4(a_Position.x, a_Position.y, a_Position.z, 1.0);</span><br><span class="hljs-string">    v_Color = a_Color;</span><br><span class="hljs-string">&#125;`</span><br><br><span class="hljs-comment">// 片段着色器</span><br><span class="hljs-keyword">const</span> F_SHADER_SOURCE: <span class="hljs-built_in">string</span> =<span class="hljs-string">`</span><br><span class="hljs-string">precision mediump float;</span><br><span class="hljs-string">varying vec3 v_Color;</span><br><span class="hljs-string">void main() &#123;</span><br><span class="hljs-string">    gl_FragColor = vec4(v_Color.r, v_Color.g, v_Color.b, 1.0);;</span><br><span class="hljs-string">&#125;`</span><br><br><br><br><span class="hljs-comment">// 当前的gl句柄</span><br><span class="hljs-keyword">let</span> gl: WebGLRenderingContext = <span class="hljs-literal">null</span><br><span class="hljs-keyword">let</span> program: WebGLProgram = <span class="hljs-literal">null</span><br><span class="hljs-keyword">let</span> CANVAS_WIDTH: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> CANVAS_HEIGHT: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化数据</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initBuffer</span>(<span class="hljs-params">gl: WebGLRenderingContext</span>) </span>&#123;<br>    <span class="hljs-comment">// 定义顶点数据</span><br>    <span class="hljs-keyword">const</span> vertices = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>        -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>        -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>        <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    ])<br>    <span class="hljs-comment">// 写入顶点</span><br>    <span class="hljs-keyword">const</span> vertexBuffer =  gl.createBuffer();<br>    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);<br>    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);<br>    <span class="hljs-keyword">const</span> a_Position = gl.getAttribLocation(program, <span class="hljs-string">&#x27;a_Position&#x27;</span>);<br>    gl.vertexAttribPointer(a_Position, <span class="hljs-number">3</span>, gl.FLOAT, <span class="hljs-literal">false</span>,<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    gl.enableVertexAttribArray(a_Position);<br><br>    <span class="hljs-comment">// 定义颜色数据</span><br>    <span class="hljs-keyword">const</span> colors = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>        <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    ])<br>    <span class="hljs-comment">// 写入颜色</span><br>    <span class="hljs-keyword">const</span> colorBuffer = gl.createBuffer();<br>    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);<br>    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);<br>    <span class="hljs-keyword">const</span> a_Color = gl.getAttribLocation(program, <span class="hljs-string">&#x27;a_Color&#x27;</span>);<br>    gl.vertexAttribPointer(a_Color, <span class="hljs-number">3</span>, gl.FLOAT, <span class="hljs-literal">false</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    gl.enableVertexAttribArray(a_Color);<br><br>    count = vertices.length / <span class="hljs-number">3</span><br>    <span class="hljs-built_in">console</span>.log(count)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> canvas: HTMLCanvasElement = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;webgl&quot;</span>) <span class="hljs-keyword">as</span> HTMLCanvasElement<br>    CANVAS_WIDTH = canvas.width<br>    CANVAS_HEIGHT = canvas.height<br>    gl = getWebGLContext(canvas)<br>    program = createProgram(gl)<br>    initBuffer(gl)<br>    <span class="hljs-comment">// 调用渲染</span><br>    render()<br>&#125;<br><br>main()<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 渲染的方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// 清除颜色</span><br>    gl.clearColor(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br>    gl.enable(gl.DEPTH_TEST)<br>    gl.clear(gl.COLOR_BUFFER_BIT  | gl.DEPTH_BUFFER_BIT)<br>    gl.enable(gl.BLEND);<br>    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)<br>    <span class="hljs-comment">// 设置视界</span><br>    gl.viewport(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, CANVAS_WIDTH, CANVAS_HEIGHT)<br>    gl.drawArrays(gl.TRIANGLES, <span class="hljs-number">0</span>, count)<br>    requestAnimationFrame(render)<br>&#125;<br><br><span class="hljs-comment">/********* 工具方法 ***********/</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取当前的webgl句柄</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;HTMLCanvasElement&#125;</span> <span class="hljs-variable">canvas</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getWebGLContext</span>(<span class="hljs-params">canvas: HTMLCanvasElement</span>) : <span class="hljs-title">WebGLRenderingContext</span> </span>&#123;<br>    <span class="hljs-keyword">let</span> gl = canvas.getContext(<span class="hljs-string">&#x27;webgl&#x27;</span>) || canvas.getContext(<span class="hljs-string">&#x27;experimental-webgl&#x27;</span>)<br>    <span class="hljs-keyword">return</span> gl<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建shader程序的方法</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">type</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">source</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createShader</span>(<span class="hljs-params">gl: WebGLRenderingContext, <span class="hljs-keyword">type</span>: <span class="hljs-built_in">number</span>, source: <span class="hljs-built_in">string</span></span>) </span>&#123;<br>    <span class="hljs-comment">// 通过类型创建着色器对象</span><br>    <span class="hljs-keyword">const</span> shader = gl.createShader(<span class="hljs-keyword">type</span>)<br>    <span class="hljs-comment">// 将着色器代码装载到着色器对象内</span><br>    gl.shaderSource(shader, source)<br>    <span class="hljs-comment">// 编译着色器</span><br>    gl.compileShader(shader)<br>    <span class="hljs-comment">// 检测着色器的编译情况</span><br>    <span class="hljs-keyword">const</span> compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)<br>    <span class="hljs-keyword">if</span>(!compiled)&#123;<br>        <span class="hljs-comment">// 获取当前的错误数据</span><br>        <span class="hljs-keyword">const</span> err = gl.getShaderInfoLog(shader)<br>        <span class="hljs-built_in">console</span>.error(<span class="hljs-string">&#x27;Failed to compile shader: &#x27;</span> + err)<br>        <span class="hljs-comment">// 删除着色器</span><br>        gl.deleteShader(shader)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> shader<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建着色程序</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">vShaderSrc</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">fShaderSrc</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;WebGLProgram&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createProgram</span>(<span class="hljs-params">gl: WebGLRenderingContext, vShaderSrc?: <span class="hljs-built_in">string</span>, fShaderSrc?: <span class="hljs-built_in">string</span></span>) : <span class="hljs-title">WebGLProgram</span> </span>&#123;<br>    <span class="hljs-comment">// 加载顶点和片段着色器</span><br>    <span class="hljs-keyword">const</span> vertexShader = createShader(gl, gl.VERTEX_SHADER, vShaderSrc || V_SHADER_SOURCE)<br>    <span class="hljs-keyword">const</span> fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fShaderSrc || F_SHADER_SOURCE)<br>    <span class="hljs-comment">// 创建着色程序</span><br>    <span class="hljs-keyword">const</span> program = gl.createProgram()<br>    <span class="hljs-comment">// 将编译过的着色器附加到着色程序上</span><br>    gl.attachShader(program, vertexShader)<br>    gl.attachShader(program, fragmentShader)<br>    <span class="hljs-comment">// 链接着色程序</span><br>    gl.linkProgram(program)<br>    <span class="hljs-comment">// 使用着色程序</span><br>    gl.useProgram(program)<br>    <span class="hljs-keyword">return</span> program<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>显示的内容</li></ul><p><img src="/images/basicwebgl/basicwebgl02.png"></p><h4 id="修改顶点颜色"><a href="#修改顶点颜色" class="headerlink" title="修改顶点颜色"></a>修改顶点颜色</h4><p><strong>渲染的颜色为RGB值，3个一组，表示3个顶点的颜色，每个顶点需要单独设置颜色</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 定义颜色数据</span><br><span class="hljs-keyword">const</span> colors = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1.0</span>,<br>])<br></code></pre></td></tr></table></figure><ul><li>显示的内容</li></ul><p><img src="/images/basicwebgl/basicwebgl03.png"></p><h3 id="画出一个矩形"><a href="#画出一个矩形" class="headerlink" title="画出一个矩形"></a>画出一个矩形</h3><h4 id="使用两个三角形拼成一个矩形"><a href="#使用两个三角形拼成一个矩形" class="headerlink" title="使用两个三角形拼成一个矩形"></a>使用两个三角形拼成一个矩形</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 定义顶点数据</span><br><span class="hljs-keyword">const</span> vertices = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    <span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>])<br><span class="hljs-comment">// 定义颜色数据</span><br><span class="hljs-keyword">const</span> colors = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>])<br></code></pre></td></tr></table></figure><ul><li>显示的内容</li></ul><p><img src="/images/basicwebgl/basicwebgl04.png"></p><h4 id="矩形的构造方式"><a href="#矩形的构造方式" class="headerlink" title="矩形的构造方式"></a>矩形的构造方式</h4><ul><li>顶点使用逆时针方式排序</li><li>由两个三角形拼凑而成</li><li>x0 -&gt; x1 -&gt; x2</li><li>y0 -&gt; y1 -&gt; y2</li><li>每个顶点对应一个颜色</li></ul><p><img src="/images/basicwebgl/basicwebgl05.png"></p><h4 id="使用TRIANGLE-STRIP方式构造三角形带"><a href="#使用TRIANGLE-STRIP方式构造三角形带" class="headerlink" title="使用TRIANGLE_STRIP方式构造三角形带"></a>使用TRIANGLE_STRIP方式构造三角形带</h4><ul><li>使用共用顶点的方式构造多个三角形</li><li>第二个三角形可以使用第一个三角形的两个顶点</li><li>使用此方式可以减少顶点的数据量</li><li>但是因为共用顶点，所以顶点颜色也是共用的，只能设置4个顶点颜色，适合创建单身模型</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> vertices = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>    <span class="hljs-comment">// 0.5, 0.5, 0.5,</span><br>    <span class="hljs-comment">// -0.5, -0.5, 0.5,</span><br>    <span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>,<br>])<br><br>  <span class="hljs-comment">// 定义颜色数据</span><br><span class="hljs-keyword">const</span> colors = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>,<br>    <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0</span>,<br>])<br></code></pre></td></tr></table></figure><p><img src="/images/basicwebgl/basicwebgl06.png"></p><ul><li>源码地址</li></ul><p><a href="https://gitee.com/limo/basic_webgl/tree/master/basic03">https://gitee.com/limo/basic_webgl/tree/master/basic03</a></p><h3 id="贴图渲染"><a href="#贴图渲染" class="headerlink" title="贴图渲染"></a>贴图渲染</h3><ul><li>贴图渲染的GLSL源码</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 带图片的顶点着色器的源码</span><br><span class="hljs-keyword">const</span> V_IMAGE_SHADER_SOURCE: <span class="hljs-built_in">string</span> =<span class="hljs-string">`</span><br><span class="hljs-string">attribute vec2 a_Position;</span><br><span class="hljs-string">attribute vec2 a_TexCoord;</span><br><span class="hljs-string">varying vec2 v_TexCoord;</span><br><span class="hljs-string">void main() &#123;</span><br><span class="hljs-string">    gl_Position = vec4(a_Position.x, a_Position.y, 0.5, 1.0);</span><br><span class="hljs-string">    v_TexCoord = a_TexCoord;</span><br><span class="hljs-string">&#125;`</span><br><br><span class="hljs-comment">// 带图片的片段着色器</span><br><span class="hljs-keyword">const</span> F_IMAGE_SHADER_SOURCE: <span class="hljs-built_in">string</span> =<span class="hljs-string">`</span><br><span class="hljs-string">precision mediump float;</span><br><span class="hljs-string">uniform sampler2D u_Sampler;</span><br><span class="hljs-string">varying vec2 v_TexCoord;</span><br><span class="hljs-string">void main() &#123;</span><br><span class="hljs-string">    vec4 c = texture2D(u_Sampler,v_TexCoord);</span><br><span class="hljs-string">    gl_FragColor = c;</span><br><span class="hljs-string">&#125;`</span><br></code></pre></td></tr></table></figure><ul><li>初始化顶点和uv缓存数据</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化带图片的buffer</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initBufferWithImage</span>(<span class="hljs-params">gl: WebGLRenderingContext</span>) </span>&#123;<br>    <span class="hljs-comment">// 定义顶点数据</span><br>    <span class="hljs-keyword">const</span> vertices = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Float32Array</span>([<br>        -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>,<br>        -<span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">0.0</span>, <span class="hljs-number">0.0</span>,<br>        <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">1.0</span>,<br>        <span class="hljs-number">0.5</span>, -<span class="hljs-number">0.5</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">0.0</span>,<br>    ])<br>    <span class="hljs-comment">// 写入顶点</span><br>    <span class="hljs-keyword">const</span> vertexBuffer =  gl.createBuffer()<br>    <span class="hljs-comment">// 获取当前数据的比特长度</span><br>    <span class="hljs-keyword">const</span> bSize = vertices.BYTES_PER_ELEMENT<br>    <span class="hljs-comment">// 绑定缓冲区</span><br>    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)<br>    <span class="hljs-comment">// 写入缓冲区</span><br>    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)<br>    <span class="hljs-comment">// 获得着色程序中的参数的数据位置seek</span><br>    <span class="hljs-keyword">const</span> a_Position = gl.getAttribLocation(program, <span class="hljs-string">&#x27;a_Position&#x27;</span>)<br>    <span class="hljs-keyword">const</span> a_TexCoord = gl.getAttribLocation(program, <span class="hljs-string">&#x27;a_TexCoord&#x27;</span>)<br><br>    gl.vertexAttribPointer(a_Position, <span class="hljs-number">2</span>, gl.FLOAT, <span class="hljs-literal">false</span>, bSize * <span class="hljs-number">4</span>, <span class="hljs-number">0</span>)<br>    gl.vertexAttribPointer(a_TexCoord, <span class="hljs-number">2</span>, gl.FLOAT, <span class="hljs-literal">false</span>, bSize * <span class="hljs-number">4</span>, bSize * <span class="hljs-number">2</span>)<br>    gl.enableVertexAttribArray(a_Position)<br>    gl.enableVertexAttribArray(a_TexCoord)<br><br>    count = vertices.length / <span class="hljs-number">4</span><br>    <span class="hljs-built_in">console</span>.log(count)<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>初始化纹理加载(使用image加载图片)</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化纹理资源</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLRenderingContext&#125;</span> <span class="hljs-variable">gl</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;WebGLProgram&#125;</span> <span class="hljs-variable">program</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">initTextures</span>(<span class="hljs-params">gl: WebGLRenderingContext, program: WebGLProgram</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> texture = gl.createTexture()<br>    <span class="hljs-keyword">const</span> u_Sampler = gl.getUniformLocation(program, <span class="hljs-string">&#x27;u_Sampler&#x27;</span>);<br>    <span class="hljs-keyword">const</span> image = <span class="hljs-keyword">new</span> Image()<br>    image.src = <span class="hljs-string">&quot;./head.jpeg&quot;</span><br>    image.onload = <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-comment">// 对图形进行Y轴的反转</span><br>        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,<span class="hljs-number">1</span>)<br>        <span class="hljs-comment">// 开启0号纹理单元</span><br>        gl.activeTexture(gl.TEXTURE0)<br>        <span class="hljs-comment">// 绑定纹理对象</span><br>        gl.bindTexture(gl.TEXTURE_2D, texture)<br>        <span class="hljs-comment">// 配置纹理参数 可以不用使用2的N次幂</span><br>        gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)<br>        gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)<br>        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)<br>        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)<br>        <span class="hljs-comment">// 配置纹理图像</span><br>        gl.texImage2D(gl.TEXTURE_2D, <span class="hljs-number">0</span>, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image)<br>        <span class="hljs-comment">// 将0号纹理传递给着色器</span><br>        gl.uniform1i(u_Sampler, <span class="hljs-number">0</span>)<br>        render()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>修改main的方法</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> canvas: HTMLCanvasElement = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;webgl&quot;</span>) <span class="hljs-keyword">as</span> HTMLCanvasElement<br>    CANVAS_WIDTH = canvas.width<br>    CANVAS_HEIGHT = canvas.height<br>    gl = getWebGLContext(canvas)<br>    program = createProgram(gl, V_IMAGE_SHADER_SOURCE, F_IMAGE_SHADER_SOURCE)<br>    initBufferWithImage(gl)<br>    initTextures(gl, program)<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/basicwebgl/basicwebgl07.png"></p><ul><li>源码地址</li></ul><p><a href="https://gitee.com/limo/basic_webgl/tree/master/basic04">https://gitee.com/limo/basic_webgl/tree/master/basic04</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>WebGl</tag>
      
      <tag>parcel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏中的平滑算法</title>
    <link href="/posts/685e55c8/"/>
    <url>/posts/685e55c8/</url>
    
    <content type="html"><![CDATA[<h2 id="线性差值"><a href="#线性差值" class="headerlink" title="线性差值"></a>线性差值</h2><h3 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h3><p><img src="/images/smoothalgorithm/graph01.jpg"></p><ul><li>(x0, y0)的位置是当前的位置</li><li>(x1, y1)的位置是服务器收到的位置</li><li>(x, y)的位置是需要设置的位置</li></ul><h3 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h3><p><img src="/images/smoothalgorithm/graph02.jpg"></p><ul><li>通过x值可以获取当前的y值</li><li>x值的获取可以获取(x1 - x0) * (线性的比率) + x0</li></ul><p><img src="/images/smoothalgorithm/graph03.jpg"></p><h2 id="三次样条插值"><a href="#三次样条插值" class="headerlink" title="三次样条插值"></a>三次样条插值</h2><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CocosCreator</tag>
      
      <tag>平滑算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>好用的TypeScript</title>
    <link href="/posts/576eb6bf/"/>
    <url>/posts/576eb6bf/</url>
    
    <content type="html"><![CDATA[<h2 id="TS中的枚举定字符串"><a href="#TS中的枚举定字符串" class="headerlink" title="TS中的枚举定字符串"></a>TS中的枚举定字符串</h2><ul><li>通过给枚举定义字符串可以使用消息管理器</li><li>之前都是用静态对象定义</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; EventEmitter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;events&#x27;</span>;<br><br><span class="hljs-built_in">enum</span> EventType &#123;<br>    OPEN = <span class="hljs-string">&#x27;open&#x27;</span>,<br>    CLOSE = <span class="hljs-string">&#x27;close&#x27;</span>,<br>&#125;<br><br><span class="hljs-keyword">const</span> eventEmitter = <span class="hljs-keyword">new</span> EventEmitter();<br><br>eventEmitter.on(EventType.OPEN, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;call open&#x27;</span>);<br>&#125;);<br><br>eventEmitter.on(EventType.CLOSE, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;call close&#x27;</span>);<br>&#125;);<br><br>eventEmitter.emit(EventType.OPEN);<br>eventEmitter.emit(EventType.CLOSE);<br></code></pre></td></tr></table></figure><h2 id="TS中的单例模式"><a href="#TS中的单例模式" class="headerlink" title="TS中的单例模式"></a>TS中的单例模式</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Singleton</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> _instance: Singleton<br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;&#125;<br>    <span class="hljs-keyword">static</span> getInstance() : Singleton &#123;<br>        <span class="hljs-keyword">if</span> (!Singleton._instance) &#123;<br>            Singleton._instance = <span class="hljs-keyword">new</span> Singleton()<br>        &#125;<br>        <span class="hljs-keyword">return</span> Singleton._instance<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="TS中的可继承单例"><a href="#TS中的可继承单例" class="headerlink" title="TS中的可继承单例"></a>TS中的可继承单例</h2><ul><li>使用函数方法  </li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Singleton</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SingletonTemp</span> </span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> _instance: <span class="hljs-built_in">any</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;&#125;<br>        <span class="hljs-keyword">static</span> getInstance() : T &#123;<br>            <span class="hljs-keyword">if</span> (!SingletonTemp._instance) &#123;<br>                SingletonTemp._instance = <span class="hljs-keyword">new</span> <span class="hljs-built_in">this</span>();<br>            &#125;<br>            <span class="hljs-keyword">return</span> SingletonTemp._instance <span class="hljs-keyword">as</span> T;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> SingletonTemp;<br>&#125; <br></code></pre></td></tr></table></figure><ul><li>使用继承</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Singleton</span>&lt;<span class="hljs-title">Test</span>&gt;() </span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params">msg: <span class="hljs-built_in">string</span></span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(msg);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>测试 </li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">Test.getInstance().print(<span class="hljs-string">&quot;single&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="使用type定义一个简单的pair"><a href="#使用type定义一个简单的pair" class="headerlink" title="使用type定义一个简单的pair"></a>使用type定义一个简单的pair</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">type</span> pair&lt;K, V&gt; = [K, V];<br><span class="hljs-keyword">const</span> p: pair&lt;<span class="hljs-built_in">number</span>, <span class="hljs-built_in">string</span>&gt; = [<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;name&#x27;</span>];<br></code></pre></td></tr></table></figure><h2 id="TS中的Setter和getter实现"><a href="#TS中的Setter和getter实现" class="headerlink" title="TS中的Setter和getter实现"></a>TS中的Setter和getter实现</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">private</span> _name: <span class="hljs-built_in">string</span><br><br><span class="hljs-keyword">set</span> <span class="hljs-title">name</span>(<span class="hljs-params">val: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-built_in">this</span>._name = val<br>&#125;<br><br><span class="hljs-keyword">get</span> <span class="hljs-title">name</span>() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._name<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="TS函数模拟传入对象指针"><a href="#TS函数模拟传入对象指针" class="headerlink" title="TS函数模拟传入对象指针"></a>TS函数模拟传入对象指针</h2><ul><li>使用对象解构完成对象指针传入</li><li>将当前对象的引用在函数做修改</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> data = &#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">changeData</span>(<span class="hljs-params">&#123;data: <span class="hljs-built_in">any</span>&#125; : <span class="hljs-built_in">any</span></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> d = &#123;<br>        <span class="hljs-attr">id</span>: <span class="hljs-number">2</span><br>    &#125;<br>    data = d;<br>&#125;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;data before&#x27;</span>, data);<br>changeData(&#123;data&#125;);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;data after&#x27;</span>,data);<br></code></pre></td></tr></table></figure><ul><li>输出内容</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ts">data before &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> &#125;<br>data after &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>typescript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开始使用typeorm</title>
    <link href="/posts/3f556577/"/>
    <url>/posts/3f556577/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;nodejs操作数据库，有许多方便的orm框架。Sequlize的操作就很方便，define定义数据表的类型，就能方便的使用Sequlize提供的各种方法。不过v5版本进行了比较大的改动，使用typescript开发不是很方便，最后发现了typeorm，它和typescript简直是绝配。</p><h2 id="安装typeorm"><a href="#安装typeorm" class="headerlink" title="安装typeorm"></a>安装typeorm</h2><p><strong>typeorm</strong>的官网：<a href="https://typeorm.io/">https://typeorm.io/</a>  </p><ul><li>安装typeorm</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install reflect-metadata<br>npm install typeorm<br></code></pre></td></tr></table></figure><ul><li>安装数据库操作类库(这里使用的Sqlite3)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install sqlite3<br></code></pre></td></tr></table></figure><h2 id="先新建实体类"><a href="#先新建实体类" class="headerlink" title="先新建实体类"></a>先新建实体类</h2><ul><li>Photo.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Entity, PrimaryGeneratedColumn, Column &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Photo</span> </span>&#123;<br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-meta">@Column</span>(&#123;<br>        <span class="hljs-attr">length</span>: <span class="hljs-number">100</span><br>    &#125;)<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-string">&#x27;text&#x27;</span>)<br>    <span class="hljs-attr">description</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">filename</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-string">&quot;double&quot;</span>)<br>    <span class="hljs-attr">views</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">isPublished</span>: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-string">&#x27;simple-array&#x27;</span>)<br>    <span class="hljs-attr">times</span>: <span class="hljs-built_in">string</span>[] = [];<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-string">&quot;simple-json&quot;</span>)<br>    <span class="hljs-attr">profile</span>: &#123; <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">nickname</span>: <span class="hljs-built_in">string</span> &#125; = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attr">nickname</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="入口类"><a href="#入口类" class="headerlink" title="入口类"></a>入口类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;reflect-metadata&#x27;</span>; <span class="hljs-comment">// 需要优先导入</span><br><span class="hljs-keyword">import</span> &#123; createConnection, getManager &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;typeorm&#x27;</span><br><span class="hljs-keyword">import</span> path <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;path&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Photo &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./entity/Photo&#x27;</span>;<br><br><span class="hljs-comment">// 创建连接的方法</span><br>createConnection(&#123;<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;sqlite&#x27;</span>, <span class="hljs-comment">// 数据库的相关配置</span><br>    <span class="hljs-attr">database</span>: path.resolve(__dirname, <span class="hljs-string">&#x27;./db.sqlite&#x27;</span>),<br>    <span class="hljs-attr">entities</span>: [<br>        Photo <span class="hljs-comment">// 需要加入的实体</span><br>    ],<br>    <span class="hljs-attr">synchronize</span>: <span class="hljs-literal">true</span>,<br>&#125;).then(<span class="hljs-keyword">async</span> connection =&gt; &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;连接成功&#x27;</span>);<br>    <span class="hljs-comment">// 可以进行相关的操作</span><br>&#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;连接失败&#x27;</span>, err);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="简单的增删改查"><a href="#简单的增删改查" class="headerlink" title="简单的增删改查"></a>简单的增删改查</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 增</span><br><span class="hljs-keyword">let</span> photo = <span class="hljs-keyword">new</span> Photo();<br>photo.name = <span class="hljs-string">&quot;Me and Bears&quot;</span>;<br>photo.description = <span class="hljs-string">&quot;I am near polar bears&quot;</span>;<br>photo.filename = <span class="hljs-string">&quot;photo-with-bears.jpg&quot;</span>;<br>photo.views = <span class="hljs-number">1</span>;<br>photo.isPublished = <span class="hljs-literal">true</span>;<br>photo.times.push(<span class="hljs-string">&#x27;entitys1&#x27;</span>);<br>photo.times.push(<span class="hljs-string">&#x27;entitys2&#x27;</span>);<br>photo.times.push(<span class="hljs-string">&#x27;entitys3&#x27;</span>);<br>photo.profile.name = <span class="hljs-string">&#x27;link&#x27;</span>;<br>photo.profile.nickname = <span class="hljs-string">&#x27;me&#x27;</span>;<br>getManager().save(photo);<br></code></pre></td></tr></table></figure><p><img src="/images/typeormstart/typeorm1.png"></p><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> photoRepository = getManager().getRepository(Photo);<br><span class="hljs-keyword">const</span> photo = <span class="hljs-keyword">await</span> photoRepository.findOne(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span><br>&#125;);<br><span class="hljs-keyword">if</span>(photo)&#123;<br>    photo.views = <span class="hljs-number">10086</span>;<br>    photoRepository.save(photo);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/typeormstart/typeorm3.png"></p><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> photoRepository = getManager().getRepository(Photo);<br><span class="hljs-keyword">const</span> photos = <span class="hljs-keyword">await</span> photoRepository.findOne(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span><br>&#125;)<br><span class="hljs-built_in">console</span>.log(photos);<br></code></pre></td></tr></table></figure><p><img src="/images/typeormstart/typeorm2.png"></p><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> photoRepository = getManager().getRepository(Photo);<br><span class="hljs-keyword">const</span> photo = <span class="hljs-keyword">await</span> photoRepository.findOne(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-number">1</span><br>&#125;);<br><span class="hljs-keyword">if</span>(photo) &#123;<br>    photoRepository.remove(photo);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/typeormstart/typeorm4.png"></p><h2 id="SQLITE的管理工具"><a href="#SQLITE的管理工具" class="headerlink" title="SQLITE的管理工具"></a>SQLITE的管理工具</h2><ul><li>SQLLiteStudio(简单方便的Sqlite管理工具) </li></ul><p>下载地址:<a href="https://www.cr173.com/soft/94247.html">https://www.cr173.com/soft/94247.html</a></p><p><img src="/images/typeormstart/typeorm5.png"></p><h2 id="Column的类型"><a href="#Column的类型" class="headerlink" title="Column的类型"></a>Column的类型</h2><ul><li>一些特殊类型 不用自己写入 自动生成</li><li>时区好像有问题 是格林威治的时区</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 创建时间</span><br><span class="hljs-meta">@CreateDateColumn</span>()<br><span class="hljs-attr">createDate</span>: <span class="hljs-built_in">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><span class="hljs-comment">// 修改时间</span><br><span class="hljs-meta">@UpdateDateColumn</span>()<br><span class="hljs-attr">updateDate</span>: <span class="hljs-built_in">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br><span class="hljs-comment">// 数据版本</span><br><span class="hljs-meta">@VersionColumn</span>()<br><span class="hljs-attr">version</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><ul><li>枚举类型的字段</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> UserRole &#123;<br>    ADMIN = <span class="hljs-string">&quot;admin&quot;</span>,<br>    EDITOR = <span class="hljs-string">&quot;editor&quot;</span>,<br>    GHOST = <span class="hljs-string">&quot;ghost&quot;</span><br>&#125;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>(&#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;enum&quot;</span>,<br>        <span class="hljs-attr">enum</span>: UserRole,<br>        <span class="hljs-attr">default</span>: UserRole.GHOST<br>    &#125;)<br>    <span class="hljs-attr">role</span>: UserRole<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>简单的数组类型</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-string">&quot;simple-array&quot;</span>)<br>    <span class="hljs-attr">names</span>: <span class="hljs-built_in">string</span>[];<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>简单的json类型</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-string">&quot;simple-json&quot;</span>)<br>    <span class="hljs-attr">profile</span>: &#123; <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">nickname</span>: <span class="hljs-built_in">string</span> &#125;;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>实体类的继承</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Content</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">title</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">description</span>: <span class="hljs-built_in">string</span>;<br><br>&#125;<br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Photo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Content</span> </span>&#123;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">size</span>: <span class="hljs-built_in">string</span>;<br><br>&#125;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Question</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Content</span> </span>&#123;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">answersCount</span>: <span class="hljs-built_in">number</span>;<br><br>&#125;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Post</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Content</span> </span>&#123;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">viewCount</span>: <span class="hljs-built_in">number</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="使用实体类作为类型"><a href="#使用实体类作为类型" class="headerlink" title="使用实体类作为类型"></a>使用实体类作为类型</h2><ul><li>名字的实体</li><li>只是用来表示类型</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, Column&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Name</span> </span>&#123;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">first</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">last</span>: <span class="hljs-built_in">string</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>使用类型</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;Name&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./Name&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@Column</span>(<span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> Name)<br>    <span class="hljs-attr">name</span>: Name;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">isActive</span>: <span class="hljs-built_in">boolean</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="一对一的单向实体连接"><a href="#一对一的单向实体连接" class="headerlink" title="一对一的单向实体连接"></a>一对一的单向实体连接</h2><ul><li>建立一个实体类</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Profile</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">gender</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">photo</span>: <span class="hljs-built_in">string</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>加入一个实体类的连接</li><li>profile的内容连接到User类里面</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;Profile&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./Profile&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@OneToOne</span>(<span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> Profile)<br>    <span class="hljs-meta">@JoinColumn</span>()<br>    <span class="hljs-attr">profile</span>: Profile;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>先实例化Profile并存入数据库</li><li>将profile加入user</li><li>将user加入到数据库</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> profile = <span class="hljs-keyword">new</span> Profile();<br>profile.gender = <span class="hljs-string">&quot;male&quot;</span>;<br>profile.photo = <span class="hljs-string">&quot;me.jpg&quot;</span>;<br><span class="hljs-keyword">await</span> connection.manager.save(profile);<br><br><span class="hljs-keyword">const</span> user = <span class="hljs-keyword">new</span> User();<br>user.name = <span class="hljs-string">&#x27;Joe Smith&#x27;</span>;<br>user.profile = profile;<br><span class="hljs-keyword">await</span> connection.manager.save(user);<br></code></pre></td></tr></table></figure><ul><li>查询出用户的数据和profile</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> users = <span class="hljs-keyword">await</span> connection<br>    .getRepository(User)<br>    .createQueryBuilder(<span class="hljs-string">&quot;user&quot;</span>)<br>    .leftJoinAndSelect(<span class="hljs-string">&quot;user.profile&quot;</span>, <span class="hljs-string">&quot;profile&quot;</span>)<br>    .getMany();<br></code></pre></td></tr></table></figure><h2 id="一对一的双向实体连接"><a href="#一对一的双向实体连接" class="headerlink" title="一对一的双向实体连接"></a>一对一的双向实体连接</h2><ul><li>先将一个需要绑定的实体指向对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column, OneToOne&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;User&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./User&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Profile</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">gender</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">photo</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@OneToOne</span>(<span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> User, <span class="hljs-function"><span class="hljs-params">user</span> =&gt;</span> user.profile) <span class="hljs-comment">// specify inverse side as a second parameter</span><br>    <span class="hljs-attr">user</span>: User;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>对象中需要有个column来保存profile</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;Profile&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./Profile&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@OneToOne</span>(<span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> Profile, <span class="hljs-function"><span class="hljs-params">profile</span> =&gt;</span> profile.user) <span class="hljs-comment">// specify inverse side as a second parameter</span><br>    <span class="hljs-meta">@JoinColumn</span>()<br>    <span class="hljs-attr">profile</span>: Profile;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>通过profile查询绑定的用户数据</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> profiles = <span class="hljs-keyword">await</span> connection<br>.getRepository(Profile)<br>.createQueryBuilder(<span class="hljs-string">&quot;profile&quot;</span>)<br>.where(<span class="hljs-string">&quot;user.id = :id&quot;</span>, &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> &#125;)<br>.leftJoinAndSelect(<span class="hljs-string">&quot;profile.user&quot;</span>, <span class="hljs-string">&quot;user&quot;</span>)<br>.getOne();<br><span class="hljs-built_in">console</span>.log(profiles);<br></code></pre></td></tr></table></figure><h2 id="多对单-单对多的实体连接"><a href="#多对单-单对多的实体连接" class="headerlink" title="多对单/单对多的实体连接"></a>多对单/单对多的实体连接</h2><ul><li>每张图片对应一个用户</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column, ManyToOne&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;User&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./User&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Photo</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">url</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@ManyToOne</span>(<span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> User, <span class="hljs-function"><span class="hljs-params">user</span> =&gt;</span> user.photos)<br>    <span class="hljs-attr">user</span>: User;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>每个用户可以对应多张照片</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123;Entity, PrimaryGeneratedColumn, Column, OneToMany&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;typeorm&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;Photo&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./Photo&quot;</span>;<br><br><span class="hljs-meta">@Entity</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br><br>    <span class="hljs-meta">@PrimaryGeneratedColumn</span>()<br>    <span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>;<br><br>    <span class="hljs-meta">@Column</span>()<br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br><br>    <span class="hljs-meta">@OneToMany</span>(<span class="hljs-function"><span class="hljs-params">type</span> =&gt;</span> Photo, <span class="hljs-function"><span class="hljs-params">photo</span> =&gt;</span> photo.user)<br>    <span class="hljs-attr">photos</span>: Photo[];<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="PS一些ts的配置"><a href="#PS一些ts的配置" class="headerlink" title="PS一些ts的配置"></a>PS一些ts的配置</h2><ul><li>使用typeorm的设置</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    ...<br>    <span class="hljs-attr">&quot;strictPropertyInitialization&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">&quot;experimentalDecorators&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;emitDecoratorMetadata&quot;</span>: <span class="hljs-literal">true</span>,<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>typescript</tag>
      
      <tag>typeorm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator自制控件补全计划</title>
    <link href="/posts/c4c9da0e/"/>
    <url>/posts/c4c9da0e/</url>
    
    <content type="html"><![CDATA[<h2 id="炫彩背景"><a href="#炫彩背景" class="headerlink" title="炫彩背景"></a>炫彩背景</h2><ul><li>这里引用了一个js库 需要作为插件加入ccc</li></ul><p><a href="/images/mycccwidget/trianglify.min.js">trianglify.min.js</a></p><ul><li>摇杆控制代码</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-keyword">declare</span> <span class="hljs-keyword">let</span> Trianglify: <span class="hljs-built_in">any</span>;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DrawBg</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br>    start () &#123;<br>        <span class="hljs-keyword">const</span> polyArray = Trianglify(&#123;<span class="hljs-attr">width</span>: <span class="hljs-number">960</span>, <span class="hljs-attr">height</span>: <span class="hljs-number">640</span>, <span class="hljs-attr">cell_size</span>: <span class="hljs-number">60</span>&#125;);<br>        <span class="hljs-keyword">const</span> ctx = <span class="hljs-built_in">this</span>.node.getComponent(cc.Graphics);<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; polyArray.length; j++)&#123;        <br>            <span class="hljs-keyword">let</span> block = polyArray[j];<br>            <span class="hljs-keyword">let</span> color = cc.color().fromHEX(block[<span class="hljs-number">0</span>]);<br>            <span class="hljs-keyword">let</span> pointArrays=block[<span class="hljs-number">1</span>];<br>            ctx.moveTo(pointArrays[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>], pointArrays[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]);<br>            ctx.lineTo(pointArrays[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>], pointArrays[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]);<br>            ctx.lineTo(pointArrays[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>], pointArrays[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>]);<br>            ctx.fillColor = color;<br>            ctx.fill();<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="摇杆-4方向-8方向-全方向"><a href="#摇杆-4方向-8方向-全方向" class="headerlink" title="摇杆 4方向 | 8方向 | 全方向"></a>摇杆 4方向 | 8方向 | 全方向</h2><p><a href="/images/mycccwidget/Joystick.zip">Joystick.zip</a></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> &#123;ccclass, property&#125; = cc._decorator;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 触摸类型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> JoystickTouchType&#123;<br>    DEFAULT,<br>    FOLLOW<br>&#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 方向类型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> JoystickDirectionType&#123;<br>    FOUR,<br>    EIGHT,<br>    ALL<br>&#125;;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 具体方位</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-built_in">enum</span> JoystickDirection&#123;<br>    CENTER,<br>    UP,<br>    DOWN,<br>    LEFT,<br>    RIGHT,<br>    UPPER_LEFT,<br>    UPPER_RIGHT,<br>    LOWER_LEFT,<br>    LOWER_RIGHT<br>&#125;<br><br><span class="hljs-meta">@ccclass</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JoystickCtrl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">cc</span>.<span class="hljs-title">Component</span> </span>&#123;<br><br><br>    <span class="hljs-meta">@property</span>(cc.Node) target: cc.Node = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-meta">@property</span>(cc.Node) joystickBar:cc.Node = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-meta">@property</span>(cc.Node) joystickBG:cc.Node = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-meta">@property</span>(<span class="hljs-number">0</span>) radius:<span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-meta">@property</span>(&#123;<br>        <span class="hljs-attr">tooltip</span>:<span class="hljs-string">&quot;触摸模式&quot;</span>,<br>        <span class="hljs-attr">type</span>:cc.Enum(JoystickTouchType)<br>    &#125;)  touchType:JoystickTouchType = JoystickTouchType.DEFAULT;<br><br>    <span class="hljs-meta">@property</span>(&#123;<br>        <span class="hljs-attr">tooltip</span>:<span class="hljs-string">&quot;方向模式&quot;</span>,<br>        <span class="hljs-attr">type</span>:cc.Enum(JoystickDirectionType)<br>    &#125;)  directionType:JoystickDirectionType = JoystickDirectionType.ALL;<br>    <br>    <span class="hljs-meta">@property</span>([cc.Component.EventHandler]) joystickHandler:<span class="hljs-built_in">Array</span>&lt;cc.Component.EventHandler&gt; = [];<br><br><br>    joystickDir: JoystickDirection = JoystickDirection.CENTER;<br>    <br>    _angle:<span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br>    curAngle:<span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br>    curDistance:<span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br>    startPos:cc.Vec2 = cc.v2(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>    _isOnTouchStart: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br>    _touchId: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br><br>    onLoad () &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.radius == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>.radius = <span class="hljs-built_in">this</span>.joystickBG.width/<span class="hljs-number">2</span><br>        &#125;<br>        <span class="hljs-built_in">this</span>.curDistance = <span class="hljs-number">0</span><br>        <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-number">0</span><br>        <span class="hljs-built_in">this</span>.startPos = <span class="hljs-built_in">this</span>.node.position<br>        <span class="hljs-built_in">this</span>.node.opacity = <span class="hljs-number">50</span>;<br>    &#125;<br><br>    start () &#123;<br><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 注册输入</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">registerInput</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>        <span class="hljs-keyword">let</span> self = <span class="hljs-built_in">this</span>;<br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_START,<span class="hljs-function">(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>) =&gt;</span> &#123;<br>            <span class="hljs-comment">// let flag =  self.onTouchBegan(eventTouch)</span><br>            <span class="hljs-comment">// if (!flag)&#123;</span><br>            <span class="hljs-comment">//     eventTouch.stopPropagation();</span><br>            <span class="hljs-comment">// &#125;</span><br>        &#125;);<br><br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_MOVE,<span class="hljs-function">(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>) =&gt;</span> &#123;<br>            self.onTouchMoved(eventTouch)<br>        &#125;);<br><br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_END,<span class="hljs-function">(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>) =&gt;</span> &#123;<br>            self.onTouchEnded(eventTouch)<br>        &#125;);<br><br>        <span class="hljs-comment">// this._listener = cc.eventManager.addListener(&#123;</span><br>        <span class="hljs-comment">//     event: cc.EventListener.TOUCH_ONE_BY_ONE,</span><br>        <span class="hljs-comment">//     onTouchBegan: function(touch, event) &#123;</span><br>        <span class="hljs-comment">//         return self.onTouchBegan(touch, event)</span><br>        <span class="hljs-comment">//     &#125;,</span><br>        <span class="hljs-comment">//     onTouchMoved: function(touch, event) &#123;</span><br>        <span class="hljs-comment">//         self.onTouchMoved(touch, event)</span><br>        <span class="hljs-comment">//     &#125;,</span><br>        <span class="hljs-comment">//     onTouchEnded: function(touch, event) &#123;</span><br>        <span class="hljs-comment">//         self.onTouchEnded(touch, event)</span><br>        <span class="hljs-comment">//     &#125;</span><br>        <span class="hljs-comment">// &#125;,self.node);</span><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">onTouchBegan</span>(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>)</span>&#123;<br>        <span class="hljs-comment">//如果触摸类型为FOLLOW，则摇控杆的位置为触摸位置,触摸开始时候现形</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.touchType == JoystickTouchType.FOLLOW)&#123;<br>            <span class="hljs-keyword">let</span> touchPos = <span class="hljs-built_in">this</span>.node.parent.convertToNodeSpaceAR(eventTouch.getLocation())<br>            <span class="hljs-built_in">this</span>.node.setPosition(touchPos);<br>            <span class="hljs-built_in">this</span>._isOnTouchStart = <span class="hljs-literal">true</span>;<br>            <span class="hljs-built_in">this</span>._touchId = eventTouch.getID();<br>        &#125; <span class="hljs-keyword">else</span> &#123;                    <br>            <span class="hljs-comment">//把触摸点坐标转换为相对与目标的模型坐标</span><br>            <span class="hljs-keyword">let</span> touchPos = <span class="hljs-built_in">this</span>.node.convertToNodeSpaceAR(eventTouch.getLocation());<br>            <span class="hljs-comment">//点与圆心的距离</span><br>            <span class="hljs-keyword">let</span> distance =  touchPos.sub(cc.v2(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)).mag();<br>            <span class="hljs-comment">//如果点与圆心距离小于圆的半径,返回true</span><br>            <span class="hljs-keyword">if</span>(distance &lt; <span class="hljs-built_in">this</span>.radius ) &#123;<br>                <span class="hljs-keyword">if</span>(distance&gt;<span class="hljs-number">20</span>)&#123;<br>                    <span class="hljs-built_in">this</span>.node.opacity = <span class="hljs-number">255</span><br>                    <span class="hljs-built_in">this</span>.joystickBar.setPosition(touchPos);<br>                    <span class="hljs-comment">//更新角度</span><br>                    <span class="hljs-built_in">this</span>.getAngle(touchPos)<br>                &#125;<br>                <span class="hljs-built_in">this</span>._isOnTouchStart = <span class="hljs-literal">true</span>;<br>                <span class="hljs-built_in">this</span>._touchId = eventTouch.getID();<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onTouchMoved</span>(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>)</span>&#123;<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>._isOnTouchStart || <span class="hljs-built_in">this</span>._touchId != eventTouch.getID())&#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-comment">//把触摸点坐标转换为相对与目标的模型坐标</span><br>            <span class="hljs-keyword">let</span> touchPos = <span class="hljs-built_in">this</span>.node.convertToNodeSpaceAR(eventTouch.getLocation())<br>            <span class="hljs-comment">//点与圆心的距离</span><br>            <span class="hljs-keyword">let</span> distance = touchPos.sub(cc.v2(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)).mag();<br>    <br>            <span class="hljs-comment">//如果点与圆心距离小于圆的半径,控杆跟随触摸点</span><br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.radius &gt;= distance)&#123;<br>                <span class="hljs-keyword">if</span>(distance&gt;<span class="hljs-number">20</span>)&#123;<br>                    <span class="hljs-built_in">this</span>.node.opacity = <span class="hljs-number">255</span>;<br>                    <span class="hljs-built_in">this</span>.joystickBar.setPosition(touchPos);<br>                    <span class="hljs-comment">//更新角度</span><br>                    <span class="hljs-built_in">this</span>.getAngle(touchPos)<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">//this.node.opacity = 50</span><br>                    <span class="hljs-comment">//摇杆恢复位置</span><br>                    <span class="hljs-built_in">this</span>.joystickBar.setPosition(cc.v2(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>));<br>                    <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-literal">null</span>;<br>                    <span class="hljs-comment">//调用角度变化回调</span><br>                    cc.Component.EventHandler.emitEvents(<span class="hljs-built_in">this</span>.joystickHandler, <span class="hljs-built_in">this</span>.curAngle,<span class="hljs-built_in">this</span>.joystickDir);<br>                    <br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">//触摸监听目标</span><br>                <span class="hljs-keyword">let</span> x = <span class="hljs-built_in">Math</span>.cos(<span class="hljs-built_in">this</span>.getRadian(touchPos)) * <span class="hljs-built_in">this</span>.radius;<br>                <span class="hljs-keyword">let</span> y = <span class="hljs-built_in">Math</span>.sin(<span class="hljs-built_in">this</span>.getRadian(touchPos)) * <span class="hljs-built_in">this</span>.radius;<br>                <span class="hljs-keyword">if</span>(touchPos.x&gt;<span class="hljs-number">0</span> &amp;&amp; touchPos.y&lt;<span class="hljs-number">0</span>)&#123;<br>                    y *= -<span class="hljs-number">1</span>;<br>                &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(touchPos.x&lt;<span class="hljs-number">0</span> &amp;&amp; touchPos.y&lt;<span class="hljs-number">0</span>)&#123;<br>                    y *= -<span class="hljs-number">1</span>;<br>                &#125;<br>    <br>                <span class="hljs-built_in">this</span>.joystickBar.setPosition(cc.v2(x, y));<br>                <span class="hljs-comment">//更新角度</span><br>                <span class="hljs-built_in">this</span>.getAngle(touchPos)<br>            &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onTouchEnded</span>(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>._isOnTouchStart || <span class="hljs-built_in">this</span>._touchId != eventTouch.getID()) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.CENTER;<br>        <span class="hljs-comment">//如果触摸类型为FOLLOW，离开触摸后隐藏</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.touchType == JoystickTouchType.FOLLOW)&#123;<br>            <span class="hljs-comment">//this.node.position = this.startPos</span><br>        &#125;<br>        <span class="hljs-keyword">let</span> time = <span class="hljs-built_in">this</span>.joystickBar.position.sub(cc.v2(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)).mag()/<span class="hljs-number">500</span>;<br>        <br>        <span class="hljs-comment">//摇杆恢复位置</span><br>        <span class="hljs-built_in">this</span>.joystickBar.runAction(cc.sequence(<br>            cc.moveTo(<span class="hljs-built_in">Math</span>.abs(time),cc.v2(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)),<br>            cc.callFunc(<span class="hljs-function">()=&gt;</span>&#123;<br>                <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-literal">null</span><br>                <span class="hljs-built_in">this</span>.node.opacity = <span class="hljs-number">50</span><br>                <span class="hljs-comment">//调用角度变化回调</span><br>                cc.Component.EventHandler.emitEvents(<span class="hljs-built_in">this</span>.joystickHandler, <span class="hljs-built_in">this</span>.curAngle,<span class="hljs-built_in">this</span>.joystickDir);<br>            &#125;)<br>        ));<br>        <span class="hljs-built_in">this</span>._isOnTouchStart = <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">onTouchCancel</span>(<span class="hljs-params">eventTouch: cc.Event.EventTouch</span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>.onTouchEnded(eventTouch);<br>    &#125;<br><br>    <span class="hljs-comment">//计算角度并返回</span><br>    <span class="hljs-function"><span class="hljs-title">getAngle</span>(<span class="hljs-params">point:cc.Vec2</span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>._angle =  <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">this</span>.getRadian(point)*<span class="hljs-number">180</span>/<span class="hljs-built_in">Math</span>.PI);<br>        <br>        <span class="hljs-keyword">if</span>(point.x&gt;<span class="hljs-number">0</span> &amp;&amp; point.y&lt;<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>._angle = <span class="hljs-number">360</span> - <span class="hljs-built_in">this</span>._angle;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(point.x&lt;<span class="hljs-number">0</span> &amp;&amp; point.y&lt;<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>._angle = <span class="hljs-number">360</span> - <span class="hljs-built_in">this</span>._angle;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(point.x&lt;<span class="hljs-number">0</span> &amp;&amp; point.y==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>._angle = <span class="hljs-number">180</span>;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(point.x&gt;<span class="hljs-number">0</span> &amp;&amp; point.y==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>._angle = <span class="hljs-number">0</span>;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(point.x==<span class="hljs-number">0</span> &amp;&amp; point.y&gt;<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>._angle = <span class="hljs-number">90</span>;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(point.x==<span class="hljs-number">0</span> &amp;&amp; point.y&lt;<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>._angle = <span class="hljs-number">270</span>;<br>        &#125;<br>        <span class="hljs-built_in">this</span>.updateCurAngle()<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._angle;<br>    &#125;<br>    <span class="hljs-comment">//计算弧度并返回</span><br>    <span class="hljs-function"><span class="hljs-title">getRadian</span>(<span class="hljs-params">point:cc.Vec2</span>)</span>&#123;<br>        <span class="hljs-keyword">let</span> curZ = <span class="hljs-built_in">Math</span>.sqrt(<span class="hljs-built_in">Math</span>.pow(point.x,<span class="hljs-number">2</span>)+<span class="hljs-built_in">Math</span>.pow(point.y,<span class="hljs-number">2</span>));<br>        <span class="hljs-keyword">let</span> radian = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span>(curZ==<span class="hljs-number">0</span>)&#123;<br>            radian = <span class="hljs-number">0</span>;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            radian = <span class="hljs-built_in">Math</span>.acos(point.x/curZ);<br>        &#125;<br>        <span class="hljs-keyword">return</span> radian;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">updateCurAngle</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">switch</span> (<span class="hljs-built_in">this</span>.directionType)&#123;<br>            <span class="hljs-keyword">case</span> JoystickDirectionType.FOUR:<br>                <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-built_in">this</span>.fourDirections();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> JoystickDirectionType.EIGHT:<br>                <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-built_in">this</span>.eightDirections();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> JoystickDirectionType.ALL:<br>                <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.CENTER;<br>                <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-built_in">this</span>._angle<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span> :<br>                <span class="hljs-built_in">this</span>.curAngle = <span class="hljs-literal">null</span><br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-comment">//调用角度变化回调</span><br>        cc.Component.EventHandler.emitEvents(<span class="hljs-built_in">this</span>.joystickHandler, <span class="hljs-built_in">this</span>.curAngle,<span class="hljs-built_in">this</span>.joystickDir);<br>    &#125;<br>    <span class="hljs-comment">//四个方向移动(上下左右)</span><br>    <span class="hljs-function"><span class="hljs-title">fourDirections</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">45</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">135</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.UP;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">90</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">225</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">315</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.DOWN;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">270</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">225</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">180</span> || <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">135</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">180</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.LEFT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">180</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">360</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">315</span> || <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">45</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.RIGHT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">eightDirections</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">67.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">112.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.UP;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">90</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">247.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">292.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.DOWN;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">270</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">202.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">180</span> || <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">157.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">180</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.LEFT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">180</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">360</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">337.5</span> || <span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">22.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.RIGHT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">112.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">157.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.UPPER_LEFT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">135</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">22.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">67.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.UPPER_RIGHT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">45</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">202.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">247.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.LOWER_LEFT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">225</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._angle &gt;= <span class="hljs-number">292.5</span> &amp;&amp; <span class="hljs-built_in">this</span>._angle &lt;= <span class="hljs-number">337.5</span>)&#123;<br>            <span class="hljs-built_in">this</span>.joystickDir = JoystickDirection.LOWER_RIGHT;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">315</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">onEnable</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-comment">// this.registerInput();</span><br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_START, <span class="hljs-built_in">this</span>.onTouchBegan, <span class="hljs-built_in">this</span>);<br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_MOVE, <span class="hljs-built_in">this</span>.onTouchMoved, <span class="hljs-built_in">this</span>);<br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_END, <span class="hljs-built_in">this</span>.onTouchEnded, <span class="hljs-built_in">this</span>);<br>        <span class="hljs-built_in">this</span>.target.on(cc.Node.EventType.TOUCH_CANCEL, <span class="hljs-built_in">this</span>.onTouchCancel, <span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-title">onDisable</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>.target.off(cc.Node.EventType.TOUCH_START, <span class="hljs-built_in">this</span>.onTouchBegan, <span class="hljs-built_in">this</span>);<br>        <span class="hljs-built_in">this</span>.target.off(cc.Node.EventType.TOUCH_MOVE, <span class="hljs-built_in">this</span>.onTouchMoved, <span class="hljs-built_in">this</span>);<br>        <span class="hljs-built_in">this</span>.target.off(cc.Node.EventType.TOUCH_END, <span class="hljs-built_in">this</span>.onTouchEnded, <span class="hljs-built_in">this</span>);<br>        <span class="hljs-built_in">this</span>.target.off(cc.Node.EventType.TOUCH_CANCEL, <span class="hljs-built_in">this</span>.onTouchCancel, <span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// update (dt) &#123;&#125;,</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Toast工具类"><a href="#Toast工具类" class="headerlink" title="Toast工具类"></a>Toast工具类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 吐司的显示任务</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">interface</span> ToastTask&#123;<br>    <span class="hljs-attr">text</span>:<span class="hljs-built_in">string</span>,<br>    <span class="hljs-attr">duration</span>:<span class="hljs-built_in">number</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 吐司的实体</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ToastObject</span></span>&#123;<br>    <span class="hljs-keyword">private</span> _text;<br>    <span class="hljs-keyword">private</span> _duration;<br>    <span class="hljs-keyword">private</span> _gravity;<br>    <span class="hljs-keyword">private</span> _x = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">private</span> _y = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 初始化</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>text </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>duration </span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">text:<span class="hljs-built_in">string</span>,duration:<span class="hljs-built_in">number</span></span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>._text = text;<br>        <span class="hljs-built_in">this</span>._duration = duration;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 显示Toast的方法</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">show</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span>(Toast.showing)&#123;<br>            <span class="hljs-keyword">let</span> text = <span class="hljs-built_in">this</span>._text;<br>            <span class="hljs-keyword">let</span> duration = <span class="hljs-built_in">this</span>._duration;<br>            Toast.TaskArray.push(&#123;text,duration&#125;);<br><br>            <span class="hljs-comment">//超过5条之前的直接舍弃</span><br>            <span class="hljs-keyword">if</span>(Toast.TaskArray.length&gt;Toast.MAX_ARRAY)&#123;<br>                Toast.TaskArray.shift();<br>            &#125;<br><br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-comment">// 加载背景纹理</span><br>        <span class="hljs-keyword">if</span> (Toast.bgSpriteFrame == <span class="hljs-literal">null</span>) &#123;<br>                cc.loader.load(&#123; <span class="hljs-string">&#x27;uuid&#x27;</span>: <span class="hljs-string">&#x27;b43ff3c2-02bb-4874-81f7-f2dea6970f18&#x27;</span> &#125;,<span class="hljs-function">(<span class="hljs-params">error, result</span>)=&gt;</span>&#123;<br>                        <span class="hljs-keyword">if</span> (error) &#123;<br>                            cc.error(error);<br>                            <span class="hljs-keyword">return</span>;<br>                        &#125;<br>                        Toast.bgSpriteFrame = <span class="hljs-keyword">new</span> cc.SpriteFrame(result);<br>                        Toast.bgSpriteFrame.insetTop = <span class="hljs-number">3</span>;<br>                        Toast.bgSpriteFrame.insetBottom = <span class="hljs-number">3</span>;<br>                        Toast.bgSpriteFrame.insetLeft = <span class="hljs-number">4</span>;<br>                        Toast.bgSpriteFrame.insetRight = <span class="hljs-number">4</span>;<br>                        <span class="hljs-comment">//加载完再调用</span><br>                        <span class="hljs-built_in">this</span>.show();<br>                    &#125;);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        Toast.showing = <span class="hljs-literal">true</span>;<br>        <span class="hljs-comment">// canvas</span><br>        <span class="hljs-keyword">var</span> canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);<br>        <span class="hljs-keyword">var</span> width = canvas.node.width;<br>        <span class="hljs-keyword">var</span> height = canvas.node.height;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._duration === <span class="hljs-literal">undefined</span>) &#123;<br>            <span class="hljs-built_in">this</span>._duration = Toast.LENGTH_SHORT;<br>        &#125;<br>        <span class="hljs-comment">// 背景图片设置</span><br>        <span class="hljs-keyword">let</span> bgNode = <span class="hljs-keyword">new</span> cc.Node();<br>        <span class="hljs-comment">// 背景图片透明度</span><br>        bgNode.opacity = <span class="hljs-number">200</span>;<br>        <span class="hljs-keyword">let</span> bgSprite = bgNode.addComponent(cc.Sprite);<br>        bgSprite.type = cc.Sprite.Type.SLICED;<br>        <span class="hljs-keyword">let</span> bgLayout = bgNode.addComponent(cc.Layout);<br>        bgLayout.resizeMode = cc.Layout.ResizeMode.CONTAINER;<br><br>        <span class="hljs-comment">// Lable文本格式设置</span><br>        <span class="hljs-keyword">let</span> textNode = <span class="hljs-keyword">new</span> cc.Node();<br>        <span class="hljs-keyword">let</span> textLabel = textNode.addComponent(cc.Label);<br>        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;<br>        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;<br>        textLabel.fontSize = <span class="hljs-number">20</span>;<br>        textLabel.string = <span class="hljs-built_in">this</span>._text;<br><br>        <span class="hljs-comment">//背景图片与文本内容的间距</span><br>        <span class="hljs-keyword">let</span> hPadding = textLabel.fontSize / <span class="hljs-number">8</span>;<br>        <span class="hljs-keyword">let</span> vPadding = <span class="hljs-number">2</span>;<br>        bgLayout.paddingLeft = hPadding;<br>        bgLayout.paddingRight = hPadding;<br>        bgLayout.paddingTop = vPadding;<br>        bgLayout.paddingBottom = vPadding;<br><br>        <span class="hljs-comment">// 当文本宽度过长时，设置为自动换行格式</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._text.length * textLabel.fontSize &gt; width / <span class="hljs-number">3</span>) &#123;<br>            textNode.width = width / <span class="hljs-number">3</span>;<br>            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;<br>        &#125;<br><br>        bgNode.addChild(textNode);<br>        <span class="hljs-keyword">if</span> (Toast.bgSpriteFrame) &#123;<br>            bgSprite.spriteFrame = Toast.bgSpriteFrame;<br>        &#125;<br>        <span class="hljs-comment">// gravity 设置Toast显示的位置</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.CENTER) &#123;<br>            textNode.y = <span class="hljs-number">0</span>;<br>            textNode.x = <span class="hljs-number">0</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.TOP) &#123;<br>            textNode.y = textNode.y + (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.TOP_LEFT) &#123;<br>            textNode.y = textNode.y + (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>            textNode.x = textNode.x + (width / <span class="hljs-number">5</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.LEFT) &#123;<br>            textNode.x = textNode.x + (width / <span class="hljs-number">5</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.BOTTOM_LEFT) &#123;<br>            textNode.y = textNode.y - (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>            textNode.x = textNode.x + (width / <span class="hljs-number">5</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.BOTTOM) &#123;<br>            textNode.y = textNode.y - (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.BOTTOM_RIGHT) &#123;<br>            textNode.y = textNode.y - (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>            textNode.x = textNode.x - (width / <span class="hljs-number">5</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.RIGHT) &#123;<br>            textNode.x = textNode.x - (width / <span class="hljs-number">5</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>._gravity == Toast.TOP_RIGHT) &#123;<br>            textNode.y = textNode.y + (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>            textNode.x = textNode.x - (width / <span class="hljs-number">5</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 默认情况 BOTTOM</span><br>            textNode.y = textNode.y - (height / <span class="hljs-number">5</span>) * <span class="hljs-number">2</span>;<br>        &#125;<br>        textNode.x = textNode.x + <span class="hljs-built_in">this</span>._x;<br>        textNode.y = textNode.y + <span class="hljs-built_in">this</span>._y;<br><br>        canvas.node.addChild(bgNode);<br><br>        <span class="hljs-keyword">let</span> finished = cc.callFunc(<span class="hljs-function">(<span class="hljs-params">target</span>)=&gt;</span>&#123;<br>            bgNode.destroy();<br>            Toast.showing = <span class="hljs-literal">false</span>;<br>            <span class="hljs-comment">//showing</span><br>            <span class="hljs-keyword">if</span>(Toast.TaskArray.length==<span class="hljs-number">0</span>)&#123;<br><br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">let</span> task =  Toast.TaskArray.shift();<br>                Toast.showText(task.text,task.duration);<br>            &#125;<br>        &#125;);<br>        <span class="hljs-keyword">let</span> action = cc.sequence(cc.moveBy(<span class="hljs-built_in">this</span>._duration,cc.v2(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)),cc.fadeOut(<span class="hljs-number">0.3</span>), finished);<br>        bgNode.runAction(action);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>gravity 位置</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>x 偏移值x</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>y 偏移值y</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">setGravity</span>(<span class="hljs-params">gravity:<span class="hljs-built_in">number</span>, x:<span class="hljs-built_in">number</span>, y:<span class="hljs-built_in">number</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._gravity = gravity;<br>        <span class="hljs-built_in">this</span>._x = x;<br>        <span class="hljs-built_in">this</span>._y = y;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Toast</span></span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 时长</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> LENGTH_LONG:<span class="hljs-built_in">number</span> = <span class="hljs-number">3.5</span>;<br>    <span class="hljs-keyword">static</span> LENGTH_SHORT:<span class="hljs-built_in">number</span> = <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 位置</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> CENTER:<span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">static</span> TOP:<span class="hljs-built_in">number</span> = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">static</span> TOP_LEFT:<span class="hljs-built_in">number</span> = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">static</span> LEFT:<span class="hljs-built_in">number</span> = <span class="hljs-number">3</span>;<br>    <span class="hljs-keyword">static</span> BOTTOM_LEFT:<span class="hljs-built_in">number</span> = <span class="hljs-number">4</span>;<br>    <span class="hljs-keyword">static</span> BOTTOM:<span class="hljs-built_in">number</span> = <span class="hljs-number">5</span>;<br>    <span class="hljs-keyword">static</span> BOTTOM_RIGHT:<span class="hljs-built_in">number</span> = <span class="hljs-number">6</span>;<br>    <span class="hljs-keyword">static</span> RIGHT:<span class="hljs-built_in">number</span> = <span class="hljs-number">7</span>;<br>    <span class="hljs-keyword">static</span> TOP_RIGHT:<span class="hljs-built_in">number</span> = <span class="hljs-number">8</span>;<br><br>    <span class="hljs-keyword">static</span> bgSpriteFrame:cc.SpriteFrame = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-comment">//任务队列</span><br>    <span class="hljs-keyword">static</span> TaskArray:<span class="hljs-built_in">Array</span>&lt;ToastTask&gt; = [];<br><br>    <span class="hljs-comment">//是否正在显示</span><br>    <span class="hljs-keyword">static</span> showing:<span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-keyword">static</span> MAX_ARRAY:<span class="hljs-built_in">number</span> = <span class="hljs-number">5</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * 创建一个吐司</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>text 文本</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>duration 时长</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">makeText</span>(<span class="hljs-params">text:<span class="hljs-built_in">string</span>,duration:<span class="hljs-built_in">number</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ToastObject(text, duration);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * 显示一个吐司</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>text 文本</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>duration 时长</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">showText</span>(<span class="hljs-params">text:<span class="hljs-built_in">string</span>,duration:<span class="hljs-built_in">number</span></span>)</span>&#123;<br>        Toast.makeText(text, duration).show();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cocos creator</tag>
      
      <tag>utils</tag>
      
      <tag>widget</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator工具类补全计划</title>
    <link href="/posts/fb21768a/"/>
    <url>/posts/fb21768a/</url>
    
    <content type="html"><![CDATA[<h2 id="Http工具类"><a href="#Http工具类" class="headerlink" title="Http工具类"></a>Http工具类</h2><ul><li>get 方式访问数据接口</li><li>post 方式范围数据接口</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 回调函数定义</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@interface <span class="hljs-variable">ResponseTextCallback</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">interface</span> ResponseObjCallback &#123;<br>    (err: <span class="hljs-built_in">string</span>, data?: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">void</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Http的基础操作类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">Http</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Http</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 基础的url</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@type <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Http</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> BASE_URL: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;http://127.0.0.1:3000&#x27;</span>;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * http get获取方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Http</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> get = <span class="hljs-function">(<span class="hljs-params">route: <span class="hljs-built_in">string</span>, param: <span class="hljs-built_in">object</span> = &#123;&#125;, callback?: ResponseObjCallback</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> xhr = cc.loader.getXMLHttpRequest();<br>        xhr.timeout = <span class="hljs-number">5000</span>;<br>        <span class="hljs-keyword">let</span> url: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">let</span> paramStr = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> param) &#123;<br>            <span class="hljs-keyword">if</span> (paramStr === <span class="hljs-string">&#x27;&#x27;</span>)&#123;<br>                paramStr = <span class="hljs-string">&#x27;?&#x27;</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (paramStr !== <span class="hljs-string">&#x27;?&#x27;</span>) &#123;<br>                paramStr += <span class="hljs-string">&#x27;&amp;&#x27;</span>;<br>            &#125;<br>            paramStr += key + <span class="hljs-string">&#x27;=&#x27;</span> + param[key];<br>        &#125;<br>        url = <span class="hljs-string">`<span class="hljs-subst">$&#123;Http.BASE_URL&#125;</span><span class="hljs-subst">$&#123;route&#125;</span><span class="hljs-subst">$&#123;<span class="hljs-built_in">encodeURI</span>(paramStr)&#125;</span>`</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;http get url:&#x27;</span>, url);<br>        xhr.open(<span class="hljs-string">&quot;GET&quot;</span>, url, <span class="hljs-literal">true</span>);<br>        xhr.setRequestHeader(<span class="hljs-string">&#x27;Content-type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (cc.sys.isNative)&#123;<br>            xhr.setRequestHeader(<span class="hljs-string">&quot;Accept-Encoding&quot;</span>, <span class="hljs-string">&quot;gzip,deflate&quot;</span>);<br>        &#125;<br>        xhr.onreadystatechange = <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(xhr.readyState === <span class="hljs-number">4</span> &amp;&amp; (xhr.status &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.status &lt; <span class="hljs-number">300</span>))&#123;<br>                callback(<span class="hljs-literal">null</span>, <span class="hljs-built_in">JSON</span>.parse(xhr.responseText))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                callback(<span class="hljs-string">&#x27;error&#x27;</span>)<br>            &#125;<br>        &#125;;<br>        xhr.send();<br>    &#125;;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * http post 方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Http</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> post = <span class="hljs-function">(<span class="hljs-params">route: <span class="hljs-built_in">string</span>, param: <span class="hljs-built_in">object</span> = &#123;&#125;, callback?: ResponseObjCallback</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> xhr = cc.loader.getXMLHttpRequest();<br>        xhr.timeout = <span class="hljs-number">5000</span>;<br>        <span class="hljs-keyword">let</span> url: <span class="hljs-built_in">string</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">let</span> paramStr = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> param) &#123;<br>            <span class="hljs-keyword">if</span> (paramStr !== <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>                paramStr += <span class="hljs-string">&#x27;&amp;&#x27;</span>;<br>            &#125;<br>            paramStr += key + <span class="hljs-string">&#x27;=&#x27;</span> + param[key];<br>        &#125;<br>        url = <span class="hljs-string">`<span class="hljs-subst">$&#123;Http.BASE_URL&#125;</span><span class="hljs-subst">$&#123;route&#125;</span>`</span><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;http post url:&#x27;</span>, url);<br>        xhr.open(<span class="hljs-string">&quot;POST&quot;</span>, url, <span class="hljs-literal">true</span>);<br>        xhr.setRequestHeader(<span class="hljs-string">&#x27;Content-type&#x27;</span>,<span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (cc.sys.isNative)&#123;<br>            <span class="hljs-comment">// xhr.setRequestHeader(&quot;Accept-Encoding&quot;, &quot;gzip,deflate&quot;, &quot;text/html;charset=UTF-8&quot;);</span><br>            xhr.setRequestHeader(<span class="hljs-string">&quot;Accept-Encoding&quot;</span>, <span class="hljs-string">&quot;gzip,deflate&quot;</span>);<br>        &#125;<br>        xhr.onreadystatechange = <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(xhr.readyState === <span class="hljs-number">4</span> &amp;&amp; (xhr.status &gt;= <span class="hljs-number">200</span> &amp;&amp; xhr.status &lt; <span class="hljs-number">300</span>))&#123;<br>                callback(<span class="hljs-literal">null</span>, <span class="hljs-built_in">JSON</span>.parse(xhr.responseText))<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                callback(<span class="hljs-string">&#x27;error&#x27;</span>)<br>            &#125;<br>        &#125;;<br>        xhr.send(<span class="hljs-built_in">encodeURI</span>(paramStr));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="UserData本地数据类"><a href="#UserData本地数据类" class="headerlink" title="UserData本地数据类"></a>UserData本地数据类</h2><ul><li>localStorage的简单封装</li><li>优化ts的智能提示</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author <span class="hljs-variable">limo</span></span></span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户本地数据操作类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">UserData</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserData</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>key 键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> get(key: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">return</span> cc.sys.localStorage.getItem(key);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 保存数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>key 键</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>value 值</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">put</span>(<span class="hljs-params">key:<span class="hljs-built_in">string</span>, value:<span class="hljs-built_in">string</span></span>)</span> &#123;<br>        cc.sys.localStorage.setItem(key, value);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param </span>key 键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">remove</span>(<span class="hljs-params">key: <span class="hljs-built_in">string</span></span>)</span> &#123;<br>        cc.sys.localStorage.removeItem(key) ;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="I18N国际化工具类"><a href="#I18N国际化工具类" class="headerlink" title="I18N国际化工具类"></a>I18N国际化工具类</h2><ul><li>这里引用了一个js库 需要作为插件加入ccc</li></ul><p><a href="/images/mycccutils/polyglot.min.js">polyglot.min.js</a></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author <span class="hljs-variable">limo</span></span></span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 国际化工具类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">I18n</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">declare</span> <span class="hljs-keyword">let</span> Polyglot : <span class="hljs-built_in">any</span>;<br><span class="hljs-keyword">const</span> polyglot = <span class="hljs-keyword">new</span> Polyglot();<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">I18n</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 初始化的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;object&#125;</span> </span>[obj=&#123;&#125;]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">I18n</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">obj: <span class="hljs-built_in">object</span> = &#123;&#125;</span>)</span> &#123;<br>        polyglot.extend(obj);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取配置字符串的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;object&#125;</span> </span>[obj=&#123;&#125;]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">I18n</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> t(key: <span class="hljs-built_in">string</span>, param?: <span class="hljs-built_in">object</span>): <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">if</span> (param) &#123;<br>            <span class="hljs-keyword">return</span> polyglot.t(key, param)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> polyglot .t(key)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="BASE64工具类"><a href="#BASE64工具类" class="headerlink" title="BASE64工具类"></a>BASE64工具类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 数据表</span><br><span class="hljs-keyword">const</span> _keyStr: <span class="hljs-built_in">string</span> =<span class="hljs-string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * utf8的编码</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">str</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_utf8_encode</span>(<span class="hljs-params">str: <span class="hljs-built_in">string</span></span>) </span>&#123;<br>    str = str.replace(<span class="hljs-regexp">/\r\n/g</span>, <span class="hljs-string">&quot;\n&quot;</span>);<br>    <span class="hljs-keyword">let</span> utftext = <span class="hljs-string">&quot;&quot;</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> n = <span class="hljs-number">0</span>; n &lt; str.length; n++) &#123;<br><br>        <span class="hljs-keyword">let</span> c = str.charCodeAt(n);<br><br>        <span class="hljs-keyword">if</span> (c &lt; <span class="hljs-number">128</span>) &#123;<br>            utftext += <span class="hljs-built_in">String</span>.fromCharCode(c);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((c &gt; <span class="hljs-number">127</span>) &amp;&amp; (c &lt; <span class="hljs-number">2048</span>)) &#123;<br>            utftext += <span class="hljs-built_in">String</span>.fromCharCode((c &gt;&gt; <span class="hljs-number">6</span>) | <span class="hljs-number">192</span>);<br>            utftext += <span class="hljs-built_in">String</span>.fromCharCode((c &amp; <span class="hljs-number">63</span>) | <span class="hljs-number">128</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            utftext += <span class="hljs-built_in">String</span>.fromCharCode((c &gt;&gt; <span class="hljs-number">12</span>) | <span class="hljs-number">224</span>);<br>            utftext += <span class="hljs-built_in">String</span>.fromCharCode(((c &gt;&gt; <span class="hljs-number">6</span>) &amp; <span class="hljs-number">63</span>) | <span class="hljs-number">128</span>);<br>            utftext += <span class="hljs-built_in">String</span>.fromCharCode((c &amp; <span class="hljs-number">63</span>) | <span class="hljs-number">128</span>);<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-keyword">return</span> utftext;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * utf8的解码</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">str</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">_utf8_decode</span>(<span class="hljs-params">utftext: <span class="hljs-built_in">string</span></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> str = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> c = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> c1 = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> c2 = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">let</span> c3 = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (i &lt; utftext.length) &#123;<br>        c = utftext.charCodeAt(i);<br>        <span class="hljs-keyword">if</span> (c &lt; <span class="hljs-number">128</span>) &#123;<br>            str += <span class="hljs-built_in">String</span>.fromCharCode(c);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((c &gt; <span class="hljs-number">191</span>) &amp;&amp; (c &lt; <span class="hljs-number">224</span>)) &#123;<br>            c2 = utftext.charCodeAt(i + <span class="hljs-number">1</span>);<br>            str += <span class="hljs-built_in">String</span>.fromCharCode(((c &amp; <span class="hljs-number">31</span>) &lt;&lt; <span class="hljs-number">6</span>) | (c2 &amp; <span class="hljs-number">63</span>));<br>            i += <span class="hljs-number">2</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            c2 = utftext.charCodeAt(i + <span class="hljs-number">1</span>);<br>            c3 = utftext.charCodeAt(i + <span class="hljs-number">2</span>);<br>            str += <span class="hljs-built_in">String</span>.fromCharCode(((c &amp; <span class="hljs-number">15</span>) &lt;&lt; <span class="hljs-number">12</span>) | ((c2 &amp; <span class="hljs-number">63</span>) &lt;&lt; <span class="hljs-number">6</span>) | (c3 &amp; <span class="hljs-number">63</span>));<br>            i += <span class="hljs-number">3</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> str;<br>&#125;<br><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * Base64的工具类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">Base64</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Base64</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * base64的编码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">input</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Base64</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">encode</span>(<span class="hljs-params">input: <span class="hljs-built_in">string</span></span>)</span>&#123;<br>        <span class="hljs-keyword">let</span> output = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">let</span> chr1, chr2, chr3, enc1, enc2, enc3, enc4;<br>        <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br>        input = _utf8_encode(input);<br>        <span class="hljs-keyword">while</span> (i &lt; input.length) &#123;<br>            chr1 = input.charCodeAt(i++);<br>            chr2 = input.charCodeAt(i++);<br>            chr3 = input.charCodeAt(i++);<br>            enc1 = chr1 &gt;&gt; <span class="hljs-number">2</span>;<br>            enc2 = ((chr1 &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">4</span>) | (chr2 &gt;&gt; <span class="hljs-number">4</span>);<br>            enc3 = ((chr2 &amp; <span class="hljs-number">15</span>) &lt;&lt; <span class="hljs-number">2</span>) | (chr3 &gt;&gt; <span class="hljs-number">6</span>);<br>            enc4 = chr3 &amp; <span class="hljs-number">63</span>;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(chr2)) &#123;<br>                enc3 = enc4 = <span class="hljs-number">64</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(chr3)) &#123;<br>                enc4 = <span class="hljs-number">64</span>;<br>            &#125;<br>            output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);<br>        &#125;<br>        <span class="hljs-keyword">return</span> output;<br>    &#125;<br><br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * base64的解码</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> </span>input </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns </span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Base64</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">decode</span>(<span class="hljs-params">input: <span class="hljs-built_in">string</span></span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> output = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">let</span> chr1, chr2, chr3;<br>        <span class="hljs-keyword">let</span> enc1, enc2, enc3, enc4;<br>        <span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br>        input = input.replace(<span class="hljs-regexp">/[^A-Za-z0-9\+\/\=]/g</span>, <span class="hljs-string">&quot;&quot;</span>);<br>        <span class="hljs-keyword">while</span> (i &lt; input.length) &#123;<br>            enc1 = _keyStr.indexOf(input.charAt(i++));<br>            enc2 = _keyStr.indexOf(input.charAt(i++));<br>            enc3 = _keyStr.indexOf(input.charAt(i++));<br>            enc4 = _keyStr.indexOf(input.charAt(i++));<br>            chr1 = (enc1 &lt;&lt; <span class="hljs-number">2</span>) | (enc2 &gt;&gt; <span class="hljs-number">4</span>);<br>            chr2 = ((enc2 &amp; <span class="hljs-number">15</span>) &lt;&lt; <span class="hljs-number">4</span>) | (enc3 &gt;&gt; <span class="hljs-number">2</span>);<br>            chr3 = ((enc3 &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">6</span>) | enc4;<br>            output = output + <span class="hljs-built_in">String</span>.fromCharCode(chr1);<br>            <span class="hljs-keyword">if</span> (enc3 != <span class="hljs-number">64</span>) &#123;<br>                output = output + <span class="hljs-built_in">String</span>.fromCharCode(chr2);<br>            &#125;<br>            <span class="hljs-keyword">if</span> (enc4 != <span class="hljs-number">64</span>) &#123;<br>                output = output + <span class="hljs-built_in">String</span>.fromCharCode(chr3);<br>            &#125;<br>        &#125;<br>        output = _utf8_decode(output);<br>        <span class="hljs-keyword">return</span> output;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="简单的凯撒加密-基于base64"><a href="#简单的凯撒加密-基于base64" class="headerlink" title="简单的凯撒加密(基于base64)"></a>简单的凯撒加密(基于base64)</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> _encrypt_password:<span class="hljs-built_in">string</span> = <span class="hljs-string">&quot;dsa02sfdbffwr&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CaesarCipher</span></span>&#123;<br>    <span class="hljs-keyword">static</span> encode(str:<span class="hljs-built_in">string</span>):<span class="hljs-built_in">string</span>&#123;<br>        <span class="hljs-keyword">let</span> temp = Base64.encode(str);<br>        <span class="hljs-keyword">let</span> codeStr = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;temp.length;i++)&#123;<br>            codeStr += <span class="hljs-built_in">String</span>.fromCharCode(temp.charCodeAt(i)-_encrypt_password.charCodeAt(i%_encrypt_password.length));  <br>        &#125;<br>        <span class="hljs-keyword">return</span> codeStr;<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> decode(str:<span class="hljs-built_in">string</span>):<span class="hljs-built_in">string</span>&#123;<br>        <span class="hljs-keyword">let</span> decodeStr = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;str.length;i++)&#123;<br>            decodeStr += <span class="hljs-built_in">String</span>.fromCharCode(str.charCodeAt(i)+_encrypt_password.charCodeAt(i%_encrypt_password.length));  <br>        &#125;<br>        decodeStr = Base64.decode(decodeStr);<br>        <span class="hljs-keyword">return</span> decodeStr;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="EventEmitter事件触发器"><a href="#EventEmitter事件触发器" class="headerlink" title="EventEmitter事件触发器"></a>EventEmitter事件触发器</h2><ul><li>实现了事件on/emit的绑定和触发</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 事件触发器</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">EventEmitter</span> </span>&#123;<br>    <span class="hljs-comment">// 事件的集合</span><br>    <span class="hljs-keyword">private</span> _events: <span class="hljs-built_in">any</span> = &#123;&#125;;<br>    <span class="hljs-comment">// 当前事件的编号</span><br>    <span class="hljs-keyword">private</span> _count = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 绑定当前的事件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">eventName</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">callback</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">is_one</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">content</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventManager</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_bind</span>(<span class="hljs-params">eventName: <span class="hljs-built_in">string</span>, callback: <span class="hljs-built_in">any</span>, is_one:<span class="hljs-built_in">number</span>, context: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(eventName) !== <span class="hljs-string">&#x27;string&#x27;</span> || <span class="hljs-keyword">typeof</span>(callback) !== <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;_bind args is not safe!&#x27;</span>)<br>        &#125;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">Object</span>.prototype.hasOwnProperty.call(<span class="hljs-built_in">this</span>._events,eventName)) &#123;<br>            <span class="hljs-built_in">this</span>._events[eventName] = &#123;&#125;;<br>        &#125;<br>        <span class="hljs-built_in">this</span>._events[eventName][++<span class="hljs-built_in">this</span>._count] = [callback, is_one, context];<br>        <span class="hljs-keyword">return</span> [eventName, <span class="hljs-built_in">this</span>._count];<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 遍历事件的事件的绑定</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;[]&#125;</span> <span class="hljs-variable">obj</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">callback</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_each</span>(<span class="hljs-params">obj: [], callback: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> obj) &#123;<br>            <span class="hljs-keyword">if</span>(obj.hasOwnProperty(key)) &#123;<br>                callback(key, obj[key]);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 触发事件的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">eventName</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">args</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_emitFunc</span>(<span class="hljs-params">eventName: <span class="hljs-built_in">string</span>, args: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Object</span>.prototype.hasOwnProperty.call(<span class="hljs-built_in">this</span>._events,eventName))&#123;<br>            <span class="hljs-built_in">this</span>._each(<span class="hljs-built_in">this</span>._events[eventName], <span class="hljs-function">(<span class="hljs-params">key: <span class="hljs-built_in">number</span>, item: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>                item[<span class="hljs-number">0</span>].apply(item[<span class="hljs-number">2</span>], args);<br>                <span class="hljs-keyword">if</span> (item[<span class="hljs-number">1</span>]) <span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>._events[eventName][key];<br>            &#125;);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 绑定事件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">eventName</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">callback</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">context</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">on</span>(<span class="hljs-params">eventName: <span class="hljs-built_in">string</span>, callback: <span class="hljs-built_in">any</span>, context?: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        context = context || <span class="hljs-built_in">this</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._bind(eventName, callback, <span class="hljs-number">0</span>, context);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 绑定触发一次的事件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">eventName</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">callback</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">context</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">once</span>(<span class="hljs-params">eventName: <span class="hljs-built_in">string</span>, callback: <span class="hljs-built_in">any</span>, context?: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        context = context || <span class="hljs-built_in">this</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._bind(eventName, callback, <span class="hljs-number">1</span>, context);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 取消事件绑定</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;(string | [string, number])&#125;</span> <span class="hljs-variable">event</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">off</span>(<span class="hljs-params">event: <span class="hljs-built_in">string</span> | [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>]</span>)</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(event) === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Object</span>.prototype.hasOwnProperty.call(<span class="hljs-built_in">this</span>._events,event)) &#123;<br>               <span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>._events[event];<br>               <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(event) === <span class="hljs-string">&#x27;object&#x27;</span>) &#123;<br>            <span class="hljs-keyword">let</span> eventName = event[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">let</span> key = event[<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Object</span>.prototype.hasOwnProperty.call(<span class="hljs-built_in">this</span>._events, eventName) &amp;&amp; <span class="hljs-built_in">Object</span>.prototype.hasOwnProperty.call(<span class="hljs-built_in">this</span>._events[eventName], key)) &#123;<br>                <span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>._events[eventName][key];<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 触发绑定的事件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">eventName</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;...Array&lt;any&gt;&#125;</span> <span class="hljs-variable">array</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">EventEmitter</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">emit</span>(<span class="hljs-params">eventName: <span class="hljs-built_in">string</span>, ...array: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">any</span>&gt;</span>)</span> &#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>._emitFunc(eventName, array);<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清除所有的绑定</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">clearAll</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._events = &#123;&#125;;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="WebScoket的工具类"><a href="#WebScoket的工具类" class="headerlink" title="WebScoket的工具类"></a>WebScoket的工具类</h2><ul><li>依赖于之前的EventEmitter工具类</li><li>实现WebSockt的绑定</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; EventEmitter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./EventEmitter&quot;</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * WebSocket的工具类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@extends <span class="hljs-type">&#123;EventEmitter&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WS</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EventEmitter</span> </span>&#123;<br>    <span class="hljs-comment">// 单例</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">readonly</span> INS: WS = <span class="hljs-keyword">new</span> WS();<br>    <span class="hljs-comment">// socket实例</span><br>    <span class="hljs-keyword">private</span> _sock: WebSocket = <span class="hljs-literal">null</span>;<br>    <span class="hljs-comment">// 是否连接成功</span><br>    <span class="hljs-keyword">private</span> _isConnected: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 连接状态类型</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> EventType = &#123;<br>        <span class="hljs-attr">OPEN</span>: <span class="hljs-string">&#x27;open&#x27;</span>,<br>        <span class="hljs-attr">ERROR</span>: <span class="hljs-string">&#x27;error&#x27;</span>,<br>        <span class="hljs-attr">CLOSE</span>: <span class="hljs-string">&#x27;close&#x27;</span>,<br>        <span class="hljs-attr">MESSAGE</span>: <span class="hljs-string">&#x27;message&#x27;</span>,<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 连接的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    connect(url: <span class="hljs-built_in">string</span>): WS&#123;<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>._sock || <span class="hljs-built_in">this</span>._sock.readyState !== <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-built_in">this</span>._sock = <span class="hljs-keyword">new</span> WebSocket(url);<br>            <span class="hljs-built_in">this</span>._sock.binaryType = <span class="hljs-string">&#x27;arraybuffer&#x27;</span>;<br>            <span class="hljs-built_in">this</span>._sock.onopen = <span class="hljs-built_in">this</span>._onOpen.bind(<span class="hljs-built_in">this</span>);<br>            <span class="hljs-built_in">this</span>._sock.onclose = <span class="hljs-built_in">this</span>._onClose.bind(<span class="hljs-built_in">this</span>);<br>            <span class="hljs-built_in">this</span>._sock.onerror = <span class="hljs-built_in">this</span>._onError.bind(<span class="hljs-built_in">this</span>);<br>            <span class="hljs-built_in">this</span>._sock.onmessage = <span class="hljs-built_in">this</span>._onMessage.bind(<span class="hljs-built_in">this</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 开始连接的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onOpen</span>(<span class="hljs-params">event: MessageEvent</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">true</span>;<br>        <span class="hljs-built_in">this</span>.emit(WS.EventType.OPEN, event);   <br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 错误的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onError</span>(<span class="hljs-params">event: MessageEvent</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>.emit(WS.EventType.ERROR, event);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 关闭的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onClose</span>(<span class="hljs-params">event: MessageEvent</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>.emit(WS.EventType.CLOSE, event);  <br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 信息的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;MessageEvent&#125;</span> <span class="hljs-variable">event</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onMessage</span>(<span class="hljs-params">event: MessageEvent</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.emit(WS.EventType.MESSAGE, event);    <br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;(string | object)&#125;</span> <span class="hljs-variable">message</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">send</span>(<span class="hljs-params">message: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">object</span></span>)</span> &#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">this</span>._isConnected) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> message == <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>            <span class="hljs-built_in">this</span>._sock.send(message);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> message === <span class="hljs-string">&#x27;object&#x27;</span>) &#123;<br>            <span class="hljs-keyword">let</span> jsonStr = <span class="hljs-built_in">JSON</span>.stringify(message);<br>            <span class="hljs-built_in">this</span>._sock.send(jsonStr);<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送二进制数据</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-variable">message</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">sendBinary</span>(<span class="hljs-params">message: <span class="hljs-built_in">any</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">this</span>._isConnected) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> message != <span class="hljs-string">&#x27;string&#x27;</span>) &#123;<br>            <span class="hljs-built_in">this</span>._sock.send(message);<br>        &#125; <br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 关闭连接</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">WS</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">close</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>._sock.close();<br>        <span class="hljs-built_in">this</span>._sock = <span class="hljs-literal">null</span>;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">false</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>简单的连接测试</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts">WS.INS.connect(<span class="hljs-string">&#x27;ws://echo.websocket.org&#x27;</span>);<br>WS.INS.on(WS.EventType.OPEN, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;open&#x27;</span>);<br>    WS.INS.send(<span class="hljs-string">&#x27;hello&#x27;</span>);<br>&#125;);<br><br>WS.INS.on(WS.EventType.MESSAGE, <span class="hljs-function">(<span class="hljs-params">event: MessageEvent</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;message&#x27;</span>, event.data);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="UUID的工具类"><a href="#UUID的工具类" class="headerlink" title="UUID的工具类"></a>UUID的工具类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UUID</span> </span>&#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 4随机的子轮</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UUID</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">_s4</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> (((<span class="hljs-number">1</span>+<span class="hljs-built_in">Math</span>.random())*<span class="hljs-number">0x10000</span>)|<span class="hljs-number">0</span>).toString(<span class="hljs-number">16</span>).substring(<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 返回第四版本的uuid</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">UUID</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-title">v4</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> (UUID._s4()+UUID._s4()+<span class="hljs-string">&quot;-&quot;</span>+UUID._s4()+<span class="hljs-string">&quot;-&quot;</span>+UUID._s4()+<span class="hljs-string">&quot;-&quot;</span>+UUID._s4()+<span class="hljs-string">&quot;-&quot;</span>+UUID._s4()+UUID._s4()+UUID._s4());<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Colyseus的连接工具类"><a href="#Colyseus的连接工具类" class="headerlink" title="Colyseus的连接工具类"></a>Colyseus的连接工具类</h2><ul><li>功能和websocket实现类型 </li><li>实现单例的收发</li><li>消息的订阅和发布</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; EventEmitter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./EventEmitter&quot;</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * colyseus的工具类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@extends <span class="hljs-type">&#123;EventEmitter&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ColyseusEngine</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">EventEmitter</span> </span>&#123;<br>    <span class="hljs-comment">// 单例</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">readonly</span> INS: ColyseusEngine = <span class="hljs-keyword">new</span> ColyseusEngine();<br>    <br>    <span class="hljs-comment">// 当前的客户端连接</span><br>    <span class="hljs-keyword">private</span> _client: Colyseus.Client = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-comment">// 当前的房间连接</span><br>    <span class="hljs-keyword">private</span> _room: Colyseus.Room = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-comment">// 是否连接成功</span><br>    <span class="hljs-keyword">private</span> _isConnected: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br>    <br>    <span class="hljs-comment">// 是否在房间内</span><br>    <span class="hljs-keyword">private</span> _isInRoom: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前的内容事件</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> EventType = &#123;<br>        <span class="hljs-attr">CLIENT_OPEN</span>: <span class="hljs-string">&#x27;client_open&#x27;</span>,<br>        <span class="hljs-attr">CLIENT_ERROR</span>: <span class="hljs-string">&#x27;client_error&#x27;</span>,<br>        <span class="hljs-attr">CLIENT_CLOSE</span>: <span class="hljs-string">&#x27;client_close&#x27;</span>,<br>        <span class="hljs-attr">ROOM_JOIN</span>: <span class="hljs-string">&#x27;room_join&#x27;</span>,<br>        <span class="hljs-attr">ROOM_ERROR</span>: <span class="hljs-string">&#x27;room_error&#x27;</span>,<br>        <span class="hljs-attr">ROOM_LEAVE</span>: <span class="hljs-string">&#x27;room_leave&#x27;</span>,<br>        <span class="hljs-attr">ROOM_MESSAGE</span>: <span class="hljs-string">&#x27;room_message&#x27;</span>,<br>        <span class="hljs-attr">ROOM_STATE</span>: <span class="hljs-string">&#x27;room_state&#x27;</span>,<br>    &#125;<br><br><br>    <span class="hljs-comment">// 无法实例化</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 监听客户端连接成功</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onClientOpen</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">true</span>;<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.CLIENT_OPEN);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onClientOpen&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 监听客户端关闭</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onClientClose</span>(<span class="hljs-params"> closeEvent :CloseEvent</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>._isInRoom = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.CLIENT_CLOSE, closeEvent);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onClientClose&#x27;</span>, closeEvent );<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 监听客户端错误</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onClientError</span>(<span class="hljs-params">evt: Event</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isConnected = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>._isInRoom = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.CLIENT_ERROR, evt);<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onClientError&#x27;</span>, evt);<br>    &#125;<br><br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加入房间成功</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onRoomJoin</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>._isInRoom = <span class="hljs-literal">true</span>;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onRoomJoin&#x27;</span>);<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.ROOM_JOIN);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加入房间错误</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onRoomError</span>(<span class="hljs-params">evt :Event</span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>._isInRoom = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onRoomError&#x27;</span>, event);<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.ROOM_ERROR, evt);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 离开房间</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onRoomLeave</span>(<span class="hljs-params">closeEvent :CloseEvent</span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>._isInRoom = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onRoomLeave&#x27;</span>, closeEvent);<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.ROOM_LEAVE, closeEvent);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接收房间的消息</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onRoomMessage</span>(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onRoomMessage&#x27;</span>, data);<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.ROOM_MESSAGE, data);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接收房间的状态同步</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@private</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">state</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-title">_onRoomStateChange</span>(<span class="hljs-params">state: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;_onRoomStateChange&#x27;</span>, state);<br>        <span class="hljs-built_in">this</span>.emit(ColyseusEngine.EventType.ROOM_STATE, state);<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 连接到服务器</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;ColyseusEngine&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> connect(url: <span class="hljs-built_in">string</span>): ColyseusEngine &#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">this</span>._client)&#123;<br>            <span class="hljs-built_in">this</span>._client = <span class="hljs-keyword">new</span> Colyseus.Client(url);<br>            <span class="hljs-built_in">this</span>._client.onOpen.add(<span class="hljs-built_in">this</span>._onClientOpen.bind(<span class="hljs-built_in">this</span>));<br>            <span class="hljs-built_in">this</span>._client.onError.add(<span class="hljs-built_in">this</span>._onClientError.bind(<span class="hljs-built_in">this</span>));<br>            <span class="hljs-built_in">this</span>._client.onClose.add(<span class="hljs-built_in">this</span>._onClientClose.bind(<span class="hljs-built_in">this</span>));<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取当前你的房间</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;Colyseus.Room&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> getCurrentRoom(): Colyseus.Room &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._isInRoom)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._room;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 加入房间的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">roomId</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;&#123;&#125;</span></span>&#125; options</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">joinRoom</span>(<span class="hljs-params">roomId: <span class="hljs-built_in">string</span>, options: &#123;&#125;</span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._client &amp;&amp; <span class="hljs-built_in">this</span>._isConnected &amp;&amp; !<span class="hljs-built_in">this</span>._isInRoom) &#123;<br>            <span class="hljs-built_in">this</span>._room = <span class="hljs-built_in">this</span>._client.join(roomId, options);<br>            <span class="hljs-built_in">this</span>._room.onJoin.add(<span class="hljs-built_in">this</span>._onRoomJoin.bind(<span class="hljs-built_in">this</span>));<br>            <span class="hljs-built_in">this</span>._room.onError.add(<span class="hljs-built_in">this</span>._onRoomError.bind(<span class="hljs-built_in">this</span>));<br>            <span class="hljs-built_in">this</span>._room.onLeave.add(<span class="hljs-built_in">this</span>._onRoomLeave.bind(<span class="hljs-built_in">this</span>));<br>            <span class="hljs-built_in">this</span>._room.onMessage.add(<span class="hljs-built_in">this</span>._onRoomMessage.bind(<span class="hljs-built_in">this</span>));<br>            <span class="hljs-built_in">this</span>._room.onStateChange.add(<span class="hljs-built_in">this</span>._onRoomStateChange.bind(<span class="hljs-built_in">this</span>));<br>        &#125;<br>        <br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取当前可用的房间</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">getAvailableRooms</span>(<span class="hljs-params">roomName: <span class="hljs-built_in">string</span></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>&lt;Colyseus.RoomAvailable[]&gt;(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._client &amp;&amp; <span class="hljs-built_in">this</span>._isConnected)&#123;<br>                <span class="hljs-built_in">this</span>._client.getAvailableRooms(roomName, <span class="hljs-function">(<span class="hljs-params">rooms: Colyseus.RoomAvailable[], err: <span class="hljs-built_in">string</span></span>) =&gt;</span> &#123;<br>                    <span class="hljs-keyword">if</span>(err) &#123;<br>                        resolve([]);<br>                    &#125;<br>                    resolve(rooms);<br>                &#125;)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                resolve([]);<br>            &#125;<br>        &#125;)<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 发送数据</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> <span class="hljs-variable">data</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">send</span>(<span class="hljs-params">data: <span class="hljs-built_in">any</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._room &amp;&amp; <span class="hljs-built_in">this</span>._isInRoom)&#123;<br>            <span class="hljs-built_in">this</span>._room.send(data);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 离开当前的房间</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">leaveRoom</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._room &amp;&amp; <span class="hljs-built_in">this</span>._isInRoom)&#123;<br>            <span class="hljs-built_in">this</span>._room.leave();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 关闭客户端连接的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">ColyseusEngine</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-title">close</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>._client &amp;&amp; <span class="hljs-built_in">this</span>._isConnected)&#123;<br>            <span class="hljs-built_in">this</span>._client.close(<span class="hljs-string">&#x27;&#x27;</span>);<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>简单的连接测试</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts">CE.INS.connect(<span class="hljs-string">&#x27;ws://192.168.8.82:1234&#x27;</span>);<br>CE.INS.on(CE.EventType.CLIENT_OPEN, <span class="hljs-function">() =&gt;</span> &#123;<br>    CE.INS.joinRoom(<span class="hljs-string">&#x27;chess&#x27;</span>, &#123;&#125;);<br>    CE.INS.on(CE.EventType.ROOM_JOIN, <span class="hljs-function">() =&gt;</span> &#123;<br>        CE.INS.send(&#123;<br>            <span class="hljs-attr">hello</span>: <span class="hljs-string">&#x27;Hello,Server!&#x27;</span><br>        &#125;)<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="Timestamp工具类"><a href="#Timestamp工具类" class="headerlink" title="Timestamp工具类"></a>Timestamp工具类</h2><ul><li>时间戳工具类</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author <span class="hljs-variable">limo</span></span></span><br><span class="hljs-comment"> * 时间戳相关操作的工具类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@class <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Timestamp</span> </span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取当前的时间戳</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> now(): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>        <span class="hljs-keyword">return</span> ~~(date.getTime() / <span class="hljs-number">1000</span>)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获得当天0点开始的时间戳</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> today(): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>        <span class="hljs-keyword">return</span> ~~(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(date.getFullYear(), date.getMonth(), date.getDate()).getTime() / <span class="hljs-number">1000</span>)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 格式化输出时间</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">timestamp</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> formatHour(timestamp: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">string</span> &#123;<br>        <span class="hljs-keyword">let</span> h = ~~(timestamp / <span class="hljs-number">3600</span>) <br>        <span class="hljs-keyword">let</span> m = ~~(timestamp % <span class="hljs-number">3600</span> / <span class="hljs-number">60</span>) <br>        <span class="hljs-keyword">let</span> s = ~~(timestamp % <span class="hljs-number">60</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;h &gt; <span class="hljs-number">9</span> ? h : <span class="hljs-string">&#x27;0&#x27;</span> + h&#125;</span>:<span class="hljs-subst">$&#123;m &gt; <span class="hljs-number">9</span> ? m : <span class="hljs-string">&#x27;0&#x27;</span> + m&#125;</span>:<span class="hljs-subst">$&#123;s &gt; <span class="hljs-number">9</span> ? s : <span class="hljs-string">&#x27;0&#x27;</span> + s&#125;</span>`</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 转为当前的钟头数</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">timestamp</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> toHours(timestamp: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">return</span> ~~(timestamp / <span class="hljs-number">3600</span>)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 转为天数</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">timestamp</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> toDays(timestamp: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">return</span> ~~(timestamp / <span class="hljs-number">86400</span>)<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获得本周的第一天</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> weekFirstDay(): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>        <span class="hljs-keyword">let</span> weekday = date.getDay() || <span class="hljs-number">7</span><br>        <span class="hljs-keyword">let</span> weekdayDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(date.getFullYear(), date.getMonth(), date.getDate() - weekday + <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> ~~(weekdayDate.getTime() / <span class="hljs-number">1000</span>)<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取本周的最后一天</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@static</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;number&#125;</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">Timestamp</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">static</span> weekLastDay(): <span class="hljs-built_in">number</span> &#123;<br>        <span class="hljs-keyword">let</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>        <span class="hljs-keyword">let</span> weekday = date.getDay() || <span class="hljs-number">7</span><br>        <span class="hljs-keyword">let</span> weekdayDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(date.getFullYear(), date.getMonth(), date.getDate() - weekday + <span class="hljs-number">7</span>)<br>        <span class="hljs-keyword">return</span> ~~(weekdayDate.getTime() / <span class="hljs-number">1000</span>)<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cocos creator</tag>
      
      <tag>utils</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10分钟开发一个游戏服务器</title>
    <link href="/posts/a8be8288/"/>
    <url>/posts/a8be8288/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/colyseus/logo.png"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;安利一个游戏服务器框架<strong>colyseus</strong>,使用起来十分简单，只需要一丢丢的代码就可以实现一个状态同步的服务器，10分钟主题，废话不多说,Let’s Rock!</p><h2 id="安装-amp-项目设置"><a href="#安装-amp-项目设置" class="headerlink" title="安装&amp;项目设置"></a>安装&amp;项目设置</h2><ul><li>使用npm初始化项目</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -g typescript<br>npm init -y<br>tsc --init<br>npm i colyseus<br>npm i express @types/express @types/node @types/redis<br></code></pre></td></tr></table></figure><h2 id="编程ING"><a href="#编程ING" class="headerlink" title="编程ING"></a>编程ING</h2><p><strong>先码一遍代码比看着纸想有用. —–鲁迅</strong></p><ul><li>入口文件 在主目录下新建一个index.ts文件</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; GameRoom &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./room/GameRoom&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Server &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;colyseus&#x27;</span>;<br><span class="hljs-keyword">import</span> express <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;express&#x27;</span>;<br><span class="hljs-keyword">import</span> http <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;http&#x27;</span>;<br><br><span class="hljs-keyword">const</span> app = express();<br><br><span class="hljs-comment">// 初始化游戏服务器</span><br><span class="hljs-keyword">const</span> gameServer = <span class="hljs-keyword">new</span> Server(&#123;<br>    <span class="hljs-attr">server</span>: http.createServer(app)<br>&#125;);<br><br><span class="hljs-comment">// 注册房间服务器</span><br>gameServer.register(<span class="hljs-string">&#x27;game&#x27;</span>, GameRoom);<br><br><span class="hljs-comment">// 开始监听端口</span><br>gameServer.listen(<span class="hljs-number">3000</span>);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;server is on&#x27;</span>);<br></code></pre></td></tr></table></figure><ul><li>新建一个文件夹room 新建一个GameRoom.ts文件</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; Room, Client &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;colyseus&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; PlayerState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../entity/PlayerState&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GameRoom</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Room</span>&lt;<span class="hljs-title">PlayerState</span>&gt; </span>&#123;<br>    <span class="hljs-comment">// 房间内的最大人数</span><br>    <span class="hljs-attr">maxClients</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">2</span>;<br><br>    <span class="hljs-comment">// 房间初始化方法</span><br>    <span class="hljs-function"><span class="hljs-title">onInit</span>(<span class="hljs-params">options: <span class="hljs-built_in">any</span></span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;ChatRoom onInit&#x27;</span>);<br>        <span class="hljs-comment">// 设置需要更新的状态</span><br>        <span class="hljs-built_in">this</span>.setState(<span class="hljs-keyword">new</span> PlayerState());<br>        <span class="hljs-comment">// 设置发送频率</span><br>        <span class="hljs-built_in">this</span>.setPatchRate(<span class="hljs-number">50</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 消息收取方法</span><br>    <span class="hljs-function"><span class="hljs-title">onJoin</span>(<span class="hljs-params">client: Client</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.state.addPlayer(client);<br>    &#125;<br><br>    <span class="hljs-comment">// 消息收取方法</span><br>    <span class="hljs-function"><span class="hljs-title">onLeave</span>(<span class="hljs-params">client: Client</span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.state.removePlayer(client);<br>    &#125;<br><br>    <span class="hljs-comment">// 消息收取方法</span><br>    onMessage(client: Client, <span class="hljs-attr">data</span>: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">void</span> &#123;<br>        <span class="hljs-built_in">this</span>.state.movePlayer(client, data.x, data.y);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>新建一个文件夹entity 新建文件PlayerState.ts和Player.ts</p></li><li><p>PlayerState.ts</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; EntityMap, Client &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;colyseus&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Player &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./Player&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PlayerState</span> </span>&#123;<br>    <span class="hljs-comment">// EntityMap是colyseus的对象实体模板</span><br>    <span class="hljs-attr">players</span>: EntityMap&lt;Player&gt; = &#123;&#125;;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加新用户的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Client&#125;</span> <span class="hljs-variable">client</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PlayerState</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">addPlayer</span>(<span class="hljs-params">client: Client</span>)</span> &#123;<br>        <span class="hljs-keyword">let</span> player = <span class="hljs-keyword">new</span> Player(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>        <span class="hljs-built_in">this</span>.players[client.sessionId] = player;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除一个用户的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Client&#125;</span> <span class="hljs-variable">client</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PlayerState</span></span></span><br><span class="hljs-comment">     */</span><br>    removePlayer (client: Client) &#123;<br>        <span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>.players[ client.sessionId ];<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 移动用户的方法</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;Client&#125;</span> <span class="hljs-variable">client</span></span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> </span>[x=0]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> </span>[y=0]</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@memberof <span class="hljs-variable">PlayerState</span></span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-function"><span class="hljs-title">movePlayer</span>(<span class="hljs-params">client: Client, x: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span>, y: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.players[client.sessionId].x += x;<br>        <span class="hljs-built_in">this</span>.players[client.sessionId].y += y;<br>        <span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">this</span>.players[client.sessionId].dir = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">this</span>.players[client.sessionId].dir = <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>Player.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; randomChineseName &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../Utils&#x27;</span><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Player</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> name: <span class="hljs-built_in">string</span>;  <span class="hljs-comment">// 名称</span><br>    <span class="hljs-keyword">public</span> x: <span class="hljs-built_in">number</span>;    <span class="hljs-comment">// x轴的位置</span><br>    <span class="hljs-keyword">public</span> y: <span class="hljs-built_in">number</span>;   <span class="hljs-comment">// y轴的位置</span><br>    <span class="hljs-keyword">public</span> dir: <span class="hljs-built_in">boolean</span>; <span class="hljs-comment">// 玩家的方向(左 false 右 true) 简单定义</span><br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"> x: <span class="hljs-built_in">number</span>,  y: <span class="hljs-built_in">number</span>,name?: <span class="hljs-built_in">string</span></span>)</span> &#123;<br>        <span class="hljs-built_in">this</span>.x = x;<br>        <span class="hljs-built_in">this</span>.y = y;<br>        <span class="hljs-built_in">this</span>.name = name || randomChineseName();<br>        <span class="hljs-built_in">this</span>.dir = <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>根目录新建一个Utils.ts的文件</li><li>一些基础工具方法写在这里</li><li>现在又一个随机返回一个中文名称的方法</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> NAMES: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-built_in">string</span>&gt; = [<br>    <span class="hljs-string">&#x27;断笔画墨&#x27;</span>,<br>    <span class="hljs-string">&#x27;默然相爱&#x27;</span>,<br>    <span class="hljs-string">&#x27;旅人不扰&#x27;</span>,<br>    <span class="hljs-string">&#x27;多余温情&#x27;</span>,<br>    <span class="hljs-string">&#x27;云中谁忆&#x27;</span>,<br>    <span class="hljs-string">&#x27;残雪冰心&#x27;</span>,<br>    <span class="hljs-string">&#x27;末世岛屿&#x27;</span>,<br>    <span class="hljs-string">&#x27;桑榆非晚&#x27;</span>,<br>    <span class="hljs-string">&#x27;扉匣与桔&#x27;</span>,<br>    <span class="hljs-string">&#x27;木槿暖夏&#x27;</span>,<br>    <span class="hljs-string">&#x27;空城旧梦&#x27;</span>,<br>];<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 返回随机的中文名</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomChineseName</span>(<span class="hljs-params"></span>): <span class="hljs-title">string</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> NAMES[~~(NAMES.length * <span class="hljs-built_in">Math</span>.random())];<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="简单分析"><a href="#简单分析" class="headerlink" title="简单分析"></a>简单分析</h2><ul><li>不正确的图像架构</li></ul><p><img src="/images/colyseus/simple.png">  </p><ul><li>一个游戏服务器下面可以开N个房间Room</li><li>Room中存在一个state的对象,发生变化时候同步到Room下的客户端</li><li>使得客户端的状态保持一致</li><li>这个就是colyseus实现的状态同步服务器</li></ul><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">tsc &amp;&amp; node ./dist/index.js<br></code></pre></td></tr></table></figure><h2 id="简单的客户端"><a href="#简单的客户端" class="headerlink" title="简单的客户端"></a>简单的客户端</h2><p><img src="/images/colyseus/cut1.png">  </p><p>源码地址:<a href="https://gitee.com/limo/simple_server">https://gitee.com/limo/simple_server</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10分钟编写一个贪吃蛇</title>
    <link href="/posts/ca90cf50/"/>
    <url>/posts/ca90cf50/</url>
    
    <content type="html"><![CDATA[<iframe src="/games/snake/index.html" style="display:block; margin:0 auto; width:400px; height:400px; text-align:center;"></iframe><p>先来了解一些简单的基础知识</p><p>下面是一个20 x 20的矩阵 用来表示贪吃蛇的地图</p><p> 坐标原点为左下角</p><p> <img src="/images/snake/tiled1.png"></p><p>我们需要有一个数组来保存当前蛇的蛇身体</p><p>snake数组是存在顺序的,数组的第一个元素是蛇头的位置，数组的最后一位就是蛇的尾巴</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> snake: <span class="hljs-built_in">Array</span>&lt;number&gt; = [<span class="hljs-number">202</span>, <span class="hljs-number">201</span>];<br></code></pre></td></tr></table></figure><p> <img src="/images/snake/tiled2.png"></p><p>接下来是蛇的移动,也就是数组数据的移动</p><ul><li>上边移动 蛇头数据+20</li><li>下边移动 蛇头数据-20</li><li>左边移动 蛇头数据-1</li><li>右边移动 蛇头数据+1</li></ul><p><img src="/images/snake/tiled3.png"></p><p>上边只说到蛇头数据，因为我们只需要修改一个蛇头的数据，不用修改整条蛇的数据</p><blockquote><p>蛇的数据</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">snake = [<span class="hljs-number">202</span>, <span class="hljs-number">201</span>];<br></code></pre></td></tr></table></figure><p>当前蛇的方向是右边，也就是数据+1,加入一个新的蛇头</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">snake = [<span class="hljs-number">203</span>, <span class="hljs-number">202</span>, <span class="hljs-number">201</span>];<br></code></pre></td></tr></table></figure><p>当前蛇的长度变成了3，可是我们的蛇应该只有2的长度，还需要把蛇的尾巴去掉一个</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">snake = [<span class="hljs-number">203</span>, <span class="hljs-number">202</span>];<br></code></pre></td></tr></table></figure><p>这样蛇就完成了向右一格的移动 上下左移动都是同理，这里就不赘述了</p><p><img src="/images/snake/tiled4.png"></p><p>下面进入正题了</p><h2 id="10分钟编写一个贪吃蛇，先确定下规则"><a href="#10分钟编写一个贪吃蛇，先确定下规则" class="headerlink" title="10分钟编写一个贪吃蛇，先确定下规则"></a>10分钟编写一个贪吃蛇，先确定下规则</h2><ul><li>贪吃蛇由上下左右键位控制</li><li>蛇头能穿越墙壁从另一面出来</li><li>吃到食物增加一个长度</li><li>撞到自己的身体即为失败</li></ul><h3 id="新建一个空的项目"><a href="#新建一个空的项目" class="headerlink" title="新建一个空的项目"></a>新建一个空的项目</h3><p><img src="/images/snake/tiled5.png"></p><h3 id="加入一个空节点，用来承载地图，命名为map"><a href="#加入一个空节点，用来承载地图，命名为map" class="headerlink" title="加入一个空节点，用来承载地图，命名为map"></a>加入一个空节点，用来承载地图，命名为map</h3><ul><li>map需要挂载一个画图的组件</li></ul><p><img src="/images/snake/tiled6.png"></p><h3 id="接下来是编写脚本Map-ts"><a href="#接下来是编写脚本Map-ts" class="headerlink" title="接下来是编写脚本Map.ts"></a>接下来是编写脚本Map.ts</h3><blockquote><p>初始化一些变量</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">snake: <span class="hljs-built_in">Array</span>&lt;number&gt; = [<span class="hljs-number">202</span>, <span class="hljs-number">201</span>]; <span class="hljs-comment">// 定义蛇的数组 </span><br>food = <span class="hljs-number">203</span>; <span class="hljs-comment">// 食物 </span><br>moveOffset = <span class="hljs-number">1</span>; <span class="hljs-comment">// 蛇头的变化值 </span><br>nextIndex = <span class="hljs-number">0</span>; <span class="hljs-comment">// 下一个蛇头的位置id</span><br>g: cc.Graphics = <span class="hljs-literal">null</span>;<br>canControl = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 是否可以控制</span><br></code></pre></td></tr></table></figure><blockquote><p>先加入控制的方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-title">onEnable</span>(<span class="hljs-params"></span>)</span> &#123;<br>    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, <span class="hljs-built_in">this</span>.onKeyDown.bind(<span class="hljs-built_in">this</span>));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">onDisable</span>(<span class="hljs-params"></span>)</span> &#123;<br>    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, <span class="hljs-built_in">this</span>.onKeyDown.bind(<span class="hljs-built_in">this</span>));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">onKeyDown</span>(<span class="hljs-params">e: cc.Event.EventKeyboard</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.canControl)&#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.moveOffset = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">1</span>] - <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] == (<span class="hljs-built_in">this</span>.nextIndex = [-<span class="hljs-number">1</span>, <span class="hljs-number">20</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">20</span>][e.keyCode - <span class="hljs-number">37</span>] || <span class="hljs-built_in">this</span>.moveOffset) ? <span class="hljs-built_in">this</span>.moveOffset : <span class="hljs-built_in">this</span>.nextIndex;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="简单分析这段代码："><a href="#简单分析这段代码：" class="headerlink" title="简单分析这段代码："></a>简单分析这段代码：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">this</span>.moveOffset = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">1</span>] - <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] == (<span class="hljs-built_in">this</span>.nextIndex = [-<span class="hljs-number">1</span>, <span class="hljs-number">20</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">20</span>][e.keyCode - <span class="hljs-number">37</span>] || <span class="hljs-built_in">this</span>.moveOffset) ? <span class="hljs-built_in">this</span>.moveOffset : <span class="hljs-built_in">this</span>.nextIndex;<br></code></pre></td></tr></table></figure><ul><li>this.moveOffset 是蛇头的移动变量 也就是到下一格变化量</li><li>this.snake[1] - this.snake[0] 获得当前蛇头不能变化的方法</li><li>this.nextIndex 在这里做了下临时变量，记录操作值</li><li>左上右下的keyCode 分别为37 38 39 40 如果按其他按键就使用原来的移动变量</li></ul><h3 id="如果还不理解可以看下运算符的执行顺序"><a href="#如果还不理解可以看下运算符的执行顺序" class="headerlink" title="如果还不理解可以看下运算符的执行顺序"></a>如果还不理解可以看下运算符的执行顺序</h3><p><img src="/images/snake/tiled7.png"></p><h3 id="主要的移动和碰撞判断代码，有几个点需要简单分析下"><a href="#主要的移动和碰撞判断代码，有几个点需要简单分析下" class="headerlink" title="主要的移动和碰撞判断代码，有几个点需要简单分析下"></a>主要的移动和碰撞判断代码，有几个点需要简单分析下</h3><ul><li>[].unshift 从头部加入数组</li><li>[].indexOf 获得元素在数组中的位置(这里用来判断是否在数组中)</li><li>循环遍历食物不存在与当前的蛇体内 不会无限循环 因为覆盖会在上面的函数中跳出</li><li>尾部去除的格子用背景色覆盖</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-title">move</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-comment">// 增加当前蛇头的位置</span><br>    <span class="hljs-built_in">this</span>.nextIndex = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] + <span class="hljs-built_in">this</span>.moveOffset<br>    <span class="hljs-comment">// 加入新蛇头</span><br>    <span class="hljs-built_in">this</span>.snake.unshift(<span class="hljs-built_in">this</span>.nextIndex);<br>    <span class="hljs-comment">// 判断新蛇头有没撞到自己</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.snake.indexOf(<span class="hljs-built_in">this</span>.nextIndex, <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span>) &#123; <br>        <span class="hljs-built_in">this</span>.replay.getChildByName(<span class="hljs-string">&#x27;result&#x27;</span>).getComponent(cc.Label).string = <span class="hljs-string">`score: <span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.snake.length * <span class="hljs-number">100</span>&#125;</span>`</span>;<br>        <span class="hljs-built_in">this</span>.replay.active = <span class="hljs-literal">true</span>;<br>        <span class="hljs-comment">// 变红</span><br>        <span class="hljs-built_in">this</span>.snake.forEach(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> &#123;<br>            <span class="hljs-built_in">this</span>.draw(v, cc.Color.RED);<br>        &#125;);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 蛇头的越界修复</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.moveOffset == -<span class="hljs-number">20</span> &amp;&amp; <span class="hljs-built_in">this</span>.nextIndex &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] + <span class="hljs-number">400</span>;  <br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.moveOffset == <span class="hljs-number">20</span> &amp;&amp; <span class="hljs-built_in">this</span>.nextIndex &gt; <span class="hljs-number">399</span>) &#123;<br>        <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] - <span class="hljs-number">400</span>;  <br>    &#125; <span class="hljs-keyword">else</span>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.moveOffset == <span class="hljs-number">1</span> &amp;&amp; (<span class="hljs-built_in">this</span>.nextIndex % <span class="hljs-number">20</span> == <span class="hljs-number">0</span> || <span class="hljs-built_in">this</span>.nextIndex &gt; <span class="hljs-number">399</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] - <span class="hljs-number">20</span>;  <br>    &#125; <span class="hljs-keyword">else</span>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.moveOffset == -<span class="hljs-number">1</span> &amp;&amp; (<span class="hljs-built_in">this</span>.nextIndex % <span class="hljs-number">20</span> == <span class="hljs-number">19</span> || <span class="hljs-built_in">this</span>.nextIndex &lt; <span class="hljs-number">0</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] = <span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>] + <span class="hljs-number">20</span>;  <br>    &#125;<br>    <span class="hljs-comment">// 画出当前的蛇头</span><br>    <span class="hljs-built_in">this</span>.draw(<span class="hljs-built_in">this</span>.snake[<span class="hljs-number">0</span>], cc.Color.GREEN);<br>    <span class="hljs-comment">// 如果当前的蛇头是产生的糖果</span><br>    <span class="hljs-comment">// 产生新的糖果</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.nextIndex == <span class="hljs-built_in">this</span>.food)&#123;<br>        <span class="hljs-comment">// 当前产生的块不存在蛇</span><br>        <span class="hljs-keyword">while</span>(<span class="hljs-built_in">this</span>.snake.indexOf(<span class="hljs-built_in">this</span>.food = ~~(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">400</span>)) &gt;= <span class="hljs-number">0</span>);<br>        <span class="hljs-comment">// 产生新的事物</span><br>        <span class="hljs-built_in">this</span>.draw(<span class="hljs-built_in">this</span>.food, cc.Color.YELLOW);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-comment">// 删除原来的点</span><br>        <span class="hljs-built_in">this</span>.draw(<span class="hljs-built_in">this</span>.snake.pop(), cc.Color.GRAY);<br>    &#125;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-built_in">this</span>.move.bind(<span class="hljs-built_in">this</span>), <span class="hljs-number">1000</span>/<span class="hljs-number">10</span>)<br>&#125;;<br></code></pre></td></tr></table></figure><p>最简单的Draw方法</p><ul><li>画出当前方块的实体</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-title">draw</span>(<span class="hljs-params">mapIndex: number, color: cc.Color</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.g.fillColor = color;<br>    <span class="hljs-built_in">this</span>.g.fillRect(mapIndex % <span class="hljs-number">20</span> * <span class="hljs-number">20</span> - <span class="hljs-number">2</span> , ~~(mapIndex / <span class="hljs-number">20</span>) * <span class="hljs-number">20</span> - <span class="hljs-number">2</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ps-可以扩展的部分"><a href="#ps-可以扩展的部分" class="headerlink" title="ps 可以扩展的部分"></a>ps 可以扩展的部分</h2><ul><li>以上就是主要代码的部分,下面是一些扩展和方向，就不属于10分钟内的了</li><li>设置蛇头颜色，清理尾部格子的时候顺便清理snake[1]为蛇身颜色即可</li><li>多个食物，设置food为数组，判断数组内是否是蛇头就好了</li><li>关卡加速，控制帧率越来越高即可 ps: 30差不多就难以操作了</li></ul><p>源码地址： <a href="https://gitee.com/limo/snake">https://gitee.com/limo/snake</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CocosCreator</tag>
      
      <tag>贪吃蛇</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NodeJs的定时任务</title>
    <link href="/posts/8860e174/"/>
    <url>/posts/8860e174/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><figcaption><span>鲁迅</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs blockquote">**想干活的时候先上npm找找**<br></code></pre></td></tr></table></figure><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有两个实现定时任务的类库,为什么cron下载多，可能因为短，就用这个</p><table><thead><tr><th align="center">类库</th><th align="right">当周下载量</th></tr></thead><tbody><tr><td align="center">node-schedule</td><td align="right">192699</td></tr><tr><td align="center">cron</td><td align="right">499,742</td></tr></tbody></table><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>当然是用ts开发</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm i cron<br>$ npm i @types/cron<br></code></pre></td></tr></table></figure><h2 id="简单测试"><a href="#简单测试" class="headerlink" title="简单测试"></a>简单测试</h2><h3 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h3><ul><li>每秒都输出当前的时间</li><li>构建job通过start方法启动</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; CronJob, CronTime &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;cron&#x27;</span><br><br><span class="hljs-keyword">let</span> job = <span class="hljs-keyword">new</span> CronJob(<span class="hljs-string">&#x27;* * * * * *&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> d = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()<br>    <span class="hljs-built_in">console</span>.log(d.toLocaleString(<span class="hljs-literal">undefined</span>, &#123;<br>        <span class="hljs-attr">hour12</span>: <span class="hljs-literal">false</span><br>    &#125;))<br>&#125;)<br>job.start()<br></code></pre></td></tr></table></figure><h3 id="修改时间参数"><a href="#修改时间参数" class="headerlink" title="修改时间参数"></a>修改时间参数</h3><ul><li>保存job的句柄，在其他地方修改任务的时间设置</li><li>先用stop停止之前的任务，在用start开始</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; CronJob, CronTime &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;cron&#x27;</span><br><br><span class="hljs-keyword">let</span> job = <span class="hljs-keyword">new</span> CronJob(<span class="hljs-string">&#x27;* * * * * *&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> d = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br>    <span class="hljs-built_in">console</span>.log(d.toLocaleString(<span class="hljs-literal">undefined</span>, &#123;<br>        <span class="hljs-attr">hour12</span>: <span class="hljs-literal">false</span><br>    &#125;));<br>&#125;)<br>job.start()<br><br>....<br>干了很多事情了<br>....<br><br>job.stop()<br>job.setTime(<span class="hljs-keyword">new</span> CronTime(<span class="hljs-string">&#x27;*/10 * * * * *&#x27;</span>))<br>job.start()<br></code></pre></td></tr></table></figure><h3 id="时间的校验"><a href="#时间的校验" class="headerlink" title="时间的校验"></a>时间的校验</h3><ul><li>一般设置的触发条件可能要等很久，所以要有一个检测</li><li>不然等到触发时间了，结果无效的，就呵呵呵了</li></ul><h4 id="获取下次触发的时间"><a href="#获取下次触发的时间" class="headerlink" title="获取下次触发的时间"></a>获取下次触发的时间</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">job.nextDate()<br></code></pre></td></tr></table></figure><h4 id="获取接下来5次触发的时间"><a href="#获取接下来5次触发的时间" class="headerlink" title="获取接下来5次触发的时间"></a>获取接下来5次触发的时间</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">job.nextDates(<span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure><h2 id="cron表达式"><a href="#cron表达式" class="headerlink" title="cron表达式"></a>cron表达式</h2><h3 id="标识含义"><a href="#标识含义" class="headerlink" title="标识含义"></a>标识含义</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">* * * * * *<br></code></pre></td></tr></table></figure><ol><li>Seconds</li><li>Minutes</li><li>Hours</li><li>Day-of-Month</li><li>Month</li><li>Day-of-Week</li></ol><h3 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h3><p>Seconds (秒) ：可以用数字0－59 表示，<br>Minutes(分) ：可以用数字0－59 表示，<br>Hours(时) ：可以用数字0-23表示,<br>Day-of-Month(天) ：可以用数字1-31 中的任一一个值，但要注意一些特别的月份<br>Month(月) ：可以用0-11<br>Day-of-Week(每周)：可以用数字1-7表示（1 ＝ 星期日）</p><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><ul><li><strong>*</strong> 标识任何值</li><li><strong>,</strong> 用于多个日期的连接</li><li><strong>-</strong> 用于多个范围的连接</li><li><strong>/</strong> 用于标识每隔多少时间的操作</li></ul><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><ul><li>具体实现参考</li></ul><p><a href="https://github.com/kelektiv/node-cron/tree/master/examples">https://github.com/kelektiv/node-cron/tree/master/examples</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>server</tag>
      
      <tag>定时任务</tag>
      
      <tag>cron</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator使用protobuf.js序列化数据</title>
    <link href="/posts/c862ace6/"/>
    <url>/posts/c862ace6/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><figcaption><span>天行者</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs blockquote">**绕了个大圈，走了很多冤枉路才发现 ，原来做人，不是永远只有一条路。<br>     其实做什么事情，根本不需要分得那么清楚，闭上眼睛，就分不出来黑与白了。**<br></code></pre></td></tr></table></figure><ul><li>安装protobufjs</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">npm i protobufjs -g<br></code></pre></td></tr></table></figure><h3 id="编写一个需要交互的proto文件"><a href="#编写一个需要交互的proto文件" class="headerlink" title="编写一个需要交互的proto文件"></a>编写一个需要交互的proto文件</h3><ul><li>awesome.proto</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">// awesome.proto<br>syntax = <span class="hljs-string">&quot;proto3&quot;</span>;<br><br>message AwesomeMessage &#123;<br>    string name = 1;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="编译一个静态的js文件"><a href="#编译一个静态的js文件" class="headerlink" title="编译一个静态的js文件"></a>编译一个静态的js文件</h3><ul><li>编译静态js文件</li><li>编译ts版本</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs base">pbjs -t static-module -w commonjs -o awesome.js awesome.proto<br>pbts -o awesome.d.ts awesome.js<br></code></pre></td></tr></table></figure><h3 id="awesome-js的引用需要修改"><a href="#awesome-js的引用需要修改" class="headerlink" title="awesome.js的引用需要修改"></a>awesome.js的引用需要修改</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $protobuf = <span class="hljs-built_in">window</span>.protobuf || &#123;&#125;;<br></code></pre></td></tr></table></figure><h3 id="导入一个protobuf-js的最小版本"><a href="#导入一个protobuf-js的最小版本" class="headerlink" title="导入一个protobuf.js的最小版本"></a>导入一个protobuf.js的最小版本</h3><ul><li>引入一个插件</li></ul><p><a href="/images/cocoscreatorprotobuf/protobuf.min.js">protobuf.min.js</a></p><h3 id="加入两个编译成的文件"><a href="#加入两个编译成的文件" class="headerlink" title="加入两个编译成的文件"></a>加入两个编译成的文件</h3><ul><li>直接加入(注意不要导入为插件)<br><a href="/images/cocoscreatorprotobuf/awesome.d.ts">awesome.d.ts</a><br><a href="/images/cocoscreatorprotobuf/awesome.js">awesome.js</a></li></ul><h3 id="简单测试"><a href="#简单测试" class="headerlink" title="简单测试"></a>简单测试</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; AwesomeMessage &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./proto/awesome&quot;</span>;<br>...<br><span class="hljs-keyword">let</span> asm = AwesomeMessage.fromObject(&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;你好Proto&#x27;</span>,<br>&#125;);<br><br><span class="hljs-keyword">const</span> buf = AwesomeMessage.encode(asm).finish();<br><span class="hljs-built_in">console</span>.log(buf);<br><br><span class="hljs-keyword">let</span> message = AwesomeMessage.decode(buf);<br><span class="hljs-keyword">let</span> <span class="hljs-built_in">object</span> = AwesomeMessage.toObject(message, &#123;<br>    <span class="hljs-attr">longs</span>: <span class="hljs-built_in">String</span>,<br>    <span class="hljs-attr">enums</span>: <span class="hljs-built_in">String</span>,<br>    <span class="hljs-attr">bytes</span>: <span class="hljs-built_in">String</span>,<br>    <span class="hljs-comment">// see ConversionOptions</span><br>&#125;);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">object</span>);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cocos creator</tag>
      
      <tag>protobuf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CocosCreator使用Socket.io开发聊天室</title>
    <link href="/posts/f815bc54/"/>
    <url>/posts/f815bc54/</url>
    
    <content type="html"><![CDATA[<h3 id="写在前头"><a href="#写在前头" class="headerlink" title="写在前头"></a>写在前头</h3><p><strong>本实例主要给刚接触CocosCreator和网络开发小白使用。老司机可以马上调头，这是开往幼儿园的专列。</strong></p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p><strong>聊天室作为大多数网络游戏开发人员的第一个项目，实现了一对多，一对一的数据交互，作为基石一般的存在，可以在上面搭建出各种复杂多变的网络程序，此篇作为我网络游戏开发的第一篇，希望与大家共勉。</strong></p><h3 id="服务器的选择"><a href="#服务器的选择" class="headerlink" title="服务器的选择"></a>服务器的选择</h3><blockquote><p>与CocosCretor搭配的全栈解决方案当然是Nodejs了</p></blockquote><ul><li><a href="https://github.com/NetEase/pomelo">Pomelo</a><ul><li>网易开源的游戏应用服务器</li><li>能用简单的代码搭建一个稳定的服务器</li><li>丰富的组件</li><li>完善的客户端类库</li></ul></li><li><a href="https://github.com/websockets/ws">WebSocket</a><ul><li>浏览器原生支持</li><li>方法监听简单明了</li><li><a href="http://www.ruanyifeng.com/blog/2017/05/websocket.html">阮一峰大大的详细解释</a></li></ul></li><li><a href="https://github.com/socketio/socket.io">Socket.io</a><ul><li>建立在webSicket之上</li><li>拥有完善的处理方法</li><li>类库更新十分勤快 拥有大量的用户</li></ul></li></ul><table><thead><tr><th>选型</th><th>结果</th></tr></thead><tbody><tr><td><strong>Pomelo</strong> 比较适合有一定的网络开发基础的人使用。</td><td><strong><font color=red>PASS</font></strong></td></tr><tr><td>纯<strong>WebSocket</strong>的开发相对比较简单，但是有更好的方案.</td><td><strong><font color=red>PASS</font></strong></td></tr><tr><td><strong>Socket.io</strong> 反正我没找到更好的…</td><td><strong><font color=blue>Bingo</font></strong></td></tr></tbody></table><h3 id="服务器的开发"><a href="#服务器的开发" class="headerlink" title="服务器的开发"></a>服务器的开发</h3><blockquote><p>码第一行代码之前默念 善哉善哉 bug去也  </p></blockquote><p><strong>1.安装npm包</strong><br>找到你的项目目录执行以下包安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install express --save<br>npm install socket.io --save<br>npm install underscore --save<br></code></pre></td></tr></table></figure><p><strong>2.引入包</strong><br>编写一个app.js的文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> app = express();<br><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>).Server(app);<br><span class="hljs-keyword">const</span> sio = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;socket.io&#x27;</span>)(http);<br><span class="hljs-keyword">const</span> _ = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;underscore&#x27;</span>);<br></code></pre></td></tr></table></figure><p><strong>3.设置跨域访问</strong><br>之后使用express做工具服务器的时候会用到</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//设置跨域访问</span><br>app.all(<span class="hljs-string">&#x27;*&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) </span>&#123;<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="hljs-string">&quot;*&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="hljs-string">&quot;X-Requested-With&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="hljs-string">&quot;PUT,POST,GET,DELETE,OPTIONS&quot;</span>);<br>    res.header(<span class="hljs-string">&quot;X-Powered-By&quot;</span>,<span class="hljs-string">&#x27; 3.2.1&#x27;</span>)<br>    res.header(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json;charset=utf-8&quot;</span>);<br>    next();<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>4.绑定端口</strong>  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">app.get(<span class="hljs-string">&#x27;/&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">req,res</span>)=&gt;</span>&#123;<br>    res.send(<span class="hljs-string">&#x27;&lt;h1&gt;Hello world&lt;/h1&gt;&#x27;</span>);<br>&#125;);<br><br>http.listen(<span class="hljs-number">3000</span>, <span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;listening on http://127.0.0.1:3000&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>5.测试绑定</strong>  </p><p>启动服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node app<br></code></pre></td></tr></table></figure><p>打开网址查看 出现HelloWorld即为成功</p><p><a href="http://127.0.0.1:3000/">http://127.0.0.1:3000</a></p><p><strong>6.编写一个简单聊天服务器</strong>  </p><ul><li>代码量50行左右 有完整的注释</li><li>简单的分析一下<ul><li> sio的on和emit与nodejs的事件监听和触发相似</li><li> <strong>connection</strong>用来监听客户端的链接</li><li> socket是获得的客户句柄</li><li> socket.on 用于注册自定义事件</li><li> user和msgObj的内容在客户端的Params.ts里  </li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**********************关于聊天的相关操作*************************/</span><br><span class="hljs-comment">//保存用户的数组</span><br><span class="hljs-keyword">var</span> userList = [];<br><span class="hljs-comment">//接收客户端的连接</span><br>sio.on(<span class="hljs-string">&#x27;connection&#x27;</span>,<span class="hljs-function"><span class="hljs-params">socket</span>=&gt;</span>&#123;<br>    <span class="hljs-comment">//登录    </span><br>    socket.on(<span class="hljs-string">&#x27;login&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">user</span>)=&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;login&#x27;</span>);<br>        <span class="hljs-built_in">console</span>.log(user);<br>        user.id = socket.id;<br>        userList.push(user);<br>        <span class="hljs-comment">//群发用户列表</span><br>        sio.emit(<span class="hljs-string">&#x27;userList&#x27;</span>,userList);<br>        <span class="hljs-comment">//发送当前用户列表信息</span><br>        socket.emit(<span class="hljs-string">&#x27;userInfo&#x27;</span>,user);<br>        <span class="hljs-comment">//除自己外广播用户登录信息</span><br>        socket.broadcast.emit(<span class="hljs-string">&#x27;loginInfo&#x27;</span>,user.name+<span class="hljs-string">&quot;上线了。&quot;</span>);<br>    &#125;);<br>    <span class="hljs-comment">//客户端断开</span><br>    socket.on(<span class="hljs-string">&#x27;disconnect&#x27;</span>,<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-comment">//查出当前离开的用户</span><br>        <span class="hljs-keyword">let</span> user = _.findWhere(userList,&#123;<span class="hljs-attr">id</span>:socket.id&#125;);<br>        <span class="hljs-keyword">if</span>(user)&#123;<br>            <span class="hljs-comment">//剔除当前离线用户</span><br>userList = _.without(userList,user);<br>            <span class="hljs-comment">//发送当前用户列表信息</span><br>sio.emit(<span class="hljs-string">&#x27;userList&#x27;</span>,userList);<br><span class="hljs-comment">//除自己外广播用户断线信息</span><br>socket.broadcast.emit(<span class="hljs-string">&#x27;loginInfo&#x27;</span>,user.name+<span class="hljs-string">&quot;下线了。&quot;</span>);<br>        &#125;<br><br>    &#125;);<br>    <span class="hljs-comment">//群发事件</span><br>    socket.on(<span class="hljs-string">&#x27;toAll&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msgObj</span>)</span>&#123;<br>socket.broadcast.emit(<span class="hljs-string">&#x27;toAll&#x27;</span>,msgObj);<br>    &#125;);<br>    <span class="hljs-comment">//单发事件</span><br>socket.on(<span class="hljs-string">&#x27;toOne&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msgObj</span>)</span>&#123;<br><span class="hljs-keyword">let</span> toSocket = _.findWhere(sio.sockets.sockets,&#123;<span class="hljs-attr">id</span>:msgObj.to&#125;);<br>toSocket.emit(<span class="hljs-string">&#x27;toOne&#x27;</span>, msgObj);<br>&#125;);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 心跳包</span><br><span class="hljs-comment">     */</span><br>    socket.on(<span class="hljs-string">&#x27;game_ping&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)</span>&#123;<br>        socket.emit(<span class="hljs-string">&#x27;game_pong&#x27;</span>);<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="聊天室基本界面"><a href="#聊天室基本界面" class="headerlink" title="聊天室基本界面"></a>聊天室基本界面</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">graph</span> <span class="hljs-selector-tag">TD</span><br><span class="hljs-selector-tag">H</span>(loading界面)<span class="hljs-selector-tag">--</span>&gt;<span class="hljs-selector-tag">A</span><br><span class="hljs-selector-tag">A</span>(用户名输入界面)<span class="hljs-selector-tag">--</span>&gt;<span class="hljs-selector-tag">B</span>(聊天室界面)<br><span class="hljs-selector-tag">B</span><span class="hljs-selector-tag">--</span>&gt;<span class="hljs-selector-tag">D</span>(群聊界面)<br><span class="hljs-selector-tag">B</span><span class="hljs-selector-tag">--</span>&gt;<span class="hljs-selector-tag">E</span>(私聊界面)<br></code></pre></td></tr></table></figure><h3 id="项目的实际界面截图"><a href="#项目的实际界面截图" class="headerlink" title="项目的实际界面截图"></a>项目的实际界面截图</h3><blockquote><p>登录界面</p></blockquote><p><img src="/images/cccchatroom/c1.jpg"></p><blockquote><p>聊天室的界面</p></blockquote><p><img src="/images/cccchatroom/c2.jpg"></p><blockquote><p>发群聊消息</p></blockquote><p><img src="/images/cccchatroom/c3.jpg"></p><blockquote><p>发私聊消息</p></blockquote><p><img src="/images/cccchatroom/c4.jpg"></p><blockquote><p>简单起见 私聊消息红色显示</p></blockquote><p><img src="/images/cccchatroom/c5.jpg"></p><blockquote><p>用户下线通知</p></blockquote><p><img src="/images/cccchatroom/c6.jpg"></p><blockquote><p>用户上线通知</p></blockquote><p><img src="/images/cccchatroom/c6.jpg"></p><h3 id="客户端的开发"><a href="#客户端的开发" class="headerlink" title="客户端的开发"></a>客户端的开发</h3><p><strong>客户端代码会在后面放出 简单的分析下几个类</strong>  </p><blockquote><p>NetUtil.ts  参考麒麟子的net.js   </p></blockquote><ul><li>ts中window.io是不存在的需要使用转化获得</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> io = (<span class="hljs-built_in">window</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>).io || &#123;&#125;;<br></code></pre></td></tr></table></figure><ul><li>使用io.connect连接到服务器</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">let</span> opts = &#123;<br>        <span class="hljs-string">&#x27;reconnection&#x27;</span>:<span class="hljs-literal">false</span>,<br>        <span class="hljs-string">&#x27;force new connection&#x27;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&#x27;transports&#x27;</span>:[<span class="hljs-string">&#x27;websocket&#x27;</span>, <span class="hljs-string">&#x27;polling&#x27;</span>]<br>    &#125;<br>    <span class="hljs-built_in">this</span>.sio = io.connect(<span class="hljs-string">&#x27;http://127.0.0.1:3000&#x27;</span>,opts);<br><br>    <span class="hljs-built_in">this</span>.sio.on(<span class="hljs-string">&#x27;connect&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">data</span>)=&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;connect&#x27;</span>);<br>        <span class="hljs-built_in">this</span>.connected = <span class="hljs-literal">true</span>;<br>    &#125;)<br><br>    <span class="hljs-built_in">this</span>.sio.on(<span class="hljs-string">&#x27;disconnect&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">data</span>)=&gt;</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;disconnect&quot;</span>);<br>        <span class="hljs-built_in">this</span>.connected = <span class="hljs-literal">false</span>;<br>    &#125;);<br><br>    <span class="hljs-built_in">this</span>.startHearbeat();<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>封装on / emit方法 方便使用  </li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 绑定事件</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>event </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>cb </span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-title">on</span>(<span class="hljs-params">event:<span class="hljs-built_in">string</span>,cb</span>)</span>&#123;<br>    <span class="hljs-built_in">this</span>.sio.on(event,cb);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 击发服务器事件</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>event </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>data </span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-title">emit</span>(<span class="hljs-params">event:<span class="hljs-built_in">string</span>,data?:<span class="hljs-built_in">any</span></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(data)&#123;<br>        <span class="hljs-built_in">this</span>.sio.emit(event,data);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.sio.emit(event);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>LoadingCtrl.ts  </p></blockquote><ul><li>就干了一件事情初始化连接</li><li>之后要优于其他操作的初始化都放到这里 比如 i18n<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">//初始化项目</span><br><span class="hljs-function"><span class="hljs-title">initGame</span>(<span class="hljs-params"></span>)</span>&#123;<br>    NetUtil.Instance.init();<br><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><blockquote><p>LoginCtrl.ts  </p></blockquote><ul><li>获得用户名 并发送给服务器</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-title">login</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">let</span> name = <span class="hljs-built_in">this</span>.userBox.string;<br>    <span class="hljs-keyword">if</span>(name.length&lt;<span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">let</span> user:User =&#123;<span class="hljs-attr">id</span>:<span class="hljs-string">&quot;&quot;</span>,name,<span class="hljs-attr">imgUrl</span>:<span class="hljs-string">&quot;&quot;</span>&#125;;<br>    NetUtil.Instance.emit(<span class="hljs-string">&#x27;login&#x27;</span>,user);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>ChatCtrl.ts</p></blockquote><ul><li>注册服务器的事件</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs ts">onLoad () &#123;<br>    <span class="hljs-comment">//注册用户登入登出信息</span><br>    NetUtil.Instance.on(<span class="hljs-string">&#x27;loginInfo&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">msg:<span class="hljs-built_in">string</span></span>)=&gt;</span>&#123;<br>        cc.log(msg);<br>        Toast.makeText(msg,Toast.LENGTH_LONG).show();<br>    &#125;)<br>    <span class="hljs-comment">//获得当前用户信息</span><br>    NetUtil.Instance.on(<span class="hljs-string">&#x27;userInfo&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">user:User</span>)=&gt;</span>&#123;<br>        GameUtil.Instance.userInfo = user;<br>        cc.log(user);<br>    &#125;)<br>    <span class="hljs-comment">//广播的用户列表信息</span><br>    NetUtil.Instance.on(<span class="hljs-string">&#x27;userList&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">userList</span>)=&gt;</span>&#123;<br>        cc.find(<span class="hljs-string">&#x27;Canvas/login_room&#x27;</span>).active = <span class="hljs-literal">false</span>;<br>        <span class="hljs-comment">//获取当前的用户列表</span><br>        <span class="hljs-built_in">this</span>.userList = userList;<br>        <span class="hljs-comment">//更新容器</span><br>        <span class="hljs-built_in">this</span>.updateUserList(<span class="hljs-built_in">this</span>.userList);<br>    &#125;);<br>    <span class="hljs-comment">//注册发送给全部人的消息</span><br>    NetUtil.Instance.on(<span class="hljs-string">&#x27;toAll&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">msg:Message</span>)=&gt;</span>&#123;<br>        <span class="hljs-keyword">let</span> node = cc.instantiate(<span class="hljs-built_in">this</span>.otherMsgItem);<br>        node.getChildByName(<span class="hljs-string">&#x27;name&#x27;</span>).getComponent(cc.Label).string = msg.from.name;<br>        node.getChildByName(<span class="hljs-string">&#x27;msgBox&#x27;</span>).getChildByName(<span class="hljs-string">&#x27;msg&#x27;</span>).getComponent(cc.Label).string = msg.msg;<br>        <span class="hljs-built_in">this</span>.msgContent.addChild(node);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.msgContent.height&gt;<span class="hljs-number">480</span>)&#123;<br>            <span class="hljs-built_in">this</span>.msgScrollView.scrollToBottom(<span class="hljs-number">0.3</span>);<br>        &#125;<br>    &#125;);<br>    <span class="hljs-comment">//注册发送给一个人的消息</span><br>    NetUtil.Instance.on(<span class="hljs-string">&#x27;toOne&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">msg:Message</span>)=&gt;</span>&#123;<br>        <span class="hljs-keyword">let</span> node = cc.instantiate(<span class="hljs-built_in">this</span>.otherMsgItem);<br>        node.getChildByName(<span class="hljs-string">&#x27;name&#x27;</span>).getComponent(cc.Label).string = msg.from.name;<br>        node.getChildByName(<span class="hljs-string">&#x27;msgBox&#x27;</span>).getChildByName(<span class="hljs-string">&#x27;msg&#x27;</span>).getComponent(cc.Label).string = msg.msg;<br>        node.getChildByName(<span class="hljs-string">&#x27;msgBox&#x27;</span>).getChildByName(<span class="hljs-string">&#x27;msg&#x27;</span>).color = cc.Color.RED;<br>        <span class="hljs-built_in">this</span>.msgContent.addChild(node);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">this</span>.msgContent.height&gt;<span class="hljs-number">480</span>)&#123;<br>            <span class="hljs-built_in">this</span>.msgScrollView.scrollToBottom(<span class="hljs-number">0.3</span>);<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>UserNode.ts</p></blockquote><ul><li>预制件通过user初始化</li><li>注册了点击事件</li><li>点击展示单独发送的面板</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-title">init</span>(<span class="hljs-params">user:User</span>)</span>&#123;<br>    <span class="hljs-built_in">this</span>.user = user;<br>    <span class="hljs-built_in">this</span>.node.on(cc.Node.EventType.TOUCH_END,<span class="hljs-function"><span class="hljs-params">event</span>=&gt;</span>&#123;<br>        <span class="hljs-comment">//获得控制脚本</span><br>        <span class="hljs-keyword">let</span> chatCtrl = cc.find(<span class="hljs-string">&#x27;Canvas/chat_room&#x27;</span>).getComponent(ChatCtrl);<br>        chatCtrl.showSingleBox(<span class="hljs-built_in">this</span>.user); <br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>Params.ts</p></blockquote><ul><li>定义了两个接口</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> User&#123;<br>    <span class="hljs-attr">id</span>:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//用户的id</span><br>    name:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//用户名</span><br>    imgUrl:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//用户头像的图片地址 </span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> Message&#123;<br>    <span class="hljs-attr">from</span>:User ;     <span class="hljs-comment">//发送的用户</span><br>    msg:<span class="hljs-built_in">string</span> ;    <span class="hljs-comment">//发送的信息</span><br>    to?:<span class="hljs-built_in">string</span> ;    <span class="hljs-comment">//发送给的人 没有则发送全部</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="加入频道，实现分频道聊天"><a href="#加入频道，实现分频道聊天" class="headerlink" title="加入频道，实现分频道聊天"></a>加入频道，实现分频道聊天</h3><ul><li>频道的概念即为游戏中分房间的概念，游戏房间中的数据只对房间内的人广播，可以大大提高效率，减少消耗</li></ul><p><img src="/images/cccchatroom/c7.jpg"></p><p><strong>之前用于保存用户的数组改为了对象</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//保存用户的数组</span><br><span class="hljs-keyword">var</span> userList = &#123;&#125;;<br></code></pre></td></tr></table></figure><p><strong>修改后的用户登录接口</strong></p><ul><li><strong>userList[user.channel]</strong> 用来保存用户</li><li><strong>join</strong>方法用于创建和加入频道</li><li><strong>to</strong>方法用于切换到频道</li><li>下面会出现的<strong>leave</strong>用于离开频道</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//登录    </span><br>socket.on(<span class="hljs-string">&#x27;login&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">user</span>)=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;login&#x27;</span>);<br>    <span class="hljs-built_in">console</span>.log(user);<br>    user.id = socket.id;<br>    <span class="hljs-keyword">if</span>(!userList[user.channel])&#123;<br>        userList[user.channel]=[];<br>    &#125;<br>    userList[user.channel].push(user);<br>    socket.join(user.channel);<br>    <span class="hljs-comment">//将频道赋值给socket</span><br>    socket.channel = user.channel;<br>    <span class="hljs-comment">//群发用户列表</span><br>    sio.to(user.channel).emit(<span class="hljs-string">&#x27;userList&#x27;</span>,userList[user.channel]);<br>    <span class="hljs-comment">//发送当前用户列表信息</span><br>    socket.emit(<span class="hljs-string">&#x27;userInfo&#x27;</span>,user);<br>    <span class="hljs-comment">//除自己外广播用户登录信息</span><br>    socket.broadcast.to(user.channel).emit(<span class="hljs-string">&#x27;loginInfo&#x27;</span>,user.name+<span class="hljs-string">&quot;上线了。&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p><strong>客户端处修改</strong></p><ul><li>加入频道输入框</li><li>加入频道属性 </li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> User&#123;<br>    <span class="hljs-attr">id</span>:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//用户的id</span><br>    name:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//用户名</span><br>    channel:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//当前的频道</span><br>    imgUrl:<span class="hljs-built_in">string</span>; <span class="hljs-comment">//用户头像的图片地址 </span><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="加入数据库和用户校验"><a href="#加入数据库和用户校验" class="headerlink" title="加入数据库和用户校验"></a>加入数据库和用户校验</h3><h4 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h4><blockquote><p>注册一个用户</p></blockquote><p><img src="/images/cccchatroom/c8.png"></p><blockquote><p>校验用户名 不能重复</p></blockquote><p><img src="/images/cccchatroom/c9.png"></p><blockquote><p>上线提示</p></blockquote><p><img src="/images/cccchatroom/c10.png"></p><blockquote><p>数据库内容查询</p></blockquote><p><img src="/images/cccchatroom/c11.png"></p><blockquote><p>聊天数据</p></blockquote><p><img src="/images/cccchatroom/c12.png"></p><h4 id="数据库相关"><a href="#数据库相关" class="headerlink" title="数据库相关"></a>数据库相关</h4><ul><li>使用sequelize(orm框架)操作数据库</li><li>可以在不修改代码的情况下更换数据库</li><li>当前使用sqlite3数据库 也可以切换到mysql</li></ul><blockquote><p>DbClient.js </p></blockquote><ul><li>初始化数据库的实例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Sequelize = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;sequelize&#x27;</span>);<br><br><span class="hljs-keyword">const</span> sequelize = <span class="hljs-keyword">new</span> Sequelize(<span class="hljs-string">&#x27;super&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span>, <span class="hljs-string">&#x27;123123&#x27;</span>, &#123;<br>    <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>,<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">3306</span>,<br>    <span class="hljs-comment">//dialect: &#x27;mysql&#x27;,</span><br>    <span class="hljs-attr">dialect</span>: <span class="hljs-string">&#x27;sqlite&#x27;</span>,<br>    <span class="hljs-attr">operatorsAliases</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">pool</span>: &#123;<br>      <span class="hljs-attr">max</span>: <span class="hljs-number">5</span>,<br>      <span class="hljs-attr">min</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">acquire</span>: <span class="hljs-number">30000</span>,<br>      <span class="hljs-attr">idle</span>: <span class="hljs-number">10000</span><br>    &#125;,<br>    <span class="hljs-comment">//sqlite只需要这个参数</span><br>    <span class="hljs-attr">storage</span>:<span class="hljs-string">&#x27;./db/db.sqlite&#x27;</span><br>&#125;);<br><br>sequelize.authenticate().then(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;数据库连接成功&#x27;</span>);<br>&#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.error(<span class="hljs-string">&#x27;数据库连接失败&#x27;</span>, err);<br>&#125;);<br><br><span class="hljs-built_in">module</span>.exports = sequelize;<br></code></pre></td></tr></table></figure><blockquote><p>mondels/User.js</p></blockquote><ul><li>用户的模型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Sequelize = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;sequelize&#x27;</span>);<br><span class="hljs-keyword">const</span> dbClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../DbClient&#x27;</span>);<br><br><span class="hljs-comment">//定义表结构</span><br><span class="hljs-keyword">let</span> User = dbClient.define(<span class="hljs-string">&#x27;tb_users&#x27;</span>, &#123;<br>    <span class="hljs-attr">uid</span>:&#123;<span class="hljs-attr">type</span>: Sequelize.INTEGER,  <span class="hljs-attr">autoIncrement</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">primaryKey</span>: <span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-attr">account</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.STRING , <span class="hljs-attr">allowNull</span>:<span class="hljs-literal">false</span>&#125;,<br>    <span class="hljs-attr">password</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.STRING , <span class="hljs-attr">allowNull</span>:<span class="hljs-literal">false</span>&#125;,<br>    <span class="hljs-attr">imgurl</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.STRING , &#125;,<br>    <span class="hljs-attr">channel</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.STRING , &#125;,<br>    <span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.INTEGER,  <span class="hljs-attr">defaultValue</span>:<span class="hljs-number">0</span>&#125;,<br>&#125;);<br><br><span class="hljs-comment">//没有表的时候创建表</span><br>User.sync();<br><br><span class="hljs-built_in">module</span>.exports = User;<br></code></pre></td></tr></table></figure><blockquote><p>mondels/Message.js</p></blockquote><ul><li>信息的模型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Sequelize = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;sequelize&#x27;</span>);<br><span class="hljs-keyword">const</span> dbClient = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../DbClient&#x27;</span>);<br><br><span class="hljs-comment">//定义表结构</span><br><span class="hljs-keyword">let</span> Message = dbClient.define(<span class="hljs-string">&#x27;tb_messages&#x27;</span>, &#123;<br>    <span class="hljs-attr">uid</span>:&#123;<span class="hljs-attr">type</span>: Sequelize.INTEGER,  <span class="hljs-attr">autoIncrement</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">primaryKey</span>: <span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-attr">fromuid</span>:&#123;<span class="hljs-attr">type</span>: Sequelize.INTEGER , <span class="hljs-attr">allowNull</span>:<span class="hljs-literal">true</span>&#125;,<br>    <span class="hljs-attr">message</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.STRING(<span class="hljs-number">1024</span>) , <span class="hljs-attr">allowNull</span>:<span class="hljs-literal">false</span>&#125;,<br>    <span class="hljs-attr">touid</span>:&#123;<span class="hljs-attr">type</span>:Sequelize.STRING , <span class="hljs-attr">defaultValue</span>:<span class="hljs-string">&quot;&quot;</span>&#125;<br>&#125;);<br><br><span class="hljs-comment">//没有表的时候创建表</span><br>Message.sync();<br><br><span class="hljs-built_in">module</span>.exports = Message;<br></code></pre></td></tr></table></figure><p><strong>服务器中添加一个注册的方法</strong></p><ul><li>sequelize的使用可以参考官网的文档</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js">................<br><span class="hljs-comment">//注册</span><br>socket.on(<span class="hljs-string">&#x27;register&#x27;</span>,<span class="hljs-function"><span class="hljs-params">registerObj</span>=&gt;</span>&#123;<br>    User.findOrCreate(&#123;<span class="hljs-attr">where</span>: &#123;<span class="hljs-attr">account</span>: registerObj.name&#125;, <span class="hljs-attr">defaults</span>: &#123;<span class="hljs-attr">password</span>:registerObj.password&#125;&#125;)<br>    .spread(<span class="hljs-function">(<span class="hljs-params">user, created</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// console.log(user.get(&#123;</span><br>        <span class="hljs-comment">//     plain: true</span><br>        <span class="hljs-comment">// &#125;))</span><br>        <span class="hljs-comment">// console.log(created)</span><br>        socket.uid = user.get(<span class="hljs-string">&#x27;uid&#x27;</span>);<br>        <span class="hljs-keyword">if</span>(created)&#123;<br>            <span class="hljs-comment">//发送当前用户列表信息</span><br>            socket.emit(<span class="hljs-string">&#x27;registerInfo&#x27;</span>,<span class="hljs-string">&#x27;注册成功&#x27;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-comment">//发送当前用户列表信息</span><br>            socket.emit(<span class="hljs-string">&#x27;registerInfo&#x27;</span>,<span class="hljs-string">&#x27;用户名已经存在&#x27;</span>);<br>        &#125;<br>    &#125;)<br>&#125;);<br>..............<br></code></pre></td></tr></table></figure><h3 id="更新下载："><a href="#更新下载：" class="headerlink" title="更新下载："></a>更新下载：</h3><p>GitHub地址：<a href="https://github.com/SeaPlanet/cocoscreator_chat">https://github.com/SeaPlanet/cocoscreator_chat</a></p><h3 id="Tips："><a href="#Tips：" class="headerlink" title="Tips："></a>Tips：</h3><h4 id="Socket-io的默认事件列表"><a href="#Socket-io的默认事件列表" class="headerlink" title="Socket.io的默认事件列表"></a>Socket.io的默认事件列表</h4><blockquote><p>服务端事件</p></blockquote><table><thead><tr><th>事件名称</th><th>事件解释</th></tr></thead><tbody><tr><td>connection</td><td>socket连接成功之后触发，用于初始化</td></tr><tr><td>message</td><td>客户端通过socket.send来传送消息时触发此事件</td></tr><tr><td>anything</td><td>收到任何事件时触发</td></tr><tr><td>disconnect</td><td>socket失去连接时触发</td></tr></tbody></table><blockquote><p>客户端事件</p></blockquote><table><thead><tr><th>事件名称</th><th>事件解释</th></tr></thead><tbody><tr><td>connect</td><td>连接成功</td></tr><tr><td>connecting</td><td>正在连接</td></tr><tr><td>disconnect</td><td>断开连接</td></tr><tr><td>connect_failed</td><td>连接失败</td></tr><tr><td>error</td><td>错误发生，并且无法被其他事件类型所处理</td></tr><tr><td>message</td><td>同服务器端message事件</td></tr><tr><td>anything</td><td>同服务器端anything事件</td></tr><tr><td>reconnect_failed</td><td>重连失败</td></tr><tr><td>reconnect</td><td>成功重连</td></tr><tr><td>reconnecting</td><td>正在重连</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cocos creator</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>优雅的使用async await 编写代码</title>
    <link href="/posts/fc6ceae4/"/>
    <url>/posts/fc6ceae4/</url>
    
    <content type="html"><![CDATA[<h2 id="Promise链式调用"><a href="#Promise链式调用" class="headerlink" title="Promise链式调用"></a>Promise链式调用</h2><h3 id="首先有多个异步方法"><a href="#首先有多个异步方法" class="headerlink" title="首先有多个异步方法"></a>首先有多个异步方法</h3><ul><li>返回一个Promise对象</li><li>有50%的几率返回正确 50%返回错误</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">p1</span>(<span class="hljs-params"></span>) : <span class="hljs-title">Promise</span>&lt;<span class="hljs-title">string</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//延时操作 使用setTimeout模拟</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span>)&#123;<br>                resolve(<span class="hljs-string">&#x27;p1 success&#x27;</span>)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                reject(<span class="hljs-string">&#x27;p1 error&#x27;</span>)<br>            &#125;<br>        &#125;, <span class="hljs-number">500</span>);<br>    &#125;)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">p2</span>(<span class="hljs-params"></span>) : <span class="hljs-title">Promise</span>&lt;<span class="hljs-title">string</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//延时操作 使用setTimeout模拟</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span>)&#123;<br>                resolve(<span class="hljs-string">&#x27;p2 success&#x27;</span>)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                reject(<span class="hljs-string">&#x27;p2 error&#x27;</span>)<br>            &#125;<br>        &#125;, <span class="hljs-number">500</span>);<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="调用这个方法"><a href="#调用这个方法" class="headerlink" title="调用这个方法"></a>调用这个方法</h3><ul><li>链式调用</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    p1()<br>    .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(res)<br>        <span class="hljs-keyword">return</span> p2()<br>    &#125;)<br>    .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(res)<br>    &#125;)<br>    .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="调用main方法"><a href="#调用main方法" class="headerlink" title="调用main方法"></a>调用main方法</h3><ul><li>调用和一般方法一样</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">main()<br></code></pre></td></tr></table></figure><h2 id="async-amp-await"><a href="#async-amp-await" class="headerlink" title="async &amp; await"></a>async &amp; await</h2><h3 id="首先编写一个异步方法"><a href="#首先编写一个异步方法" class="headerlink" title="首先编写一个异步方法"></a>首先编写一个异步方法</h3><ul><li>返回一个Promise对象</li><li>有50%的几率返回正确 50%返回错误</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">asyncResult</span>(<span class="hljs-params"></span>) : <span class="hljs-title">Promise</span>&lt;<span class="hljs-title">string</span>&gt; </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">//延时操作 使用setTimeout模拟</span><br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">Math</span>.random() &gt; <span class="hljs-number">0.5</span>)&#123;<br>                resolve(<span class="hljs-string">&#x27;success&#x27;</span>)<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                reject(<span class="hljs-string">&#x27;error&#x27;</span>)<br>            &#125;<br>        &#125;, <span class="hljs-number">1000</span>);<br>    &#125;)<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="调用这个异步方法"><a href="#调用这个异步方法" class="headerlink" title="调用这个异步方法"></a>调用这个异步方法</h3><ul><li>使用await 需要加async标识方法</li><li>因为异步方法我们定义了reject所以要抓取异常</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> ans = <span class="hljs-keyword">await</span> asyncResult().catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(err)<br>    &#125;)<br>    <span class="hljs-keyword">if</span> (ans) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;成功！&#x27;</span>, ans)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;失败！&#x27;</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="调用main方法-1"><a href="#调用main方法-1" class="headerlink" title="调用main方法"></a>调用main方法</h3><ul><li>调用和一般方法一样</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">main()<br></code></pre></td></tr></table></figure><h2 id="async-await的错误使用"><a href="#async-await的错误使用" class="headerlink" title="async/await的错误使用"></a>async/await的错误使用</h2><ul><li>定义一个getZero的方法返回一个Promise</li><li>getAsyncZero返回获取的值</li><li>使用了async/await,逻辑上会有误区先输出z再输出final</li><li>其实是先输出final再输出z</li><li>只在async的方法里面 await是按照顺序回调的, 相对其他的函数，这个调用不会堵塞主逻辑</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getZero</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        resolve(<span class="hljs-number">0</span>)<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAsyncZero</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> z = <span class="hljs-keyword">await</span> getZero();<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;z&#x27;</span>, z)<br>    <span class="hljs-keyword">return</span> z<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> final = getAsyncZero();<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;final&#x27;</span>, final);<br>&#125;<br><br>main();<br></code></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">final Promise &#123; &lt;pending&gt; &#125;<br>z 0<br></code></pre></td></tr></table></figure><h2 id="修复async-await的错误"><a href="#修复async-await的错误" class="headerlink" title="修复async/await的错误"></a>修复async/await的错误</h2><ul><li>如果硬要使用async的方法返回值</li><li>需要给当前调用的方法加上async/await</li><li><strong>【最好不要给async方法加返回值，会造成调用的混乱】</strong></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getZero</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        resolve(<span class="hljs-number">0</span>)<br>    &#125;);<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAsyncZero</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> z = <span class="hljs-keyword">await</span> getZero();<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;z&#x27;</span>, z)<br>    <span class="hljs-keyword">return</span> z<br>&#125;<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> final = <span class="hljs-keyword">await</span> getAsyncZero();<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;final&#x27;</span>, final);<br>&#125;<br><br>main();<br></code></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><ul><li>当前输出是期望的结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">z 0<br>final 0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>async</tag>
      
      <tag>JavaScript</tag>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Eslint的配置速查</title>
    <link href="/posts/69ee2c63/"/>
    <url>/posts/69ee2c63/</url>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;no-alert&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用alert confirm prompt</span><br><span class="hljs-string">&quot;no-array-constructor&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用数组构造器</span><br><span class="hljs-string">&quot;no-bitwise&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用按位运算符</span><br><span class="hljs-string">&quot;no-caller&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止使用arguments.caller或arguments.callee</span><br><span class="hljs-string">&quot;no-catch-shadow&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止catch子句参数与外部作用域变量同名</span><br><span class="hljs-string">&quot;no-class-assign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止给类赋值</span><br><span class="hljs-string">&quot;no-cond-assign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止在条件表达式中使用赋值语句</span><br><span class="hljs-string">&quot;no-console&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用console</span><br><span class="hljs-string">&quot;no-const-assign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止修改const声明的变量</span><br><span class="hljs-string">&quot;no-constant-condition&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止在条件中使用常量表达式 if(true) if(1)</span><br><span class="hljs-string">&quot;no-continue&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用continue</span><br><span class="hljs-string">&quot;no-control-regex&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止在正则表达式中使用控制字符</span><br><span class="hljs-string">&quot;no-debugger&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用debugger</span><br><span class="hljs-string">&quot;no-delete-var&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能对var声明的变量使用delete操作符</span><br><span class="hljs-string">&quot;no-div-regex&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//不能使用看起来像除法的正则表达式/=foo/</span><br><span class="hljs-string">&quot;no-dupe-keys&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//在创建对象字面量时不允许键重复 &#123;a:1,a:1&#125;</span><br><span class="hljs-string">&quot;no-dupe-args&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//函数参数不能重复</span><br><span class="hljs-string">&quot;no-duplicate-case&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//switch中的case标签不能重复</span><br><span class="hljs-string">&quot;no-else-return&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//如果if语句里面有return,后面不能跟else语句</span><br><span class="hljs-string">&quot;no-empty&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//块语句中的内容不能为空</span><br><span class="hljs-string">&quot;no-empty-character-class&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//正则表达式中的[]内容不能为空</span><br><span class="hljs-string">&quot;no-empty-label&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用空label</span><br><span class="hljs-string">&quot;no-eq-null&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止对null使用==或!=运算符</span><br><span class="hljs-string">&quot;no-eval&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止使用eval</span><br><span class="hljs-string">&quot;no-ex-assign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止给catch语句中的异常参数赋值</span><br><span class="hljs-string">&quot;no-extend-native&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止扩展native对象</span><br><span class="hljs-string">&quot;no-extra-bind&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止不必要的函数绑定</span><br><span class="hljs-string">&quot;no-extra-boolean-cast&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止不必要的bool转换</span><br><span class="hljs-string">&quot;no-extra-parens&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止非必要的括号</span><br><span class="hljs-string">&quot;no-extra-semi&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止多余的冒号</span><br><span class="hljs-string">&quot;no-fallthrough&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止switch穿透</span><br><span class="hljs-string">&quot;no-floating-decimal&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止省略浮点数中的0 .5 3.</span><br><span class="hljs-string">&quot;no-func-assign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止重复的函数声明</span><br><span class="hljs-string">&quot;no-implicit-coercion&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止隐式转换</span><br><span class="hljs-string">&quot;no-implied-eval&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用隐式eval</span><br><span class="hljs-string">&quot;no-inline-comments&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止行内备注</span><br><span class="hljs-string">&quot;no-inner-declarations&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;functions&quot;</span>],<span class="hljs-comment">//禁止在块语句中使用声明（变量或函数）</span><br><span class="hljs-string">&quot;no-invalid-regexp&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止无效的正则表达式</span><br><span class="hljs-string">&quot;no-invalid-this&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止无效的this，只能用在构造器，类，对象字面量</span><br><span class="hljs-string">&quot;no-irregular-whitespace&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能有不规则的空格</span><br><span class="hljs-string">&quot;no-iterator&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用__iterator__ 属性</span><br><span class="hljs-string">&quot;no-label-var&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//label名不能与var声明的变量名相同</span><br><span class="hljs-string">&quot;no-labels&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止标签声明</span><br><span class="hljs-string">&quot;no-lone-blocks&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止不必要的嵌套块</span><br><span class="hljs-string">&quot;no-lonely-if&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止else语句内只有if语句</span><br><span class="hljs-string">&quot;no-loop-func&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span><br><span class="hljs-string">&quot;no-mixed-requires&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-literal">false</span>],<span class="hljs-comment">//声明时不能混用声明类型</span><br><span class="hljs-string">&quot;no-mixed-spaces-and-tabs&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-literal">false</span>],<span class="hljs-comment">//禁止混用tab和空格</span><br><span class="hljs-string">&quot;linebreak-style&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;windows&quot;</span>],<span class="hljs-comment">//换行风格</span><br><span class="hljs-string">&quot;no-multi-spaces&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//不能用多余的空格</span><br><span class="hljs-string">&quot;no-multi-str&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//字符串不能用\换行</span><br><span class="hljs-string">&quot;no-multiple-empty-lines&quot;</span>: [<span class="hljs-number">1</span>, &#123;<span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">2</span>&#125;],<span class="hljs-comment">//空行最多不能超过2行</span><br><span class="hljs-string">&quot;no-native-reassign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能重写native对象</span><br><span class="hljs-string">&quot;no-negated-in-lhs&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//in 操作符的左边不能有!</span><br><span class="hljs-string">&quot;no-nested-ternary&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用嵌套的三目运算</span><br><span class="hljs-string">&quot;no-new&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止在使用new构造一个实例后不赋值</span><br><span class="hljs-string">&quot;no-new-func&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//禁止使用new Function</span><br><span class="hljs-string">&quot;no-new-object&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用new Object()</span><br><span class="hljs-string">&quot;no-new-require&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用new require</span><br><span class="hljs-string">&quot;no-new-wrappers&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用new创建包装实例，new String new Boolean new Number</span><br><span class="hljs-string">&quot;no-obj-calls&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能调用内置的全局对象，比如Math() JSON()</span><br><span class="hljs-string">&quot;no-octal&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用八进制数字</span><br><span class="hljs-string">&quot;no-octal-escape&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用八进制转义序列</span><br><span class="hljs-string">&quot;no-param-reassign&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止给参数重新赋值</span><br><span class="hljs-string">&quot;no-path-concat&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//node中不能使用__dirname或__filename做路径拼接</span><br><span class="hljs-string">&quot;no-plusplus&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用++，--</span><br><span class="hljs-string">&quot;no-process-env&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用process.env</span><br><span class="hljs-string">&quot;no-process-exit&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用process.exit()</span><br><span class="hljs-string">&quot;no-proto&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止使用__proto__属性</span><br><span class="hljs-string">&quot;no-redeclare&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止重复声明变量</span><br><span class="hljs-string">&quot;no-regex-spaces&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span><br><span class="hljs-string">&quot;no-restricted-modules&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//如果禁用了指定模块，使用就会报错</span><br><span class="hljs-string">&quot;no-return-assign&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//return 语句中不能有赋值表达式</span><br><span class="hljs-string">&quot;no-script-url&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用javascript:void(0)</span><br><span class="hljs-string">&quot;no-self-compare&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能比较自身</span><br><span class="hljs-string">&quot;no-sequences&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用逗号运算符</span><br><span class="hljs-string">&quot;no-shadow&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span><br><span class="hljs-string">&quot;no-shadow-restricted-names&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span><br><span class="hljs-string">&quot;no-spaced-func&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//函数调用时 函数名与()之间不能有空格</span><br><span class="hljs-string">&quot;no-sparse-arrays&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止稀疏数组， [1,,2]</span><br><span class="hljs-string">&quot;no-sync&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//nodejs 禁止同步方法</span><br><span class="hljs-string">&quot;no-ternary&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁止使用三目运算符</span><br><span class="hljs-string">&quot;no-trailing-spaces&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//一行结束后面不要有空格</span><br><span class="hljs-string">&quot;no-this-before-super&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//在调用super()之前不能使用this或super</span><br><span class="hljs-string">&quot;no-throw-literal&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止抛出字面量错误 throw &quot;error&quot;;</span><br><span class="hljs-string">&quot;no-undef&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//不能有未定义的变量</span><br><span class="hljs-string">&quot;no-undef-init&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//变量初始化时不能直接给它赋值为undefined</span><br><span class="hljs-string">&quot;no-undefined&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能使用undefined</span><br><span class="hljs-string">&quot;no-unexpected-multiline&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//避免多行表达式</span><br><span class="hljs-string">&quot;no-underscore-dangle&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//标识符不能以_开头或结尾</span><br><span class="hljs-string">&quot;no-unneeded-ternary&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span><br><span class="hljs-string">&quot;no-unreachable&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能有无法执行的代码</span><br><span class="hljs-string">&quot;no-unused-expressions&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止无用的表达式</span><br><span class="hljs-string">&quot;no-unused-vars&quot;</span>: [<span class="hljs-number">2</span>, &#123;<span class="hljs-string">&quot;vars&quot;</span>: <span class="hljs-string">&quot;all&quot;</span>, <span class="hljs-string">&quot;args&quot;</span>: <span class="hljs-string">&quot;after-used&quot;</span>&#125;],<span class="hljs-comment">//不能有声明后未被使用的变量或参数</span><br><span class="hljs-string">&quot;no-use-before-define&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//未定义前不能使用</span><br><span class="hljs-string">&quot;no-useless-call&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止不必要的call和apply</span><br><span class="hljs-string">&quot;no-void&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁用void操作符</span><br><span class="hljs-string">&quot;no-var&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//禁用var，用let和const代替</span><br><span class="hljs-string">&quot;no-warning-comments&quot;</span>: [<span class="hljs-number">1</span>, &#123; <span class="hljs-string">&quot;terms&quot;</span>: [<span class="hljs-string">&quot;todo&quot;</span>, <span class="hljs-string">&quot;fixme&quot;</span>, <span class="hljs-string">&quot;xxx&quot;</span>], <span class="hljs-string">&quot;location&quot;</span>: <span class="hljs-string">&quot;start&quot;</span> &#125;],<span class="hljs-comment">//不能有警告备注</span><br><span class="hljs-string">&quot;no-with&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁用with</span><br><span class="hljs-string">&quot;array-bracket-spacing&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;never&quot;</span>],<span class="hljs-comment">//是否允许非空数组里面有多余的空格</span><br><span class="hljs-string">&quot;arrow-parens&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//箭头函数用小括号括起来</span><br><span class="hljs-string">&quot;arrow-spacing&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//=&gt;的前/后括号</span><br><span class="hljs-string">&quot;accessor-pairs&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//在对象中使用getter/setter</span><br><span class="hljs-string">&quot;block-scoped-var&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//块语句中使用var</span><br><span class="hljs-string">&quot;brace-style&quot;</span>: [<span class="hljs-number">1</span>, <span class="hljs-string">&quot;1tbs&quot;</span>],<span class="hljs-comment">//大括号风格</span><br><span class="hljs-string">&quot;callback-return&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//避免多次调用回调什么的</span><br><span class="hljs-string">&quot;camelcase&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//强制驼峰法命名</span><br><span class="hljs-string">&quot;comma-dangle&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;never&quot;</span>],<span class="hljs-comment">//对象字面量项尾不能有逗号</span><br><span class="hljs-string">&quot;comma-spacing&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//逗号前后的空格</span><br><span class="hljs-string">&quot;comma-style&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;last&quot;</span>],<span class="hljs-comment">//逗号风格，换行时在行首还是行尾</span><br><span class="hljs-string">&quot;complexity&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">11</span>],<span class="hljs-comment">//循环复杂度</span><br><span class="hljs-string">&quot;computed-property-spacing&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;never&quot;</span>],<span class="hljs-comment">//是否允许计算后的键名什么的</span><br><span class="hljs-string">&quot;consistent-return&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//return 后面是否允许省略</span><br><span class="hljs-string">&quot;consistent-this&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;that&quot;</span>],<span class="hljs-comment">//this别名</span><br><span class="hljs-string">&quot;constructor-super&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//非派生类不能调用super，派生类必须调用super</span><br><span class="hljs-string">&quot;curly&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;all&quot;</span>],<span class="hljs-comment">//必须使用 if()&#123;&#125; 中的&#123;&#125;</span><br><span class="hljs-string">&quot;default-case&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//switch语句最后必须有default</span><br><span class="hljs-string">&quot;dot-location&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//对象访问符的位置，换行的时候在行首还是行尾</span><br><span class="hljs-string">&quot;dot-notation&quot;</span>: [<span class="hljs-number">0</span>, &#123; <span class="hljs-string">&quot;allowKeywords&quot;</span>: <span class="hljs-literal">true</span> &#125;],<span class="hljs-comment">//避免不必要的方括号</span><br><span class="hljs-string">&quot;eol-last&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//文件以单一的换行符结束</span><br><span class="hljs-string">&quot;eqeqeq&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//必须使用全等</span><br><span class="hljs-string">&quot;func-names&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//函数表达式必须有名字</span><br><span class="hljs-string">&quot;func-style&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;declaration&quot;</span>],<span class="hljs-comment">//函数风格，规定只能使用函数声明/函数表达式</span><br><span class="hljs-string">&quot;generator-star-spacing&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//生成器函数*的前后空格</span><br><span class="hljs-string">&quot;guard-for-in&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//for in循环要用if语句过滤</span><br><span class="hljs-string">&quot;handle-callback-err&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//nodejs 处理错误</span><br><span class="hljs-string">&quot;id-length&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//变量名长度</span><br><span class="hljs-string">&quot;indent&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>],<span class="hljs-comment">//缩进风格</span><br><span class="hljs-string">&quot;init-declarations&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//声明时必须赋初值</span><br><span class="hljs-string">&quot;key-spacing&quot;</span>: [<span class="hljs-number">0</span>, &#123; <span class="hljs-string">&quot;beforeColon&quot;</span>: <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;afterColon&quot;</span>: <span class="hljs-literal">true</span> &#125;],<span class="hljs-comment">//对象字面量中冒号的前后空格</span><br><span class="hljs-string">&quot;lines-around-comment&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//行前/行后备注</span><br><span class="hljs-string">&quot;max-depth&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">4</span>],<span class="hljs-comment">//嵌套块深度</span><br><span class="hljs-string">&quot;max-len&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">80</span>, <span class="hljs-number">4</span>],<span class="hljs-comment">//字符串最大长度</span><br><span class="hljs-string">&quot;max-nested-callbacks&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">2</span>],<span class="hljs-comment">//回调嵌套深度</span><br><span class="hljs-string">&quot;max-params&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">3</span>],<span class="hljs-comment">//函数最多只能有3个参数</span><br><span class="hljs-string">&quot;max-statements&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">10</span>],<span class="hljs-comment">//函数内最多有几个声明</span><br><span class="hljs-string">&quot;new-cap&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span><br><span class="hljs-string">&quot;new-parens&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//new时必须加小括号</span><br><span class="hljs-string">&quot;newline-after-var&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//变量声明后是否需要空一行</span><br><span class="hljs-string">&quot;object-curly-spacing&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;never&quot;</span>],<span class="hljs-comment">//大括号内是否允许不必要的空格</span><br><span class="hljs-string">&quot;object-shorthand&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//强制对象字面量缩写语法</span><br><span class="hljs-string">&quot;one-var&quot;</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//连续声明</span><br><span class="hljs-string">&quot;operator-assignment&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;always&quot;</span>],<span class="hljs-comment">//赋值运算符 += -=什么的</span><br><span class="hljs-string">&quot;operator-linebreak&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;after&quot;</span>],<span class="hljs-comment">//换行时运算符在行尾还是行首</span><br><span class="hljs-string">&quot;padded-blocks&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//块语句内行首行尾是否要空行</span><br><span class="hljs-string">&quot;prefer-const&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//首选const</span><br><span class="hljs-string">&quot;prefer-spread&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//首选展开运算</span><br><span class="hljs-string">&quot;prefer-reflect&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//首选Reflect的方法</span><br><span class="hljs-string">&quot;quotes&quot;</span>: [<span class="hljs-number">1</span>, <span class="hljs-string">&quot;single&quot;</span>],<span class="hljs-comment">//引号类型 `` &quot;&quot; &#x27;&#x27;</span><br><span class="hljs-string">&quot;quote-props&quot;</span>:[<span class="hljs-number">2</span>, <span class="hljs-string">&quot;always&quot;</span>],<span class="hljs-comment">//对象字面量中的属性名是否强制双引号</span><br><span class="hljs-string">&quot;radix&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//parseInt必须指定第二个参数</span><br><span class="hljs-string">&quot;id-match&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//命名检测</span><br><span class="hljs-string">&quot;require-yield&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//生成器函数必须有yield</span><br><span class="hljs-string">&quot;semi&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;always&quot;</span>],<span class="hljs-comment">//语句强制分号结尾</span><br><span class="hljs-string">&quot;semi-spacing&quot;</span>: [<span class="hljs-number">0</span>, &#123;<span class="hljs-string">&quot;before&quot;</span>: <span class="hljs-literal">false</span>, <span class="hljs-string">&quot;after&quot;</span>: <span class="hljs-literal">true</span>&#125;],<span class="hljs-comment">//分号前后空格</span><br><span class="hljs-string">&quot;sort-vars&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//变量声明时排序</span><br><span class="hljs-string">&quot;space-after-keywords&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;always&quot;</span>],<span class="hljs-comment">//关键字后面是否要空一格</span><br><span class="hljs-string">&quot;space-before-blocks&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;always&quot;</span>],<span class="hljs-comment">//不以新行开始的块&#123;前面要不要有空格</span><br><span class="hljs-string">&quot;space-before-function-paren&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;always&quot;</span>],<span class="hljs-comment">//函数定义时括号前面要不要有空格</span><br><span class="hljs-string">&quot;space-in-parens&quot;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;never&quot;</span>],<span class="hljs-comment">//小括号里面要不要有空格</span><br><span class="hljs-string">&quot;space-infix-ops&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//中缀操作符周围要不要有空格</span><br><span class="hljs-string">&quot;space-return-throw-case&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//return throw case后面要不要加空格</span><br><span class="hljs-string">&quot;space-unary-ops&quot;</span>: [<span class="hljs-number">0</span>, &#123; <span class="hljs-string">&quot;words&quot;</span>: <span class="hljs-literal">true</span>, <span class="hljs-string">&quot;nonwords&quot;</span>: <span class="hljs-literal">false</span> &#125;],<span class="hljs-comment">//一元运算符的前/后要不要加空格</span><br><span class="hljs-string">&quot;spaced-comment&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//注释风格要不要有空格什么的</span><br><span class="hljs-string">&quot;strict&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//使用严格模式</span><br><span class="hljs-string">&quot;use-isnan&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//禁止比较时使用NaN，只能用isNaN()</span><br><span class="hljs-string">&quot;valid-jsdoc&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//jsdoc规则</span><br><span class="hljs-string">&quot;valid-typeof&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//必须使用合法的typeof的值</span><br><span class="hljs-string">&quot;vars-on-top&quot;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//var必须放在作用域顶部</span><br><span class="hljs-string">&quot;wrap-iife&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;inside&quot;</span>],<span class="hljs-comment">//立即执行函数表达式的小括号风格</span><br><span class="hljs-string">&quot;wrap-regex&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//正则表达式字面量用小括号包起来</span><br><span class="hljs-string">&quot;yoda&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;never&quot;</span>]<span class="hljs-comment">//禁止尤达条件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>eslint</tag>
      
      <tag>configs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Object知道不知道</title>
    <link href="/posts/5a4def9/"/>
    <url>/posts/5a4def9/</url>
    
    <content type="html"><![CDATA[<h2 id="assign"><a href="#assign" class="headerlink" title="assign"></a>assign</h2><ul><li>复制对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> obj1 = &#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-number">111</span>,<br>    <span class="hljs-attr">b</span>: &#123;<br>        <span class="hljs-attr">c</span>: <span class="hljs-number">123</span><br>    &#125;<br>&#125;<br><span class="hljs-keyword">let</span> obj2 = &#123;<br>    <span class="hljs-attr">c</span>: <span class="hljs-number">111</span>,<br>    <span class="hljs-attr">b</span>: &#123;<br>        <span class="hljs-attr">e</span>: <span class="hljs-number">123</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">let</span> ret = <span class="hljs-built_in">Object</span>.assign(obj1, obj2)<br><span class="hljs-built_in">console</span>.log(ret)<br></code></pre></td></tr></table></figure><ul><li>结果</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>    <span class="hljs-attr">a</span>: <span class="hljs-number">111</span>,<br>    <span class="hljs-attr">b</span>: &#123;<br>        <span class="hljs-attr">e</span>: <span class="hljs-number">123</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="create"><a href="#create" class="headerlink" title="create"></a>create</h2><ul><li>创建新的对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> obj = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;limo&#x27;</span>,<br>    <span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`name:<span class="hljs-subst">$&#123;<span class="hljs-built_in">this</span>.name&#125;</span>`</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> newObj = <span class="hljs-built_in">Object</span>.create(obj)<br>newObj.name = <span class="hljs-string">&#x27;jack&#x27;</span><br>newObj.print()<br></code></pre></td></tr></table></figure><ul><li>结果</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">name:jack<br></code></pre></td></tr></table></figure><h2 id="entries"><a href="#entries" class="headerlink" title="entries"></a>entries</h2><ul><li>返回对象枚举</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> object1 = &#123;<br>  <span class="hljs-attr">a</span>: <span class="hljs-string">&#x27;somestring&#x27;</span>,<br>  <span class="hljs-attr">b</span>: <span class="hljs-number">42</span><br>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> [key, value] <span class="hljs-keyword">of</span> <span class="hljs-built_in">Object</span>.entries(object1)) &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">$&#123;key&#125;</span>: <span class="hljs-subst">$&#123;value&#125;</span>`</span>);<br>&#125;<br><br><span class="hljs-comment">// expected output:</span><br><span class="hljs-comment">// &quot;a: somestring&quot;</span><br><span class="hljs-comment">// &quot;b: 42&quot;</span><br><span class="hljs-comment">// order is not guaranteed</span><br></code></pre></td></tr></table></figure><h2 id="keys"><a href="#keys" class="headerlink" title="keys"></a>keys</h2><ul><li>返回当前的key的数组</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">var</span> obj = &#123; <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>: <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">2</span>: <span class="hljs-string">&#x27;c&#x27;</span> &#125;;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.keys(obj)); <br><br><span class="hljs-comment">// console: [&#x27;0&#x27;, &#x27;1&#x27;, &#x27;2&#x27;]</span><br></code></pre></td></tr></table></figure><h2 id="values"><a href="#values" class="headerlink" title="values"></a>values</h2><ul><li>返回当前的value的数组</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">var</span> obj = &#123; <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>: <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">2</span>: <span class="hljs-string">&#x27;c&#x27;</span> &#125;;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">Object</span>.values(obj)); <span class="hljs-comment">// [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span><br></code></pre></td></tr></table></figure><h2 id="fromEntries"><a href="#fromEntries" class="headerlink" title="fromEntries"></a>fromEntries</h2><ul><li>键值对列表转为对象</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> entries = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>([<br>  [<span class="hljs-string">&#x27;foo&#x27;</span>, <span class="hljs-string">&#x27;bar&#x27;</span>],<br>  [<span class="hljs-string">&#x27;baz&#x27;</span>, <span class="hljs-number">42</span>]<br>]);<br><br><span class="hljs-keyword">const</span> obj = <span class="hljs-built_in">Object</span>.fromEntries(entries);<br><br><span class="hljs-built_in">console</span>.log(obj);<br><span class="hljs-comment">// expected output: Object &#123; foo: &quot;bar&quot;, baz: 42 &#125;</span><br></code></pre></td></tr></table></figure><h2 id="is"><a href="#is" class="headerlink" title="is"></a>is</h2><ul><li>判断两个值是否是相同的值</li></ul><h3 id="判断两个是否相同的成立方式"><a href="#判断两个是否相同的成立方式" class="headerlink" title="判断两个是否相同的成立方式"></a>判断两个是否相同的成立方式</h3><ul><li>两个值都是 undefined</li><li>两个值都是 null</li><li>两个值都是 true 或者都是 false</li><li>两个值是由相同个数的字符按照相同的顺序组成的字符串</li><li>两个值指向同一个对象</li><li>两个值都是数字并且<ul><li>都是正零 +0</li><li>都是负零 -0</li><li>都是 NaN</li><li>都是除零和 NaN 外的其它同一个数字</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>object</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript的奇技淫巧</title>
    <link href="/posts/123ffaad/"/>
    <url>/posts/123ffaad/</url>
    
    <content type="html"><![CDATA[<h2 id="复制数组"><a href="#复制数组" class="headerlink" title="复制数组"></a>复制数组</h2><ul><li>使用…</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> arr1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>];<br><span class="hljs-keyword">let</span> arr2 = [...arr1];<br><span class="hljs-comment">// 输出两个数组</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;arr1&#x27;</span>, arr1);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;arr2&#x27;</span>, arr2);<br><span class="hljs-comment">// 修改第一个数组</span><br>arr1[<span class="hljs-number">0</span>] = <span class="hljs-number">110</span>;<br>arr2[<span class="hljs-number">1</span>] = <span class="hljs-number">221</span>;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;--------------------------------&#x27;</span>)<br><span class="hljs-comment">// 输出两个数组</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;arr1&#x27;</span>, arr1);<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;arr2&#x27;</span>, arr2);<br></code></pre></td></tr></table></figure><ul><li>输出结果，两个数组已经不关联了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">arr1 [ 1, 2, 3, 4, 5 ]<br>arr2 [ 1, 2, 3, 4, 5 ]<br>--------------------------------<br>arr1 [ 110, 2, 3, 4, 5 ]<br>arr2 [ 1, 221, 3, 4, 5 ]<br></code></pre></td></tr></table></figure><h2 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h2><p>js取整方法一般有以下几种 toFixed(0)之类的就不列出了</p><ul><li>Math.round(x)</li><li>Math.floor(x)</li><li>Math.ceil(x)</li><li>~~x</li></ul><h3 id="可把一个数字舍入为最接近的整数"><a href="#可把一个数字舍入为最接近的整数" class="headerlink" title="可把一个数字舍入为最接近的整数"></a>可把一个数字舍入为最接近的整数</h3><ul><li>下面的答案是什么？</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">Math</span>.round(-<span class="hljs-number">12.5</span>) = ?<br></code></pre></td></tr></table></figure><ul><li>就算知道答案也要思考一下</li><li>临界值比较模糊不适合逻辑思考</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">Math</span>.round(-<span class="hljs-number">12.5</span>) = -<span class="hljs-number">12</span><br><span class="hljs-built_in">Math</span>.round(<span class="hljs-number">12.5</span>) = <span class="hljs-number">13</span><br></code></pre></td></tr></table></figure><h3 id="看看floor和ceil吧"><a href="#看看floor和ceil吧" class="headerlink" title="看看floor和ceil吧"></a>看看floor和ceil吧</h3><ul><li>在[-∞ , +∞]的轴上</li><li>floor 会变成当前最近左边的整数</li><li>ceil 会变成当前最近右边的整数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">Math</span>.floor(-<span class="hljs-number">12.5</span>) = -<span class="hljs-number">13</span><br><span class="hljs-built_in">Math</span>.floor(<span class="hljs-number">12.5</span>) = <span class="hljs-number">12</span><br><span class="hljs-built_in">Math</span>.ceil(-<span class="hljs-number">12.5</span>) = -<span class="hljs-number">12</span><br><span class="hljs-built_in">Math</span>.ceil(<span class="hljs-number">12.5</span>) = <span class="hljs-number">13</span><br></code></pre></td></tr></table></figure><h3 id="我最爱用的"><a href="#我最爱用的" class="headerlink" title="我最爱用的~~"></a>我最爱用的~~</h3><p>效果和Math.floor一致，可是只要两个符号，这个可以偷懒！！！</p><h3 id="创建一个带区间的整数随机数"><a href="#创建一个带区间的整数随机数" class="headerlink" title="创建一个带区间的整数随机数"></a>创建一个带区间的整数随机数</h3><ul><li>参数可以是一个最大值</li><li>也可以是最大值和最小值</li><li>不包含最大值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomInt</span>(<span class="hljs-params">max, min</span>) </span>&#123;<br>    min = min || <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> ~~((max - min) * <span class="hljs-built_in">Math</span>.random() + min);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="使用-或者-amp-amp-设置和判断值"><a href="#使用-或者-amp-amp-设置和判断值" class="headerlink" title="使用 || 或者 &amp;&amp; 设置和判断值"></a>使用 || 或者 &amp;&amp; 设置和判断值</h2><table><thead><tr><th>类型</th><th>转换类型</th></tr></thead><tbody><tr><td>非0数字（含Infinity）</td><td>true</td></tr><tr><td>Object对象</td><td>true</td></tr><tr><td>非空字符串</td><td>true</td></tr><tr><td>0/NaN</td><td>false</td></tr><tr><td>null</td><td>false</td></tr><tr><td>undefined</td><td>false</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">min = min || <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><ul><li>借用上面的一段代码</li><li>先判断是否存在min</li><li>||的逻辑是先判断左边是否为真 为真返回左边 不为真直接返回右边</li><li>一般用于判断非空和初始化</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> x = <span class="hljs-number">1</span>;<br>x = x &amp;&amp; x - <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><ul><li>当验证了x的存在时 再对x进行操作</li><li>相对用的比较少 因为功能和三目运算符有些重叠的地方</li><li>也可以使用||和&amp;&amp;实现三目运算符的功能</li></ul><h2 id="JS次方"><a href="#JS次方" class="headerlink" title="JS次方"></a>JS次方</h2><ul><li>使用**代替Math.pow</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">let</span> x = <span class="hljs-number">5</span><br><span class="hljs-keyword">let</span> a = <span class="hljs-built_in">Math</span>.pow(x, <span class="hljs-number">3</span>)<br><span class="hljs-keyword">let</span> b = x**<span class="hljs-number">3</span><br><span class="hljs-built_in">console</span>.log(a)<br><span class="hljs-built_in">console</span>.log(b)<br><span class="hljs-comment">// a = 125</span><br><span class="hljs-comment">// b = 125</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏编程的常用方法JS&amp;TS篇</title>
    <link href="/posts/5b64b49/"/>
    <url>/posts/5b64b49/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>游戏开发之中有许多固定的需求，比如排序，如果让你手写的话，很多人只能写出一个冒泡排序，想了想还是使用语言自带的快速排序。那么如果是乱序呢？脑子里面第一时间想到的肯定是好几个循环的东西。这种固定的需求，需要的只是找到好的轮子，然后安上，下面就是记录轮子的地方，会不定时有新的轮子加入。</p><h3 id="乱序算法"><a href="#乱序算法" class="headerlink" title="乱序算法"></a>乱序算法</h3><ul><li>棋牌游戏中经常会用到的洗牌</li></ul><h4 id="Fisher-Yates-Shuffling算法"><a href="#Fisher-Yates-Shuffling算法" class="headerlink" title="Fisher-Yates Shuffling算法"></a>Fisher-Yates Shuffling算法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">shuffle</span>(<span class="hljs-params">arr</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> i,<br>        j,<br>        temp;<br>    <span class="hljs-keyword">for</span> (i = arr.length - <span class="hljs-number">1</span>; i &gt; <span class="hljs-number">0</span>; i--) &#123;<br>        j = <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (i + <span class="hljs-number">1</span>));<br>        temp = arr[i];<br>        arr[i] = arr[j];<br>        arr[j] = temp;<br>    &#125;<br>    <span class="hljs-keyword">return</span> arr;<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>];<br><span class="hljs-keyword">var</span> b = shuffle(a);<br><span class="hljs-built_in">console</span>.log(b);<br><span class="hljs-comment">// [2, 7, 8, 6, 5, 3, 1, 4]</span><br></code></pre></td></tr></table></figure><h3 id="随机数-带种子"><a href="#随机数-带种子" class="headerlink" title="随机数(带种子)"></a>随机数(带种子)</h3><ul><li>帧同步中需要固定的伪随机</li><li>去除~~可以获得小数的随机</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 带种子的整数随机数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> </span>max </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;*&#125;</span> </span>min </span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">randomInt</span>(<span class="hljs-params">max, min</span>) </span>&#123;<br>    min = min || <span class="hljs-number">0</span>;<br>    randomInt.seed = (randomInt.seed * <span class="hljs-number">9301</span> + <span class="hljs-number">49297</span>) % <span class="hljs-number">233280</span>;<br>    <span class="hljs-keyword">let</span> rand = randomInt.seed / <span class="hljs-number">233280.0</span>;<br>    <span class="hljs-keyword">return</span> min + ~~(rand * (max - min));<br>&#125;<br>randomInt.seed = <span class="hljs-number">200</span>;<br></code></pre></td></tr></table></figure><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;<br>    <span class="hljs-built_in">console</span>.log(randomInt(<span class="hljs-number">10</span>));<br>&#125;<br><span class="hljs-comment">// 1  </span><br><span class="hljs-comment">// 8  </span><br><span class="hljs-comment">// 6  </span><br><span class="hljs-comment">// 7  </span><br><span class="hljs-comment">// 0  </span><br><span class="hljs-comment">// 7  </span><br><span class="hljs-comment">// 1  </span><br><span class="hljs-comment">// 2  </span><br><span class="hljs-comment">// 6  </span><br><span class="hljs-comment">// 9</span><br></code></pre></td></tr></table></figure><h3 id="获取文件后缀名"><a href="#获取文件后缀名" class="headerlink" title="获取文件后缀名"></a>获取文件后缀名</h3><ul><li>获取文件的后缀名 如果没有后缀名</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFileExtension</span>(<span class="hljs-params">fileName: string</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> fileName.slice((fileName.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>) - <span class="hljs-number">1</span> &gt;&gt;&gt; <span class="hljs-number">0</span>) + <span class="hljs-number">2</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(getFileExtension3(<span class="hljs-string">&#x27;&#x27;</span>));                            <span class="hljs-comment">// &#x27;&#x27;</span><br><span class="hljs-built_in">console</span>.log(getFileExtension3(<span class="hljs-string">&#x27;filename&#x27;</span>));                    <span class="hljs-comment">// &#x27;&#x27;</span><br><span class="hljs-built_in">console</span>.log(getFileExtension3(<span class="hljs-string">&#x27;filename.txt&#x27;</span>));                <span class="hljs-comment">// &#x27;txt&#x27;</span><br><span class="hljs-built_in">console</span>.log(getFileExtension3(<span class="hljs-string">&#x27;.hiddenfile&#x27;</span>));                 <span class="hljs-comment">// &#x27;&#x27;</span><br><span class="hljs-built_in">console</span>.log(getFileExtension3(<span class="hljs-string">&#x27;filename.with.many.dots.ext&#x27;</span>)); <span class="hljs-comment">// &#x27;ext&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="下载头像前排除本地头像"><a href="#下载头像前排除本地头像" class="headerlink" title="下载头像前排除本地头像"></a>下载头像前排除本地头像</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 本地的头像数据</span><br><span class="hljs-keyword">const</span> LOCAL_AVATARS = [<br>    <span class="hljs-string">&#x27;head1&#x27;</span>,<br>    <span class="hljs-string">&#x27;head2&#x27;</span>,<br>    <span class="hljs-string">&#x27;head3&#x27;</span>,<br>    <span class="hljs-string">&#x27;head4&#x27;</span>,<br>    <span class="hljs-string">&#x27;head5&#x27;</span>,<br>    <span class="hljs-string">&#x27;head6&#x27;</span>,<br>    <span class="hljs-string">&#x27;head7&#x27;</span>,<br>];<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  判断是否存在本地头像</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">avatar</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;boolean&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hasLocalAvatar</span>(<span class="hljs-params">avatar: <span class="hljs-built_in">string</span></span>): <span class="hljs-title">boolean</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> LOCAL_AVATARS.some(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> avatar == v;<br>    &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><h4 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h4><ul><li>ts代码</li><li>返回是否存在本地头像</li></ul><h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><h4 id="截取固定字符数量-中英文都算一个字符数量"><a href="#截取固定字符数量-中英文都算一个字符数量" class="headerlink" title="截取固定字符数量(中英文都算一个字符数量)"></a>截取固定字符数量(中英文都算一个字符数量)</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 截取字符串</span><br><span class="hljs-comment"> * 中文和英文都算一个字符</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">text</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">numSub</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span></span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cutText</span>(<span class="hljs-params">text: <span class="hljs-built_in">string</span>, numSub: <span class="hljs-built_in">number</span></span>): <span class="hljs-title">string</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(text.length &gt; numSub)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;text.substring(<span class="hljs-number">0</span>, numSub)&#125;</span>...`</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> text<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="截取固定字符长度"><a href="#截取固定字符长度" class="headerlink" title="截取固定字符长度"></a>截取固定字符长度</h4><ul><li>用于固定长度的展示</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * js截取字符串，中英文都能用 </span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@export</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;string&#125;</span> <span class="hljs-variable">str</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-type">&#123;number&#125;</span> <span class="hljs-variable">len</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cutStr</span>(<span class="hljs-params">str: <span class="hljs-built_in">string</span>, len: <span class="hljs-built_in">number</span></span>) </span>&#123;<br>        <span class="hljs-keyword">let</span> l = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">let</span> ret = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span> , n = str.length; i &lt; n; i++) &#123;<br>            <span class="hljs-keyword">let</span> a = str.charAt(i);<br>            l++;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">escape</span>(a).length &gt; <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-comment">//中文字符的长度经编码之后大于4  </span><br>                l++;<br>            &#125;<br>            ret = ret.concat(a)<br>            <span class="hljs-keyword">if</span> (l &gt;= len) &#123;<br>                <span class="hljs-built_in">console</span>.log(l)<br>                <span class="hljs-built_in">console</span>.log(len)<br>                <span class="hljs-keyword">if</span>(i != n - <span class="hljs-number">1</span>) &#123;<br>                    ret = ret.concat(<span class="hljs-string">&#x27;...&#x27;</span>)<br>                &#125;<br>                <span class="hljs-keyword">return</span> ret<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//如果给定字符串小于指定长度，则返回源字符串；  </span><br>        <span class="hljs-keyword">if</span> (l &lt; len) &#123;<br>            <span class="hljs-keyword">return</span> str<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="guid生成器"><a href="#guid生成器" class="headerlink" title="guid生成器"></a>guid生成器</h4><ul><li>可以生成guid</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">guid</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#x27;</span>.replace(<span class="hljs-regexp">/[xy]/g</span>, <span class="hljs-function">(<span class="hljs-params">c</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> r = <span class="hljs-built_in">Math</span>.random()*<span class="hljs-number">16</span>|<span class="hljs-number">0</span>, v = c == <span class="hljs-string">&#x27;x&#x27;</span> ? r : (r&amp;<span class="hljs-number">0x3</span>|<span class="hljs-number">0x8</span>)<br>        <span class="hljs-keyword">return</span> v.toString(<span class="hljs-number">16</span>)<br>    &#125;).toUpperCase()<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>洗牌算法</tag>
      
      <tag>种子随机数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NodeJs小船起航</title>
    <link href="/posts/95f6902a/"/>
    <url>/posts/95f6902a/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>  Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p><h3 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h3><p><a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p><p><strong>沉稳向左，激进向右</strong></p><h3 id="查看Node安装版本"><a href="#查看Node安装版本" class="headerlink" title="查看Node安装版本"></a>查看Node安装版本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">node -v<br></code></pre></td></tr></table></figure><h3 id="问候一下"><a href="#问候一下" class="headerlink" title="问候一下"></a>问候一下</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Hello World!&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="NodeJs设置npm本地仓库地址"><a href="#NodeJs设置npm本地仓库地址" class="headerlink" title="NodeJs设置npm本地仓库地址"></a>NodeJs设置npm本地仓库地址</h2><h3 id="在nodejs文件夹里面新建以下两个目录："><a href="#在nodejs文件夹里面新建以下两个目录：" class="headerlink" title="在nodejs文件夹里面新建以下两个目录："></a>在nodejs文件夹里面新建以下两个目录：</h3><ul><li><strong>node_global</strong></li><li><strong>node_cache</strong></li></ul><h3 id="启动CMD依次执行以下两条命令（方法1）"><a href="#启动CMD依次执行以下两条命令（方法1）" class="headerlink" title="启动CMD依次执行以下两条命令（方法1）"></a>启动CMD依次执行以下两条命令（方法1）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;XXX\nodejs\node_global&quot;</span><br>npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;XXX\nodejs\node_cache&quot;</span><br></code></pre></td></tr></table></figure><h3 id="修改配置文件（方法2）"><a href="#修改配置文件（方法2）" class="headerlink" title="修改配置文件（方法2）"></a>修改配置文件（方法2）</h3><p><strong>修改..\nodejs\node_modules\npm文件夹下的npmrc文件</strong></p><p><em>加入如下的文本:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">prefix = D:\Program Files\nodejs\node_global<br>cache = D:\Program Files\nodejs\node_cache<br></code></pre></td></tr></table></figure><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">NODE_PATH = XXX\Node\nodejs<br>PATH = %NODE_PATH%\;%NODE_PATH%\node_modules;%NODE_PATH%\node_global;<br></code></pre></td></tr></table></figure><p><em>重启系统或重启explorer.exe，使环境变量生效</em></p><h3 id="安装模块试试上面的设置是否生效"><a href="#安装模块试试上面的设置是否生效" class="headerlink" title="安装模块试试上面的设置是否生效"></a>安装模块试试上面的设置是否生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install express -g <br>// -g意思是安装到global目录下，也就是上面设置的XXX\nodejs\node_global<br></code></pre></td></tr></table></figure><h2 id="设置NodeJs的国内仓库"><a href="#设置NodeJs的国内仓库" class="headerlink" title="设置NodeJs的国内仓库"></a>设置NodeJs的国内仓库</h2><ul><li>通过config命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br>npm config list<br></code></pre></td></tr></table></figure><ul><li>命令行指定 </li></ul><p><strong>每次执行命令前加入–registry指定仓库路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm --registry https://registry.npm.taobao.org install<br></code></pre></td></tr></table></figure><ul><li>编辑 ~/.npmrc 加入下面内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">registry = https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>server</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
